head	1.5;
access;
symbols
	Helios_1_3_1:1.5
	Helios_C40_1_3_Official_Release:1.4
	Helios-C40:1.4
	Alenia_release:1.4
	Helios1_3:1.4
	C40_Field_Test_2:1.4
	C40_Field_Test_R1:1.4
	Helios13_beta:1.4
	Helios1_2_2:1.4
	Helios1_2_2Beta:1.4
	Helios1_2_1:1.4
	Helios1_2:1.4
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.5
date	93.08.18.16.17.33;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	90.10.31.10.59.05;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.10.30.13.58.36;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	90.10.16.10.34.30;	author nick;	state Exp;
branches
	1.2.1.1;
next	1.1;

1.1
date	90.09.05.11.09.31;	author nick;	state Exp;
branches;
next	;

1.2.1.1
date	90.10.31.10.58.38;	author paul;	state Exp;
branches;
next	;


desc
@@


1.5
log
@fixed for C++ compiler on Xputer
@
text
@/* sys/types.h: Posix library types					*/
/* SccsId: %W% %G% (C) Copyright 1990, Perihelion Software Ltd.		*/
/* RcsId: $Id: types.h,v 1.4 90/10/31 10:59:05 paul Exp $ */

#ifndef _types_h
#define _types_h

#ifdef __cplusplus
#define signed
#endif

#ifndef NULL
#define NULL (0)
#endif

#ifndef __time_h
typedef	unsigned int clock_t; 
typedef	unsigned int time_t;
#endif

typedef	unsigned int dev_t;
typedef	unsigned int gid_t;
typedef	unsigned int ino_t;
typedef	unsigned int mode_t;
typedef	unsigned int nlink_t;
typedef	unsigned int off_t;
typedef   signed int pid_t;
typedef	unsigned int uid_t;

#ifndef _POSIX_SOURCE

typedef unsigned char  u_char;
typedef unsigned short u_short;
typedef unsigned int   u_int;
typedef unsigned long  u_long;
typedef char *         caddr_t;

struct iovec {
	caddr_t		iov_base;
	int		iov_len;
};

/* File descriptor set for select, plus macros to manipulate it */

typedef struct fd_set { int fds_bits[2]; } fd_set;

#define bitsperint (sizeof(int)*8)

#define FD_SETSIZE	64

#define FD_SET(fd,fdset) ((fdset)->fds_bits[(fd)/bitsperint]|=(1<<((fd)%bitsperint)))
#define FD_CLR(fd,fdset) ((fdset)->fds_bits[(fd)/bitsperint]&=~(1<<((fd)%bitsperint)))
#define FD_ISSET(fd,fdset) ((fdset)->fds_bits[(fd)/bitsperint]&(1<<((fd)%bitsperint)))
#define FD_ZERO(fdset) ((fdset)->fds_bits[0]=0,(fdset)->fds_bits[1]=0)

#ifdef _BSD
/* BSD queuing routines */
struct qelem
{
	struct qelem	*q_forw;
	struct qelem 	*q_back;
	char 		 q_data[1];	/* or more */
};
extern void insque(struct qelem *elem, struct qelem *pred);
extern void remque(struct qelem *elem);
#endif

#endif

#endif

/* end of sys/types.h */
@


1.4
log
@changed iovec back to using caddr_t
@
text
@d3 1
a3 1
/* RcsId: $Id: types.h,v 1.2 90/10/16 10:34:30 nick Exp Locker: paul $ */
d7 4
@


1.3
log
@changed type of iov_base field in iovec structure
@
text
@d3 1
a3 1
/* RcsId: $Id: types.h,v 1.2 90/10/16 10:34:30 nick Exp Locker: nickc $ */
d35 1
a35 1
	unsigned char *	iov_base;  /* NB/ not caddr_t since this has no size */
@


1.2
log
@caddr_t changed to char * from void * by popular demand.
@
text
@d3 1
a3 1
/* RcsId: $Id: types.h,v 1.1 90/09/05 11:09:31 nick Exp Locker: nick $ */
d35 1
a35 1
	caddr_t		iov_base;
@


1.2.1.1
log
@no change
@
text
@d3 1
a3 1
/* RcsId: $Id: types.h,v 1.2 90/10/16 10:34:30 nick Exp Locker: paul $ */
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
/* RcsId: $Id$ */
d32 1
a32 1
typedef void *         caddr_t;
@
