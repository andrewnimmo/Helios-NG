head	1.18;
access;
symbols
	Helios_1_3_1:1.18
	Helios_C40_1_3_Official_Release:1.17
	Helios-C40:1.17
	Alenia_release:1.17
	Helios1_3:1.15
	C40_Field_Test_2:1.15
	C40_Field_Test_R1:1.11
	Helios13_beta:1.10
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.3
	Helios1_2:1.2
	V1_2Beta0:1.1;
locks
	tony:1.18; strict;
comment	@ * @;


1.18
date	93.07.27.13.59.18;	author paul;	state Exp;
branches;
next	1.17;

1.17
date	92.11.20.18.04.51;	author nick;	state Exp;
branches;
next	1.16;

1.16
date	92.11.12.17.18.52;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	92.09.25.11.01.42;	author paul;	state Exp;
branches;
next	1.14;

1.14
date	92.09.17.15.47.54;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	92.08.05.10.49.33;	author paul;	state Exp;
branches;
next	1.12;

1.12
date	92.07.27.15.01.08;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	92.06.30.18.20.41;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.06.17.18.28.26;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	92.06.10.15.39.03;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	92.05.14.11.56.29;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.04.16.00.16.36;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	92.04.12.19.55.18;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.05.20.15.09.03;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.04.12.12.50.31;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	91.02.14.22.09.20;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.09.26.17.30.27;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.11.06.14;	author nick;	state Exp;
branches;
next	;


desc
@@


1.18
log
@merged in ARM changes
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--                     H E L I O S   N U C L E U S                      --
--                     ---------------------------                      --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- cpustate.h								--
--                                                                      --
--	CPU save state data structure and fn prototypes			--
--                                                                      --
--	Author:  PAB/JGS 24/10/89					--
--                                                                      --
------------------------------------------------------------------------*/
/* SccsId: %W% %G% Copyright (C) 1987, Perihelion Software Ltd.	*/
/* RcsId: $Id: cpustate.h,v 1.17 1992/11/20 18:04:51 nick Exp paul $ */

#ifndef __cpustate_h
#define __cpustate_h

#ifndef __TRAN	/* None of this is applicable to the transputer. */

#ifndef __helios_h
# include <helios.h>
#endif


#ifdef __ARM
/*		C REG NAME	ASM ALIASES	PCS USE:		*/
typedef struct CPURegs {
	word	R_A1;	   /*	a1/r0		argument variables	*/
	word	R_A2;	   /*	a2/r1 					*/
	word	R_A3;	   /*	a3/r2 					*/
	word	R_A4;	   /* 	a4/r3					*/
	word	R_V1;	   /* 	v1/r4		register variables	*/
	word	R_V2;	   /* 	v2/r5					*/
	word	R_V3;	   /* 	v3/r6					*/
	word	R_V4;	   /* 	v4/r7					*/
	word	R_V5;	   /*	v5/r8					*/
	word	R_MT;	   /*	mt/dp/r9	module table pointer	*/
	word	R_USE;	   /*	use/sl/r10	stack limit		*/
	word	R_FP;	   /*	fp/r11		frame pointer		*/
	word	R_TMP;	   /*	tmp/ip/r12	temporary register	*/
	word	R_SVC_SP;  /*	r13_svc		SVC stack pointer	*/
	word	R_SVC_LR;  /*	r14_svc		SVC link register	*/
	word	R_PC;	   /*	pc/st/r15	program counter		*/
	word	R_USER_SP; /*	usp/sp/r13	User mode stack pointer	*/
	word	R_USER_LR; /*	lr/lk/r14	User mode link register	*/
	word	R_CPSR;    /*	cpsr		ARM6 psr		*/
} CPURegs;
#endif /* __ARM */


#ifdef __C40
typedef struct CPURegs {
	     /* C PCS BINDING NAME: */
				/* 'C40 REGISTER NAME: */
				        /* FUNCTION: */
							/* TYPE: */

	uword	PC;		/*	   PC of sliced thread */
	word	R_ST;		/* st :	   status reg */

							/* C ADDRESS REGS */
	word	R_ADDR1;	/* ar0: */
	word	R_ADDR2;	/* ar1: */
	word	R_ADDR3;	/* ar2: */
	word	R_ADDR4;	/* ar3: */

							/* MISC ADDRESS REGS */
	word	R_MT;		/* ar4:    module table pointer */
	word	R_ATMP;		/* ar5:    temporary address reg */
	word	R_USP;		/* ar6:    user stack pointer */
	word	R_FP;		/* ar7:    frame pointer */

							/* REGISTER ARGUMENTS */
	word	R_A1;		/* r0 :    first arg and result reg */
	word	R_A1f;		/* r0 :    fp extension to 32bit reg */

	word	R_A2;		/* r1 :    32bits */
	word	R_A2f;		/* r1 :    fpext */
	word	R_A3;		/* r2 :    32bits */
	word	R_A3f;		/* r2 :    fpext */
	word	R_A4;		/* r3 :    32bits */
	word	R_A4f;		/* r3 :    fpext */

							/* REGISTER VARIABLES */
	word	R_FV1;		/* r4 :    32bits */
	word	R_FV1f;		/* r4 :    fpext */
	word	R_FV2;		/* r5 :    32bits */
	word	R_FV2f;		/* r5 :    fpext */
	word	R_FT1;		/* r6 :    32bits */
	word	R_FT1f;		/* r6 :    fpext */
	word	R_FT2;		/* r7 :    32bits */
	word	R_FT2f;		/* r7 :    fpext */

							/* TEMP REGISTERS */
	word	R_V3;		/* r8 :    32bits */
	word	R_V3f;		/* r8 :    fpext */
	word	R_V4;		/* r9 :    32bits */
	word	R_V4f;		/* r9 :    fpext */
	word	R_T1;		/* r10:    32bits */
	word	R_T1f;		/* r10:    fpext */

							/* MISC REGISTERS */
	uword	R_LR;		/* r11:   link register */
	word	R_LRf;		/* r11:   fpext */
	word	R_V1;		/* dp :   data page pointer */
	word	R_BASE;		/* ir0:   byte address base */
	word	R_USE;		/* ir1:   user stack end pointer */
	word	R_V2;		/* bk :   temporary register */

							/* TEMP BACK-END REGS */
	word	R_TMP1; 	/* rs : */
	word	R_TMP2; 	/* re : */
	word	R_TMP3; 	/* rc : */

	/* Note that iie, iif, die and system stack pointer (sp) are never */
	/* saved by SaveCPUState. */
} CPURegs;
#endif /* __C40 */


/* The save state structure holds the CPU context of an unscheduled thread. */
typedef struct SaveState {
	struct SaveState *next;		/* For queueing on run Q's */
					/* Next MUST be first element */
	struct SaveState *nextknown;	/* For exec housekeeping */
	word		priority;	/* thread priority */
	uword		endtime;	/* Wakeup time if Sleep()ing */
	word		status;		/* Thread status */
	void		*stack_chunk;	/* current stack chunk header */
	word		TimedWaitUtil;	/* true if OK, false if timedout */
	word		CPUTimeTotal;	/* milliseconds of CPU time used */
	word		LastTimeStamp;	/* Time stamp at last resume/slice */
	word		InitialTime;	/* Startup time of thread (1970 secs) */
	VoidFnPtr	InitialFn;	/* Root fn of thread */
	struct CPURegs	CPUcontext;	/* CPU state of this thread */
} SaveState;


/* Function prototypes: */

/* Save current CPU state, returns FALSE if saved, TRUE if return */
/* is due to a RestoreCPUState(). RestoreCPUState() might not save some */
/* of the temporary and argument PCS registers */
extern bool SaveCPUState(CPURegs *cpustate);

/* Restore a CPU state.  */
extern void RestoreCPUState(CPURegs *cpustate);
#endif /* __TRAN */


/* SaveState status values: */
/* *Warning* If these values are changed then update threadps. */

#define THREAD_STARTUP		0	/* thread is just starting */
#define THREAD_SLICED		1	/* runnable, was sliced, needs RTI */
#define THREAD_RUNNABLE		2	/* runnable, resheduled, needs RestoreCPUState2() */
#define THREAD_RUNNING		3	/* current CPU thread */
#define THREAD_KILLED		4	/* thread has been Stop()'ed */
#define THREAD_BOGUS		5	/* illegal state of thread */
					/* THREAD_SLICED status in normal dispatch */
#define THREAD_SAVED		6	/* only use for user SaveCPUState() */
#define THREAD_SLEEP		7	/* on timer Q */ 
#define THREAD_TIMEDWAIT	8	/* on timer and semaphore Q's */
#define THREAD_SEMAPHORE	9	/* on semaphore Q */
#define THREAD_MSGREAD		10	/* blocked reading msg */
#define THREAD_MSGWRITE		11	/* blocked writing internal msg */

#define THREAD_MULTIWAIT	12	/* blocked during MultiWait */

#define THREAD_LINKRX		13	/* blocked reading external msg */
#define THREAD_LINKTX		14	/* blocked writing external msg */

#define THREAD_LINKWRITEQ	15	/* blocked on queue to write external msg */
#define THREAD_LINKWAIT		16	/* guardian waiting on dumb link */
#define THREAD_LINKEND		17	/* waiting for linktx/rx to complete */
					/* while in kernel: KillTask, */
					/* Configure, WaitLink or JumpLink */
#define THREAD_LINKXOFF		18	/* waiting for XON on link */

#define THREAD_LINKTHRU1	19	/* single buffering thru-routed msg */
#define THREAD_LINKTHRU2	20	/* double buffering thru-routed msg */

#ifdef __C40
# define THREAD_DMAREQ		21	/* waiting for a DMA engine (unused) */
#endif

#define THREAD_MSGWRITE2	22	/* blocked writing internal msg */


#endif /*__cpustate_h */


/* end of cpustate.h */

@


1.17
log
@Some fields of savestate changed to unsigned since otherwise they
compare wrongly when code is in global RAM, which has top bit set.
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.15 1992/09/25 11:01:42 paul Exp $ */
d50 1
@


1.16
log
@removed unneeded field and rationalised Save/RestoreCPUState()
@
text
@d61 1
a61 1
	word	PC;		/*	   PC of sliced thread */
d106 1
a106 1
	word	R_LR;		/* r11:   link register */
@


1.15
log
@updated for new ARM port
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.14 1992/09/17 15:47:54 paul Exp $ */
d30 1
d32 18
a49 16
	word	a1;		/* argument variables */
	word	a2;
	word	a3;
	word	a4;
	word	v1;		/* register variables */
	word	v2;
	word	v3;
	word	v4;
	word	v5;
	word	dp;		/* module table pointer */
	word	sl;		/* stack limit */
	word	fp;		/* frame pointer */
	word	ip;		/* temporary register */
	word	sp;		/* stack pointer */
	word	lk;		/* link register */
	word	pc;		/* program counter */
d126 3
a128 4
	struct SaveState *next;		/* for queueing on run Q's */
					/* next MUST be first element */
	struct SaveState *nextknown;	/* for exec housekeeping */
	struct SaveState *stdsavearea;	/* permanent save area */
d144 7
a150 15
/* Save current thread state, returns FALSE if saved, TRUE if return */
/* is due to a RestoreCPUState(). */
extern bool SaveCPUState(SaveState *threadstate);

/* Restore a thread state.  */
extern void RestoreCPUState(SaveState *threadstate);

# ifdef __C40
/* Save just CPU context, returns FALSE if saved, TRUE if return */
/* is due to a RestoreCPUState2(). */
extern word SaveCPUState2(CPURegs *cpustate);

/* Restore a CPU context. */
extern void RestoreCPUState2(CPURegs *cpustate);
# endif
d197 1
@


1.14
log
@new field to support TimedWait added
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.13 1992/08/05 10:49:33 paul Exp $ */
d22 1
a22 1
#ifndef __TRAN	/* non of this is applicable to the transputer */
d30 1
a30 19
/* These should be be kept in-line with the TRUE definitions in
 * "/helios/include/abcARM/asm/arm.s"
 */
# define sp_offset	(0x00000080)
# if 1 /* see the comments in "include/abcARM/asm/arm.s" */
#  define sl_offset	(0x00000200 + sp_offset)
# else
#  define sl_offset	(0x00000300 + sp_offset)
# endif

typedef struct SaveState {
	struct SaveState *next;	/* NULL (used by Scheduler) */
	word	endtime;	/* NULL (used by Scheduler) */
	word	timeslice;	/* NULL (used by Scheduler) */
	word	pri;		/* current process priority */
        word	fparea;		/* fp work area */
	word	initial_dp;	/* dp given to CreateProcess */
	word	memmap;		/* process MEMMAP state */
	word	flags;		/* SaveState state flags */
d47 2
a48 3
	word	usr_r13;	/* explicit USR mode r13 */
	word	usr_r14;	/* explicit USR mode r14 */
} SaveState;
a49 1
#else
d51 1
a51 1
# ifdef __C40
d53 1
a53 1
		     /* C PCS BINDING NAME: */
d56 1
d61 1
a61 1
						/* C ADDRESS REGS */
d118 1
a118 4

# else
#  error "Processor register structure not defined"
# endif
d121 1
a121 1
/* The save state structure holds the CPU context of an unscheduled thread */
d139 2
a140 1
#endif
d142 2
a143 2
/* save current thread state, returns FALSE if saved, TRUE if return */
/* is due to a RestoreCPUState() */
d146 1
a146 1
/* restore a thread state  */
d151 1
a151 1
/* is due to a RestoreCPUState2() */
d154 1
a154 1
/* restore a CPU context */
d159 3
a161 2
/* SaveState status values */
/* *Warning*: if these values are changed then update threadps */
a199 1

@


1.13
log
@added fields to record processor and run time on a per thread basis
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.12 1992/07/27 15:01:08 paul Exp $ */
d153 1
@


1.12
log
@added stack extension and time field to save state
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.11 1992/06/30 18:20:41 paul Exp $ */
d153 4
a156 3
	word		starttime;	/* startup time of thread */
	word		CPUtime;	/* milliseconds of CPU time used */
	VoidFnPtr	InitialFn;	/* root fn of thread */
@


1.11
log
@changed proto for savecpustate()
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.10 1992/06/17 18:28:26 paul Exp $ */
d152 2
@


1.10
log
@added SLICE_STARTUP and altered order of status values.
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.9 1992/06/10 15:39:03 paul Exp $ */
d161 1
a161 1
extern word SaveCPUState(SaveState *threadstate);
@


1.9
log
@updated save state to contain pointer to thread's root fn
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.8 1992/05/14 11:56:29 paul Exp $ */
d179 6
a184 9
#define THREAD_RUNNING		1	/* current CPU thread */
#define THREAD_SLICED		2	/* runnable, was sliced, needs RTI */
#define THREAD_RUNNABLE		3	/* runnable, resheduled, needs RestoreCPUState2() */
#define THREAD_SLEEP		4	/* on timer Q */ 
#define THREAD_TIMEDWAIT	5	/* on timer and semaphore Q's */
#define THREAD_SEMAPHORE	6	/* on semaphore Q */
#define THREAD_SAVED		7	/* only use for user SaveCPUState() */
#define THREAD_KILLED		8	/* thread has been Stop()'ed */
#define THREAD_BOGUS		9	/* illegal state of thread */
d186 4
@


1.8
log
@new register naming scheme for new PCS
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.7 1992/04/16 00:16:36 paul Exp $ */
d153 1
d210 3
@


1.7
log
@added Thread_MULTIWAIT
,.
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.6 1992/04/12 19:55:18 paul Exp $ */
a71 1
/* @@@@@@ change these to reflect latest register alloc scheme */
a91 1
#if 1
a128 39
#else /* tmp old copy of register */
							/* REGISTER ARGUMENTS */
	word	R_A1;		/* r0 :    first arg and result reg */
	word	R_R0f;		/* r0 :    fp extension to 32bit reg */

	word	R_A2;		/* r1 :    32bits */
	word	R_R1f;		/* r1 :    fpext */
	word	R_A3;		/* r2 :    32bits */
	word	R_R2f;		/* r2 :    fpext */
	word	R_A4;		/* r3 :    32bits */
	word	R_R3f;		/* r3 :    fpext */

							/* REGISTER VARIABLES */
	word	R_V1;		/* r4 :    32bits */
	word	R_R4f;		/* r4 :    fpext */
	word	R_V2;		/* r5 :    32bits */
	word	R_R5f;		/* r5 :    fpext */
	word	R_V3;		/* r6 :    32bits */
	word	R_R6f;		/* r6 :    fpext */
	word	R_V4;		/* r7 :    32bits */
	word	R_R7f;		/* r7 :    fpext */

							/* TEMP REGISTERS */
	word	R_T1;		/* r8 :    32bits */
	word	R_R8f;		/* r8 :    fpext */
	word	R_T2;		/* r9 :    32bits */
	word	R_R9f;		/* r9 :    fpext */
	word	R_T3;		/* r10:    32bits */
	word	R_R10f;		/* r10:    fpext */

							/* MISC REGISTERS */
	word	R_LR;		/* r11:   link register */
	word	R_R11f;		/* r11:   fpext */
	word	R_V6;		/* dp :   data page pointer */
	word	R_BASE;		/* ir0:   byte address base */
	word	R_USE;		/* ir1:   user stack end pointer */
	word	R_V5;		/* bk :   temporary register */

#endif
d176 2
@


1.6
log
@updated for C40
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.5 1991/05/20 15:09:03 paul Exp $ */
d230 1
a230 2
#define THREAD_LINKRX		12	/* blocked reading external msg */
#define THREAD_LINKTX		13	/* blocked writing external msg */
d232 6
a237 3
#define THREAD_LINKWRITEQ	14	/* blocked on queue to write external msg */
#define THREAD_LINKWAIT		15	/* guardian waiting on dumb link */
#define THREAD_LINKEND		16	/* waiting for linktx/rx to complete */
d240 1
a240 1
#define THREAD_LINKXOFF		17	/* waiting for XON on link */
d242 2
a243 2
#define THREAD_LINKTHRU1	18	/* single buffering thru-routed msg */
#define THREAD_LINKTHRU2	19	/* double buffering thru-routed msg */
d246 1
a246 1
# define THREAD_DMAREQ		20	/* wiating for a DMA engine */
@


1.5
log
@updated for new ARM scheduler
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.3 91/02/14 22:09:20 paul Exp $ */
d22 2
d25 1
a25 1
#include <helios.h>
d28 2
a29 1
#ifdef __HELIOSARM
d33 36
a68 3
#define sp_offset	(0x00000080)
#if 1 /* see the comments in "include/abcARM/asm/arm.s" */
#define sl_offset	(0x00000200 + sp_offset)
d70 99
a168 1
#define sl_offset	(0x00000300 + sp_offset)
d170 8
d179 6
a184 3
/* This structure should be be kept in-line with the TRUE definition in
 * "/helios/include/hobjasm/exstruct.s".
 */
d186 9
a194 26
	struct SaveState	*next ;		/* NULL (used by Scheduler) */
	word			endtime ;	/* NULL (used by Scheduler) */
	word			timeslice ;	/* NULL (used by Scheduler) */
	word			pri ;		/* current process priority */
        word			fparea ;	/* fp work area */
	word			initial_dp ;	/* dp given to CreateProcess */
	word			memmap ;	/* process MEMMAP state */
	word			flags ;		/* SaveState state flags */
	word			a1 ;		/* argument variables */
	word			a2 ;
	word			a3 ;
	word			a4 ;
	word			v1 ;		/* register variables */
	word			v2 ;
	word			v3 ;
	word			v4 ;
	word			v5 ;
	word			dp ;		/* module table pointer */
	word			sl ;		/* stack limit */
	word			fp ;		/* frame pointer */
	word			ip ;		/* temporary register */
	word			sp ;		/* stack pointer */
	word			lk ;		/* link register */
	word			pc ;		/* program counter */
	word			usr_r13 ;	/* explicit USR mode r13 */
	word			usr_r14 ;	/* explicit USR mode r14 */
d196 1
a196 2
#else
#error "Processor specific SaveState structure not defined"
d199 43
a241 4
typedef struct ProcessQ {
	SaveState *head;
	SaveState *tail;
} ProcessQ;
d243 3
a245 2
extern word SaveCPUState(SaveState *cpustate);
extern void RestoreCPUState(SaveState *cpustate);
d247 1
a248 1
#endif
a249 1
/* -- End of cpustate.h */
d251 1
@


1.4
log
@added TimedWait() semaphore operation (ARM only)
@
text
@d41 4
a44 3
	struct SaveState	*next ;		/* NULL (used by scheduler) */
	word			endtime ;	/* NULL (used by scheduler) */
	word			pri ;
@


1.3
log
@abc changes in line with arm exec
@
text
@d17 1
a17 1
/* RcsId: $Id: cpustate.h,v 1.2 90/09/26 17:30:27 paul Exp $ */
d38 1
a38 1
 * "/helios/include/hobjasm/exstruct.s"
d47 1
d64 2
@


1.2
log
@arm integration with 1.2 changes
@
text
@d17 1
a17 1
/* RcsId: $Id$ */
d27 2
a28 2
/* This should be be kept in-line with the TRUE definition in
 * "/helios/include/hobjasm/arm.s"
d30 6
a35 1
#define sl_offset	(0x00000080)
d46 1
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
--	Author:  PAB 24/10/89						--
d17 1
a17 1
/* $Id$ */
d27 2
a28 2
/* This should be kept in-line with the TRUE structure definition in
 * "kernel/armexec/exstruct-a"
d30 5
d40 1
@
