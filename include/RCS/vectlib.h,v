head	1.5;
access;
symbols
	Helios_1_3_1:1.5
	Helios_C40_1_3_Official_Release:1.5
	Helios-C40:1.5
	Alenia_release:1.5
	Helios1_3:1.5
	C40_Field_Test_2:1.5;
locks; strict;
comment	@ * @;


1.5
date	92.10.18.14.17.09;	author bart;	state Exp;
branches;
next	1.4;

1.4
date	92.10.15.12.46.51;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	92.10.15.10.52.25;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	92.10.15.08.27.00;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	92.10.14.14.26.57;	author bart;	state Exp;
branches;
next	;


desc
@Header file for the Helios vector library.
@


1.5
log
@Changed uword and word argument types back to int, to keep things simple.
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--               H E L I O S   V E C T O R   L I B R A R Y              --
--               -----------------------------------------              --
--                                                                      --
--             Copyright (C) 1992, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- vectlib.h								--
--                                                                      --
--	Author:  BLV 11/10/92						--
--                                                                      --
------------------------------------------------------------------------*/
/* $Id: vectlib.h,v 1.4 1992/10/15 12:46:51 nickc Exp bart $ */

extern void	VfAdd( int n, float * x, float * y );
extern void	VfSub( int n, float * x, float * y );
extern void	VfMul( int n, float * x, float * y );
extern void	VfDiv( int n, float * x, float * y );

extern void	VdAdd( int n, double * x, double * y );
extern void	VdSub( int n, double * x, double * y );
extern void	VdMul( int n, double * x, double * y );
extern void	VdDiv( int n, double * x, double * y );

extern void	VfsAdd( int n, float * x, int x_stride, float * y, int y_stride );
extern void	VfsSub( int n, float * x, int x_stride, float * y, int y_stride );
extern void	VfsMul( int n, float * x, int x_stride, float * y, int y_stride );
extern void	VfsDiv( int n, float * x, int x_stride, float * y, int y_stride );

extern void	VdsAdd( int n, double * x, int x_stride, double * y, int y_stride );
extern void	VdsSub( int n, double * x, int x_stride, double * y, int y_stride );
extern void	VdsMul( int n, double * x, int x_stride, double * y, int y_stride );
extern void	VdsDiv( int n, double * x, int x_stride, double * y, int y_stride );

extern void	VfAddScalar( float  value, int n, float * x );
extern void	VfSubScalar( float  value, int n, float * x );
extern void	VfMulScalar( float  value, int n, float * x );
extern void	VfDivScalar( float  value, int n, float * x );
extern void	VfRecScalar( float  value, int n, float * x );

extern void	VdAddScalar( double value, int n, double * x );
extern void	VdSubScalar( double value, int n, double * x );
extern void	VdMulScalar( double value, int n, double * x );
extern void	VdDivScalar( double value, int n, double * x );
extern void	VdRecScalar( double value, int n, double * x );

extern void	VfsAddScalar( float  value, int n, float * x, int stride );
extern void	VfsSubScalar( float  value, int n, float * x, int stride );
extern void	VfsMulScalar( float  value, int n, float * x, int stride );
extern void	VfsDivScalar( float  value, int n, float * x, int stride );
extern void	VfsRecScalar( float  value, int n, float * x, int stride );

extern void	VdsAddScalar( double value, int n, double * x, int stride );
extern void	VdsSubScalar( double value, int n, double * x, int stride );
extern void	VdsMulScalar( double value, int n, double * x, int stride );
extern void	VdsDivScalar( double value, int n, double * x, int stride );
extern void	VdsRecScalar( double value, int n, double * x, int stride );

extern void	VfMulAdd(  float  value, int n, float *  x, float * y );
extern void	VfsMulAdd( float  value, int n, float *  x, int x_stride, float *  y, int y_stride );
extern void	VdMulAdd(  double value, int n, double * x, double * y );
extern void	VdsMulAdd( double value, int n, double * x, int x_stride, double * y, int y_stride );

extern void	VfCopy(  int n, float *  x, float *  y );
extern void	VdCopy(  int n, double * x, double * y );
extern void	VfsCopy( int n, float *  x, int x_stride, float *  y, int y_stride );
extern void	VdsCopy( int n, double * x, int x_stride, double * y, int y_stride );

extern void	VfFill(  float  value, int n, float *  x );
extern void	VdFill(  double value, int n, double * x );
extern void	VfsFill( float  value, int n, float *  x, int stride );
extern void	VdsFill( double value, int n, double * x, int stride );

extern int	VfMax(   int n, float *  x );
extern int	VdMax(   int n, double * x );
extern int	VfsMax(  int n, float *  x, int stride );
extern int	VdsMax(  int n, double * x, int stride );

extern int	VfMin(   int n, float *  x );
extern int	VdMin(   int n, double * x );
extern int	VfsMin(  int n, float *  x, int stride );
extern int	VdsMin(  int n, double * x, int stride );

extern int	VfAmax(  int n, float *  x );
extern int	VdAmax(  int n, double * x );
extern int	VfsAmax( int n, float *  x, int stride );
extern int	VdsAmax( int n, double * x, int stride );

extern int	VfAmin(  int n, float *  x );
extern int	VdAmin(  int n, double * x );
extern int	VfsAmin( int n, float *  x, int stride );
extern int	VdsAmin( int n, double * x, int stride );

extern float	VfDot(   int n, float *  x, float *  y );
extern double	VdDot(   int n, double * x, double * y );
extern float	VfsDot(  int n, float *  x, int x_stride, float *  y, int y_stride );
extern double	VdsDot(  int n, double * x, int x_stride, double * y, int y_stride );

extern float	VfSum(   int n, float *  x );
extern double	VdSum(   int n, double * x );
extern float	VfsSum(  int n, float *  x, int stride );
extern double	VdsSum(  int n, double * x, int stride );

extern float	VfProd(  int n, float *  x );
extern double	VdProd(  int n, double * x );
extern float	VfsProd( int n, float *  x, int stride );
extern double	VdsProd( int n, double * x, int stride );

@


1.4
log
@added inclusion of helios.h
@
text
@d14 1
a14 1
/* $Id: vectlib.h,v 1.3 1992/10/15 10:52:25 nickc Exp nickc $ */
d16 4
a19 1
#include <helios.h>
d21 4
a24 4
extern void	VfAdd( uword n, float * x, float * y );
extern void	VfSub( uword n, float * x, float * y );
extern void	VfMul( uword n, float * x, float * y );
extern void	VfDiv( uword n, float * x, float * y );
d26 4
a29 4
extern void	VdAdd( uword n, double * x, double * y );
extern void	VdSub( uword n, double * x, double * y );
extern void	VdMul( uword n, double * x, double * y );
extern void	VdDiv( uword n, double * x, double * y );
d31 4
a34 4
extern void	VfsAdd( uword n, float * x, word x_stride, float * y, word y_stride );
extern void	VfsSub( uword n, float * x, word x_stride, float * y, word y_stride );
extern void	VfsMul( uword n, float * x, word x_stride, float * y, word y_stride );
extern void	VfsDiv( uword n, float * x, word x_stride, float * y, word y_stride );
d36 5
a40 4
extern void	VdsAdd( uword n, double * x, word x_stride, double * y, word y_stride );
extern void	VdsSub( uword n, double * x, word x_stride, double * y, word y_stride );
extern void	VdsMul( uword n, double * x, word x_stride, double * y, word y_stride );
extern void	VdsDiv( uword n, double * x, word x_stride, double * y, word y_stride );
d42 5
a46 5
extern void	VfAddScalar( float  value, uword n, float * x );
extern void	VfSubScalar( float  value, uword n, float * x );
extern void	VfMulScalar( float  value, uword n, float * x );
extern void	VfDivScalar( float  value, uword n, float * x );
extern void	VfRecScalar( float  value, uword n, float * x );
d48 5
a52 5
extern void	VdAddScalar( double value, uword n, double * x );
extern void	VdSubScalar( double value, uword n, double * x );
extern void	VdMulScalar( double value, uword n, double * x );
extern void	VdDivScalar( double value, uword n, double * x );
extern void	VdRecScalar( double value, uword n, double * x );
d54 5
a58 5
extern void	VfsAddScalar( float  value, uword n, float * x, word stride );
extern void	VfsSubScalar( float  value, uword n, float * x, word stride );
extern void	VfsMulScalar( float  value, uword n, float * x, word stride );
extern void	VfsDivScalar( float  value, uword n, float * x, word stride );
extern void	VfsRecScalar( float  value, uword n, float * x, word stride );
d60 4
a63 5
extern void	VdsAddScalar( double value, uword n, double * x, word stride );
extern void	VdsSubScalar( double value, uword n, double * x, word stride );
extern void	VdsMulScalar( double value, uword n, double * x, word stride );
extern void	VdsDivScalar( double value, uword n, double * x, word stride );
extern void	VdsRecScalar( double value, uword n, double * x, word stride );
d65 4
a68 4
extern void	VfMulAdd(  float  value, uword n, float *  x, float * y );
extern void	VfsMulAdd( float  value, uword n, float *  x, word x_stride, float *  y, word y_stride );
extern void	VdMulAdd(  double value, uword n, double * x, double * y );
extern void	VdsMulAdd( double value, uword n, double * x, word x_stride, double * y, word y_stride );
d70 4
a73 4
extern void	VfCopy(  uword n, float *  x, float *  y );
extern void	VdCopy(  uword n, double * x, double * y );
extern void	VfsCopy( uword n, float *  x, word x_stride, float *  y, word y_stride );
extern void	VdsCopy( uword n, double * x, word x_stride, double * y, word y_stride );
d75 4
a78 4
extern void	VfFill(  float  value, uword n, float *  x );
extern void	VdFill(  double value, uword n, double * x );
extern void	VfsFill( float  value, uword n, float *  x, word stride );
extern void	VdsFill( double value, uword n, double * x, word stride );
d80 4
a83 4
extern uword	VfMax(   uword n, float *  x );
extern uword	VdMax(   uword n, double * x );
extern uword	VfsMax(  uword n, float *  x, word stride );
extern uword	VdsMax(  uword n, double * x, word stride );
d85 4
a88 4
extern uword	VfMin(   uword n, float *  x );
extern uword	VdMin(   uword n, double * x );
extern uword	VfsMin(  uword n, float *  x, word stride );
extern uword	VdsMin(  uword n, double * x, word stride );
d90 4
a93 4
extern uword	VfAmax(  uword n, float *  x );
extern uword	VdAmax(  uword n, double * x );
extern uword	VfsAmax( uword n, float *  x, word stride );
extern uword	VdsAmax( uword n, double * x, word stride );
d95 4
a98 4
extern uword	VfAmin(  uword n, float *  x );
extern uword	VdAmin(  uword n, double * x );
extern uword	VfsAmin( uword n, float *  x, word stride );
extern uword	VdsAmin( uword n, double * x, word stride );
d100 4
a103 4
extern float	VfDot(   uword n, float *  x, float *  y );
extern double	VdDot(   uword n, double * x, double * y );
extern float	VfsDot(  uword n, float *  x, word x_stride, float *  y, word y_stride );
extern double	VdsDot(  uword n, double * x, word x_stride, double * y, word y_stride );
d105 4
a108 9
extern float	VfSum(   uword n, float *  x );
extern double	VdSum(   uword n, double * x );
extern float	VfsSum(  uword n, float *  x, word stride );
extern double	VdsSum(  uword n, double * x, word stride );

extern float	VfProd(  uword n, float *  x );
extern double	VdProd(  uword n, double * x );
extern float	VfsProd( uword n, float *  x, word stride );
extern double	VdsProd( uword n, double * x, word stride );
@


1.3
log
@used shorter type abbreviations
@
text
@d14 3
a16 1
/* $Id: vectlib.h,v 1.2 1992/10/15 08:27:00 nickc Exp nickc $ */
@


1.2
log
@annoying cosmetic changes made
@
text
@d14 1
a14 1
/* $Id: vectlib.h,v 1.1 1992/10/14 14:26:57 bart Exp nickc $ */
d16 93
a108 93
extern void	VfAdd( unsigned long int n, float * x, float * y );
extern void	VfSub( unsigned long int n, float * x, float * y );
extern void	VfMul( unsigned long int n, float * x, float * y );
extern void	VfDiv( unsigned long int n, float * x, float * y );

extern void	VdAdd( unsigned long int n, double * x, double * y );
extern void	VdSub( unsigned long int n, double * x, double * y );
extern void	VdMul( unsigned long int n, double * x, double * y );
extern void	VdDiv( unsigned long int n, double * x, double * y );

extern void	VfsAdd( unsigned long int n, float * x, signed long int x_stride, float * y, signed long int y_stride );
extern void	VfsSub( unsigned long int n, float * x, signed long int x_stride, float * y, signed long int y_stride );
extern void	VfsMul( unsigned long int n, float * x, signed long int x_stride, float * y, signed long int y_stride );
extern void	VfsDiv( unsigned long int n, float * x, signed long int x_stride, float * y, signed long int y_stride );

extern void	VdsAdd( unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );
extern void	VdsSub( unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );
extern void	VdsMul( unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );
extern void	VdsDiv( unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );

extern void	VfAddScalar( float  value, unsigned long int n, float * x );
extern void	VfSubScalar( float  value, unsigned long int n, float * x );
extern void	VfMulScalar( float  value, unsigned long int n, float * x );
extern void	VfDivScalar( float  value, unsigned long int n, float * x );
extern void	VfRecScalar( float  value, unsigned long int n, float * x );

extern void	VdAddScalar( double value, unsigned long int n, double * x );
extern void	VdSubScalar( double value, unsigned long int n, double * x );
extern void	VdMulScalar( double value, unsigned long int n, double * x );
extern void	VdDivScalar( double value, unsigned long int n, double * x );
extern void	VdRecScalar( double value, unsigned long int n, double * x );

extern void	VfsAddScalar( float  value, unsigned long int n, float * x, signed long int stride );
extern void	VfsSubScalar( float  value, unsigned long int n, float * x, signed long int stride );
extern void	VfsMulScalar( float  value, unsigned long int n, float * x, signed long int stride );
extern void	VfsDivScalar( float  value, unsigned long int n, float * x, signed long int stride );
extern void	VfsRecScalar( float  value, unsigned long int n, float * x, signed long int stride );

extern void	VdsAddScalar( double value, unsigned long int n, double * x, signed long int stride );
extern void	VdsSubScalar( double value, unsigned long int n, double * x, signed long int stride );
extern void	VdsMulScalar( double value, unsigned long int n, double * x, signed long int stride );
extern void	VdsDivScalar( double value, unsigned long int n, double * x, signed long int stride );
extern void	VdsRecScalar( double value, unsigned long int n, double * x, signed long int stride );

extern void	VfMulAdd(  float  value, unsigned long int n, float *  x, float * y );
extern void	VfsMulAdd( float  value, unsigned long int n, float *  x, signed long int x_stride, float *  y, signed long int y_stride );
extern void	VdMulAdd(  double value, unsigned long int n, double * x, double * y );
extern void	VdsMulAdd( double value, unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );

extern void	VfCopy(  unsigned long int n, float *  x, float *  y );
extern void	VdCopy(  unsigned long int n, double * x, double * y );
extern void	VfsCopy( unsigned long int n, float *  x, signed long int x_stride, float *  y, signed long int y_stride );
extern void	VdsCopy( unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );

extern void	VfFill(  float  value, unsigned long int n, float *  x );
extern void	VdFill(  double value, unsigned long int n, double * x );
extern void	VfsFill( float  value, unsigned long int n, float *  x, signed long int stride );
extern void	VdsFill( double value, unsigned long int n, double * x, signed long int stride );

extern unsigned long int	VfMax(   unsigned long int n, float *  x );
extern unsigned long int	VdMax(   unsigned long int n, double * x );
extern unsigned long int	VfsMax(  unsigned long int n, float *  x, signed long int stride );
extern unsigned long int	VdsMax(  unsigned long int n, double * x, signed long int stride );

extern unsigned long int	VfMin(   unsigned long int n, float *  x );
extern unsigned long int	VdMin(   unsigned long int n, double * x );
extern unsigned long int	VfsMin(  unsigned long int n, float *  x, signed long int stride );
extern unsigned long int	VdsMin(  unsigned long int n, double * x, signed long int stride );

extern unsigned long int	VfAmax(  unsigned long int n, float *  x );
extern unsigned long int	VdAmax(  unsigned long int n, double * x );
extern unsigned long int	VfsAmax( unsigned long int n, float *  x, signed long int stride );
extern unsigned long int	VdsAmax( unsigned long int n, double * x, signed long int stride );

extern unsigned long int	VfAmin(  unsigned long int n, float *  x );
extern unsigned long int	VdAmin(  unsigned long int n, double * x );
extern unsigned long int	VfsAmin( unsigned long int n, float *  x, signed long int stride );
extern unsigned long int	VdsAmin( unsigned long int n, double * x, signed long int stride );

extern float			VfDot(   unsigned long int n, float *  x, float *  y );
extern double			VdDot(   unsigned long int n, double * x, double * y );
extern float			VfsDot(  unsigned long int n, float *  x, signed long int x_stride, float *  y, signed long int y_stride );
extern double			VdsDot(  unsigned long int n, double * x, signed long int x_stride, double * y, signed long int y_stride );

extern float			VfSum(   unsigned long int n, float *  x );
extern double			VdSum(   unsigned long int n, double * x );
extern float			VfsSum(  unsigned long int n, float *  x, signed long int stride );
extern double			VdsSum(  unsigned long int n, double * x, signed long int stride );

extern float			VfProd(  unsigned long int n, float *  x );
extern double			VdProd(  unsigned long int n, double * x );
extern float			VfsProd( unsigned long int n, float *  x, signed long int stride );
extern double			VdsProd( unsigned long int n, double * x, signed long int stride );
@


1.1
log
@Initial revision
@
text
@d14 1
a14 2
/* SccsId: %W%	%G% Copyright (C) 1987, Perihelion Software Ltd.	*/
/* $Id: helios.h,v 1.10 1992/07/28 16:11:31 nickc Exp $ */
d16 93
a108 93
extern void VfAdd(int n, float *x, float *y);
extern void VfSub(int n, float *x, float *y);
extern void VfMul(int n, float *x, float *y);
extern void VfDiv(int n, float *x, float *y);

extern void VdAdd(int n, double *x, double *y);
extern void VdSub(int n, double *x, double *y);
extern void VdMul(int n, double *x, double *y);
extern void VdDiv(int n, double *x, double *y);

extern void VfsAdd(int n, float *x, int x_stride, float *y, int y_stride);
extern void VfsSub(int n, float *x, int x_stride, float *y, int y_stride);
extern void VfsMul(int n, float *x, int x_stride, float *y, int y_stride);
extern void VfsDiv(int n, float *x, int x_stride, float *y, int y_stride);

extern void VdsAdd(int n, double *x, int x_stride, double *y, int y_stride);
extern void VdsSub(int n, double *x, int x_stride, double *y, int y_stride);
extern void VdsMul(int n, double *x, int x_stride, double *y, int y_stride);
extern void VdsDiv(int n, double *x, int x_stride, double *y, int y_stride);

extern void VfAddScalar(float value, int n, float *x);
extern void VfSubScalar(float value, int n, float *x);
extern void VfMulScalar(float value, int n, float *x);
extern void VfDivScalar(float value, int n, float *x);
extern void VfRecScalar(float value, int n, float *x);

extern void VdAddScalar(double value, int n, double *x);
extern void VdSubScalar(double value, int n, double *x);
extern void VdMulScalar(double value, int n, double *x);
extern void VdDivScalar(double value, int n, double *x);
extern void VdRecScalar(double value, int n, double *x);

extern void VfsAddScalar(float value, int n, float *x, int stride);
extern void VfsSubScalar(float value, int n, float *x, int stride);
extern void VfsMulScalar(float value, int n, float *x, int stride);
extern void VfsDivScalar(float value, int n, float *x, int stride);
extern void VfsRecScalar(float value, int n, float *x, int stride);

extern void VdsAddScalar(double value, int n, double *x, int stride);
extern void VdsSubScalar(double value, int n, double *x, int stride);
extern void VdsMulScalar(double value, int n, double *x, int stride);
extern void VdsDivScalar(double value, int n, double *x, int stride);
extern void VdsRecScalar(double value, int n, double *x, int stride);

extern void VfMulAdd(float value, int n, float *x, float *y);
extern void VfsMulAdd(float value, int n, float *x, int x_stride, float *y, int y_stride);
extern void VdMulAdd(double value, int n, double *x, double *y);
extern void VdsMulAdd(double value, int n, double *x, int x_stride, double *y, int y_stride);

extern void VfCopy(int n, float *x, float *y);
extern void VdCopy(int n, double *x, double *y);
extern void VfsCopy(int n, float *x, int x_stride, float *y, int y_stride);
extern void VdsCopy(int n, double *x, int x_stride, double *y, int y_stride);

extern void VfFill(float value, int n, float *x);
extern void VdFill(double value, int n, double *x);
extern void VfsFill(float value, int n, float *x, int stride);
extern void VdsFill(double value, int n, double *x, int stride);

extern int  VfMax(int n, float *x);
extern int  VdMax(int n, double *x);
extern int  VfsMax(int n, float *x, int stride);
extern int  VdsMax(int n, double *x, int stride);

extern int  VfMin(int n, float *x);
extern int  VdMin(int n, double *x);
extern int  VfsMin(int n, float *x, int stride);
extern int  VdsMin(int n, double *x, int stride);

extern int  VfAmax(int n, float *x);
extern int  VdAmax(int n, double *x);
extern int  VfsAmax(int n, float *x, int stride);
extern int  VdsAmax(int n, double *x, int stride);

extern int  VfAmin(int n, float *x);
extern int  VdAmin(int n, double *x);
extern int  VfsAmin(int n, float *x, int stride);
extern int  VdsAmin(int n, double *x, int stride);

extern float  VfDot(int n, float *x, float *y);
extern double VdDot(int n, double *x, double *y);
extern float  VfsDot(int n, float *x, int x_stride, float *y, int y_stride);
extern double VdsDot(int n, double *x, int x_stride, double *y, int y_stride);

extern float  VfSum(int n, float *x);
extern double VdSum(int n, double *x);
extern float  VfsSum(int n, float *x, int stride);
extern double VdsSum(int n, double *x, int stride);

extern float  VfProd(int n, float *x);
extern double VdProd(int n, double *x);
extern float  VfsProd(int n, float *x, int stride);
extern double VdsProd(int n, double *x, int stride);
@
