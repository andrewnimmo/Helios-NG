head	1.11;
access;
symbols
	Helios_1_3_1:1.11
	Helios_C40_1_3_Official_Release:1.10
	Helios-C40:1.10
	Alenia_release:1.10
	Helios1_3:1.9
	C40_Field_Test_2:1.9
	C40_Field_Test_R1:1.7
	Helios13_beta:1.7
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.5
	Helios1_2:1.3
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.11
date	93.07.27.13.59.18;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.11.18.14.52.26;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	92.09.25.09.09.32;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	92.08.18.09.58.30;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.05.14.13.31.44;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	92.05.14.11.55.40;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.03.14.18.32.03;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.02.21.11.00.35;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.10.02.18.40.10;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.26.17.30.32;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.11.06.26;	author nick;	state Exp;
branches;
next	;


desc
@@


1.11
log
@merged in ARM changes
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--                     H E L I O S   K E R N E L                        --
--                     -------------------------                        --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- event.h								--
--                                                                      --
--	Event channel support.						--
--                                                                      --
--	Author:  NHG 8/8/88						--
--                                                                      --
------------------------------------------------------------------------*/
/* SccsId: %W%	%G% Copyright (C) 1987, Perihelion Software Ltd.	*/
/* $Id: event.h,v 1.9 1992/09/25 09:09:32 paul Exp $ */

#ifndef __event_h
#define __event_h

#ifndef __helios_h
# include <helios.h>
#endif
#include <queue.h>

#ifdef __C40
# include <c40.h>
#endif
#ifdef __ARM
# include <ARM/trap.h>
#endif

typedef struct Event {
	struct Node	Node;		/* link in event chain		*/
#ifdef __TRAN
	word		Pri;		/* priority in chain		*/
	VoidFnPtr	Code;		/* event routine		*/
#else
	word		Vector;		/* interrupt vector		*/
	word		Pri;		/* priority in chain		*/
	WordFnPtr	Code;		/* event routine		*/
# ifdef __C40
	word		AddrBase;	/* C data address base		*/
# endif
#endif
	void		*Data;		/* data for this		*/
	word		*ModTab;	/* set by kernel		*/
} Event;


/* Kernel support routines */

word SetEvent(Event *event);
word RemEvent(Event *event);

#ifdef __ABC
 /* user event mechanism prototypes */
 word SetUserEvent(Event *event);
 word RemUserEvent(Event *event);
 void CauseUserEvent(word vector, word arg);
#endif

#ifndef __TRAN
 /* disable interrupts for the duration of this fn call */
 word AvoidEvents(WordFnPtr fn, ...);
#endif

#ifdef __C40
/* direct mainipulation of status and IIE registers via embedded machine code */
# define IntsOn()	_word(0x10752000)	/* or	ST_GIE, st	*/
# define IntsOff()	_word(0x03752000)	/* andn	ST_GIE, st	*/

/* System() should be used in preference to these functions */
# define ClockIntsOn()	_word(0x10770001)	/* or	IIE_ETINT0, st	*/
# define ClockIntsOff() _word(0x03770001)	/* andn IIE_ETINT0, st	*/

/* more optimal version of AvoidEvents() (fixed 3 parameters) */
# define _AvoidEvents(aefn, a,b,c)	IntsOff(); \
					((WordFnPtr)aefn)(a,b,c); \
					IntsOn()
#endif

#ifdef __ARM
# ifdef in_kernel
  /* These functions must *NOT* be used in non user modes */
  /* (+ it would be unecessary and inefficent) */

  /* User mode callable processor interrupt mask update */
  void IntsOn(void);
  void IntsOff(void);

  void ClockIntsOn(void);
  void ClockIntsOff(void);

  void EnableIRQ(void);
  void DisableIRQ(void);

  void EnableFIQ(void);
  void DisableFIQ(void);
# else
#  if 0	/* @@@@@@ disabled until _word()/_trap() implemented */
#  define IntsOn()		_Trap(SWI_IntsOn)
#  define IntsOff()		_Trap(SWI_IntsOff)

#  define EnableIRQ(void)	_Trap(TRAP_EnableIRQ)
#  define DisableIRQ()		_Trap(TRAP_DisableIRQ)

#  define EnableFIQ()		_Trap(TRAP_EnableFIQ)
#  define DisableFIQ()		_Trap(TRAP_DisableFIQ)

   /* Turn the timeslicer/Helios clock interrupt off temporarily */
#  define ClockIntsOn()	_Trap(SWI_ClockIntsOn)
#  define ClockIntsOff()	_Trap(TRAP_ClockIntsOff)
#  endif /* 0 */
# endif /* in_kernel */
#endif /* __ARM */


#endif


/* -- End of event.h */
@


1.10
log
@removed SetSysStack() fn export
,.'
@
text
@d25 1
d30 3
d63 1
d71 2
a72 2
# define IntsOff()	_word(0x03752000)	/* or	ST_GIE, st	*/
# define IntsOn()	_word(0x10752000)	/* andn	ST_GIE, st	*/
d74 3
a76 2
# define ClockIntsOff()	_word(0x03770001)	/* or	IIE_ETINT0, st	*/
# define ClockIntsOn()	_word(0x10770001)	/* andn IIE_ETINT0, st	*/
d83 36
@


1.9
log
@updated for ARM port, plus added proto for SetSystemStack()
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.8 1992/08/18 09:58:30 paul Exp paul $ */
a61 8

 /* Set new system stack, either to increase its size or place into faster */
 /* (possibly on-chip) memory. NULL newsysstk just returns old stack address. */
# ifdef __C40
 wordptr SetSystemStack(wordptr newsysstk);
# else
 word *SetSystemStack(word *newsysstk);
# endif
@


1.8
log
@added AddrBase for C40
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.7 1992/05/14 13:31:44 paul Exp $ */
d53 1
a53 1
#ifdef __ARM
d62 8
@


1.7
log
@added inline opcode macros for IntsOn/Off()
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.6 1992/05/14 11:55:40 paul Exp $ */
d39 3
d43 3
a45 3
	void		*Data;		/* data for this */
	word		*ModTab;	/* set by kernel */
	} Event;
@


1.6
log
@added inline opcode macros for C40 IntsOn/Off() and AvoidEvents()
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.5 91/03/14 18:32:03 paul Exp $ */
d56 4
d69 4
a72 6
# define AvoidEvents(aefn, a, b, c)	IntsOff(); ((WordFnPtr)aefn)(a,b,c); IntsOn()
#else
# ifndef __TRAN
 /* disable interrupts for the duration of this fn call */
 word AvoidEvents(WordFnPtr fn, word a, word b, word c);
# endif
d76 1
@


1.5
log
@added support functions for ARM user event handling functions
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.4 91/02/21 11:00:35 paul Exp $ */
d23 1
a23 1
#include <helios.h>
d26 4
d49 1
a49 4
#ifndef __TRAN
 /* disable interrupts for the duration of this fn call */
 word AvoidEvents(WordFnPtr fn, word a, word b, word c);
#endif
d57 15
@


1.4
log
@support for powerfail event list (ARM)
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.3 90/10/02 18:40:10 nick Exp $ */
d28 6
a33 2
	word		Pri;		/* priority in chain & vector	*/
#ifdef __HELIOSARM
a34 2
#else
	VoidFnPtr	Code;		/* event routine		*/
d45 4
d50 4
a53 4
/* SetShutdownEvent: add an event to the device driver shutdown chain */
word SetShutdownEvent(Event *event) ;
/* disable interrupts for the duration of this fn call */
word AvoidEvents(WordFnPtr fn, word a, word b, word c);
d55 1
@


1.3
log
@Code -> word in function prototypes
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.2 90/09/26 17:30:32 paul Exp Locker: nick $ */
d43 5
a47 3

#ifdef __HELIOSARM
PUBLIC word AvoidEvents(WordFnPtr fn, word a, word b, word c);
@


1.2
log
@arm integration with 1.2 changes
@
text
@d17 1
a17 1
/* $Id: event.h,v 1.1 90/09/05 11:06:26 nick Exp Locker: nick $ */
d41 2
a42 2
Code SetEvent(Event *event);
Code RemEvent(Event *event);
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
/* $Id$ */
d41 2
a42 2
word SetEvent(Event *event);
word RemEvent(Event *event);
@
