head	1.3;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.3
	Helios-C40:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.3
	C40_Field_Test_R1:1.3
	Helios13_beta:1.3
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1
	Helios1_2:1.1
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.3
date	92.03.20.10.31.35;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	92.02.26.17.05.37;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.11.07.12;	author nick;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fixed for c40
@
text
@/* setjmp.h: ANSI draft (X3J11 Oct 86) library header, section 4.6 */
/* Copyright (C) A.C. Norman and A. Mycroft */
/* version 0.01 - SccsId: %W% %G% */
/* $Id: setjmp.h,v 1.2 1992/02/26 17:05:37 paul Exp $ */

#ifndef __setjmp_h
#define __setjmp_h

#ifdef __C40
# include <cpustate.h>
typedef int jmp_buf[sizeof(CPURegs) / sizeof(int)];

#elif defined(__ARM)
typedef int jmp_buf[28];

#elif defined(__TRAN)
typedef int jmp_buf[2];

#else
# error processor type not defined or jmp_buf not defined for this processor
#endif

extern int setjmp(jmp_buf env);
extern void longjmp(jmp_buf env, int val);

#endif

/* end of setjmp.h */
@


1.2
log
@ initial support for C40
@
text
@d4 1
a4 1
/* $Id: setjmp.h,v 1.1 90/09/05 11:07:12 nick Exp $ */
d11 1
a11 1
typedef int jmp_buf[sizeof(CPURegs) / sizeof int];
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
/* $Id$ */
d9 5
a13 1
#ifdef __HELIOSARM
d15 4
d20 1
a20 1
typedef int jmp_buf[2];
@
