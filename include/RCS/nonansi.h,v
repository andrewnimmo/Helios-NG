head	1.11;
access;
symbols
	Helios_1_3_1:1.11
	Helios_C40_1_3_Official_Release:1.10
	Helios-C40:1.10
	Alenia_release:1.8
	Helios1_3:1.4
	C40_Field_Test_2:1.4
	C40_Field_Test_R1:1.3
	Helios13_beta:1.3
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2
	Helios1_2:1.1
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.11
date	93.07.27.13.59.18;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	93.04.14.16.10.20;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	93.04.14.16.02.10;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.11.12.13.10.21;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.11.11.15.29.40;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.11.11.15.08.30;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.11.11.14.57.08;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	92.07.29.16.05.22;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	91.11.19.12.21.36;	author bart;	state Exp;
branches;
next	1.2;

1.2
date	91.01.22.15.50.02;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.11.06.56;	author nick;	state Exp;
branches;
next	;


desc
@@


1.11
log
@merged in ARM changes
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--                     H E L I O S   C   L I B R A R Y			--
--                     -------------------------------                  --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- nonansi.h								--
--                                                                      --
--	Helios extensions to the ANSI library				--
--                                                                      --
--	Author:  BLV 9/5/88						--
--                                                                      --
------------------------------------------------------------------------*/
/* SccsId: %W% %G% Copyright (C) 1987, Perihelion Software Ltd.	*/
/* $Id: nonansi.h,v 1.10 1993/04/14 16:10:20 nickc Exp $ */

#ifndef __nonansi_h
#define __nonansi_h

#ifndef __syslib_h
#include <syslib.h>
#endif

#ifndef __memory_h
#include <memory.h>
#endif

#ifndef __stdio_h
#include <stdio.h>
#endif

void *	NewProcess(  WORD stacksize, VoidFnPtr function, WORD argsize );
void	ExecProcess( void * process, word logpri );
void	RunProcess(  void * process );
void	ZapProcess(  void * process );
word	Fork(        WORD stacksize, VoidFnPtr function, WORD argsize, ... );
word	_cputime(    void );
word	_ldtimer(    word pri );	/* returns current system clock in microseconds */
void	StackCheck(  void );
#if defined(SUN4)
void    IOdebug();
#else
void	IOdebug(     const char * fmt, ... );
#endif
void	IOputc(      char c );
void	IOputs(      char * s );

#ifndef __TRAN
word	CallWithModTab( word arg1, word arg2, WordFnPtr fn, word * mpdtab );
word	*_GetModTab( void );  /* DO NOT USE THESE FUNCTIONS ! */
#endif

#if defined(__TRAN) || defined(__C40) || defined(__ABC)
word	AccelerateCode( VoidFnPtr function );
word    Accelerate( Carrier * fastram, VoidFnPtr function, WORD argsize, ... );
#endif
#ifdef __ABC
word    SpeedUpCode( VoidFnPtr function );
#endif

#ifdef __TRAN
void	bytblt(	char * source,	char * dest, 
		word   sindex,	word   dindex, 
		word   sstride,	word   dstride,
		word   length,	word   width,
		word   op );
#define BYTBLT_ALL	0
#define BYTBLT_NONZERO	1
#define BYTBLT_ZERO	2
#endif

extern Stream *	       fdstream( int );		/* POSIX fd -> Helios stream convert */

#ifndef fileno
extern int	       fileno( FILE * );	/* Clib stream -> POSIX fd convert   */
#endif

extern FILE *	       fdopen( int, string );	/* POSIX fd -> Clib FILE * 	     */

/* This macro is for compatability */
#define Heliosno( s )  fdstream( fileno( s ) )

#endif /* __nonansi_h */
@


1.10
log
@fixed for SUN4 working
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.9 1993/04/14 16:02:10 nickc Exp nickc $ */
d55 1
d57 3
a59 2

#ifdef __HELIOSARM
d61 1
a61 2
#else
word    Accelerate( Carrier * fastram, VoidFnPtr function, WORD argsize, ... );
d63 1
a63 1
#ifdef __HELIOSTRAN
d72 1
a72 3

#endif /* __HELIOSTRAN */
#endif /* !__HELIOSARM */
@


1.9
log
@added SUN version of IOdebug prototype
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.8 1992/11/12 13:10:21 paul Exp nickc $ */
d42 1
a42 1
#ifdef (SUN4)
d76 2
d79 2
@


1.8
log
@fixed up prototypes
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.7 1992/11/11 15:29:40 nickc Exp paul $ */
d42 3
d46 1
@


1.7
log
@added prototypes for functions that should never be used !
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.6 1992/11/11 15:08:30 nickc Exp nickc $ */
d47 2
a48 2
extern word	CallWithModTab( word arg1, word arg2, WordFnPtr fn, word * mpdtab );
extern word	_GetModTab( void );  /* DO NOT USE THESE FUNCTIONS ! */
@


1.6
log
@fixed prototype of _ldtimer()
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.5 1992/11/11 14:57:08 nickc Exp nickc $ */
d45 5
@


1.5
log
@added prototype for _ldtimer()
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.4 1992/07/29 16:05:22 nickc Exp nickc $ */
d40 1
a40 1
word	_ldtimer(    void );	/* returns current system clock in microseconds */
@


1.4
log
@removed bytblt from non transputer versions of nonansi.h
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.3 1991/11/19 12:21:36 bart Exp nickc $ */
d40 1
@


1.3
log
@Accelerate() returns the result of the function running on fast stack,
not void. This is probably a word value.
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.2 1991/01/22 15:50:02 paul Exp bart $ */
d25 1
d29 1
d34 10
a43 10
void *NewProcess(WORD stacksize, VoidFnPtr function, WORD argsize);
void ExecProcess(void *process, word logpri);
void RunProcess(void *process);
void ZapProcess(void *process);
word Fork(WORD stacksize, VoidFnPtr function, WORD argsize, ...);
word _cputime(void);
void StackCheck(void);
void IOdebug(const char *fmt, ...);
void IOputc(char c);
void IOputs(char *s);
d45 2
a46 1
word AccelerateCode(VoidFnPtr function);
d48 1
a48 1
word SpeedUpCode(VoidFnPtr function);
d50 8
a57 6
word Accelerate(Carrier *fastram, VoidFnPtr function, WORD argsize, ...);
void bytblt(	char *source,	char *dest, 
		word sindex,	word dindex, 
		word sstride,	word dstride,
		word length,	word width,
		word op);
d61 3
a63 1
#endif
d65 3
a67 3
extern Stream *fdstream(int);		/* POSIX fd -> Helios stream convert */
extern int fileno(FILE *);		/* Clib stream -> POSIX fd convert   */
extern FILE *fdopen(int, string);	/* POSIX fd -> Clib FILE * 	     */
d70 3
a72 2
#define Heliosno(s) fdstream(fileno(s))
#endif
@


1.2
log
@added SpeedUpCode() fn for running code in RAM (useful for ROM based systems)
only built for ARM version at present
@
text
@d17 1
a17 1
/* $Id: nonansi.h,v 1.1 90/09/05 11:06:56 nick Exp Locker: nick $ */
d47 1
a47 1
void Accelerate(Carrier *fastram, VoidFnPtr function, WORD argsize, ...);
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
/* $Id$ */
d42 5
a46 1
#ifndef __HELIOSARM
a47 1
word AccelerateCode(VoidFnPtr function);
@
