head	1.14;
access;
symbols
	Helios_1_3_1:1.13
	Helios_C40_1_3_Official_Release:1.10
	Helios-C40:1.10
	Alenia_release:1.10
	Helios1_3:1.9
	C40_Field_Test_2:1.8
	C40_Field_Test_R1:1.6
	Helios13_beta:1.6
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.4
	Helios1_2_1:1.4
	Helios1_2:1.3
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.14
date	93.12.13.11.48.38;	author tony;	state Exp;
branches;
next	1.13;

1.13
date	93.08.18.16.40.59;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	93.06.23.09.44.12;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	93.06.16.10.14.59;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.11.20.18.08.40;	author nick;	state Exp;
branches;
next	1.9;

1.9
date	92.10.30.16.54.47;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.09.16.16.32.31;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.07.08.16.28.12;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	92.03.04.14.35.48;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.10.11.16.27.34;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.03.01.18.21.27;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.11.02.10.30.19;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.09.26.17.30.48;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.11.06.53;	author nick;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Added T_RomDisk definition - allows a rom server to spot a romdisk file
in the nucleus.
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--                     H E L I O S   N U C L E U S                      --
--                     ---------------------------                      --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- module.h								--
--                                                                      --
--	Module and Program structures					--
--                                                                      --
--	Author:  NHG 16/8/87						--
--                                                                      --
------------------------------------------------------------------------*/
/* SccsId: %W% %G% Copyright (C) 1987, Perihelion Software Ltd.	*/
/* RcsId: $Id: module.h,v 1.13 1993/08/18 16:40:59 nickc Exp $ */

#ifndef __module_h
#define __module_h

#ifndef __helios_h
#include <helios.h>
#endif

#ifndef offsetof

#define offsetof(type, member) ((char *)&(((type *)0)->member) - (char *)0)

#endif

/* Code module header */

struct Module
{
	word		Type;		/* module type = T_Module	*/
	word		Size;		/* size of module in bytes	*/
	char		Name[32];	/* module name			*/
	word		Id;		/* module table index		*/
	word		Version;	/* version number of this module*/
	word		MaxData;	/* highest data offset 		*/
	RPTR		Init;		/* root of init chain		*/
#ifdef __SMT
	word		MaxCodeP;	/* highest code offset		*/
#endif
};

#ifndef __cplusplus
typedef struct Module Module;
#endif

#define ModuleWord_(m,field) MWord_(m,offsetof(Module,field))
#define ModuleName_(dest,m) MData_(dest,m,offsetof(Module,Name),32)
#define ModuleInit_(m) MInc_(m,offsetof(Module,Init))
#define ModuleNext_(m) MInc_(m,ModuleWord_(m,Size))

/* Reference to resident module */

struct ResRef
{
	WORD		Type;		/* T_ResRef			*/
	WORD		Size;		/* = sizeof(ResRef)		*/
	UBYTE		Name[32];	/* name of module required	*/
	WORD		Id;		/* module table index		*/
	WORD		Version;	/* version number of module	*/
	MPtr		Module;		/* pointer to module		*/
};

#ifndef __cplusplus
typedef struct ResRef  ResRef;
#endif


#define ResRefWord_(m,field) MWord_(m,offsetof(ResRef,field))
#define ResRefName_(dest,m) MData_(dest,m,offsetof(ResRef,Name),32)
#define SetResRefModule_(m,v) SetMWord_(m,offsetof(ResRef,Module),v)

/* type codes */

#define T_Mask		0xfff0fff0l	/* mask for constant bits 	*/
#define T_Valid		0x60f060f0l	/* contant bit in type code	*/

#define T_Program	0x60f060f0l
#define	T_Module	0x60f160f1l
#define T_ResRef        0x60f260f2l
#define T_Proc          0x60f360f3l
#define T_Code          0x60f460f4l
#define T_Stack         0x60f560f5l
#define T_Static        0x60f660f6l
#define T_ProcInfo	0x60f760f7l
#define T_Device	0x60f860f8l
#define T_FileName	0x60f960f9l
#define T_DevInfo	0x60fa60fal
#define T_RomDisk	0x60fb60fbl

/* Program structure */

struct Program
{
        Module		Module;		/* start of module		*/
	WORD		Stacksize;	/* size of initial stack	*/
	WORD		Heapsize;	/* size of program heap		*/
	RPTR		Main;		/* offset of main entry point	*/
};

#ifndef __cplusplus
typedef struct Program Program;
#endif
  
#define ProgramWord_(p,field) MWord_(p,offsetof(Program,field))
#define ProgramMain_(p) MInc_(p,offsetof(Program,Main))

/* Image file header */

struct ImageHdr
{
	word		Magic;		/* = ??????_Magic		*/
	word		Flags;		/* zero for now			*/
	word		Size;		/* image size			*/
};

#ifndef __cplusplus
typedef struct ImageHdr ImageHdr;
#endif

/*
 * Magic Numbers
 *
 * Cannot use #elif as SUN compiler cannot cope!
 */

#ifdef __TRAN
# define Image_Magic		0x12345678L	/* simple program	*/
#else
# if defined(__C40)
#  define Image_Magic		0xc4045601L	/* TMS320C40 program	*/
# else
#  if defined(__ARM)
#   define Image_Magic		0x0a245601L	/* ARM program		*/
#  else
#   if defined(__I860)
#    define Image_Magic		0x86045601L	/* i860 program		*/
#   else
#    if defined(__M68K)
#     define Image_Magic	0x68045601L	/* 68000 program	*/
#    endif
#   endif
#  endif
# endif
#endif

#define TaskForce_Magic 	0x12345677L	/* CDL object file	*/
#define RmLib_Magic		0x12345676L	/* Network object	*/

#ifdef __ARM
/* This obese function header combines the Helios and ARM C function headers */
struct Proc
{
	word		Type;		/* T_Proc			*/
	RPTR		Proc;		/* start of procedure		*/
	char		Name[Variable];	/* procedure name		*/
	RPTR		ProcName;	/* start of name		*/
					/* high byte = ff		*/
};
#else
# if defined(__C40)
struct Proc
{
	char		Name[Variable];	/* procedure name		*/
	word		ProcSize;	/* bytes above used for name	*/
					/* + high byte = ff		*/
};
# else
/* transputer version */
struct Proc
{
	word		Type;		/* T_Proc			*/
	RPTR		Proc;		/* start of procedure		*/
	char		Name[Variable];	/* procedure name		*/
};
# endif
#endif

#ifndef __cplusplus
typedef struct Proc Proc;
#endif

struct ProcInfo
{
	word		Type;		/* T_ProcInfo			*/
	word		Size;		/* procedure size in bytes	*/
	word		StackUse;	/* stack usage in words		*/
	word		VstackUse;	/* vector stack use in words	*/
	word		Modnum;		/* module number		*/
	word		Offset;		/* offset in data/code section	*/
	word		Reserve1;	/* reserved for later use	*/
	word		Reserve2;	/* ditto			*/
};

#ifndef __cplusplus
typedef struct  ProcInfo ProcInfo;
#endif

#endif /* __module_h */

/* -- End of module.h */
@


1.13
log
@fixed to work with C++ compiler on Xputer
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.12 1993/06/23 09:44:12 paul Exp nickc $ */
d94 1
a153 1

@


1.12
log
@fixed __68K to __M68K
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.11 1993/06/16 10:14:59 paul Exp paul $ */
d34 2
a35 1
typedef struct Module {
d46 1
a46 1
} Module;
d48 4
d59 2
a60 1
typedef struct ResRef {
d67 6
a72 1
} ResRef;
d97 3
a99 2
typedef struct Program {
	Module		Module;		/* start of module		*/
d103 1
a103 1
} Program;
d105 4
d114 2
a115 1
typedef struct ImageHdr {
d119 1
a119 1
} ImageHdr;
d121 3
d157 2
a158 1
typedef struct Proc {
d164 1
a164 1
} Proc;
d167 2
a168 1
typedef struct Proc {
d172 1
a172 1
} Proc;
d175 2
a176 1
typedef struct Proc {
d180 1
a180 1
} Proc;
d184 6
a189 1
typedef struct ProcInfo {
d198 1
a198 1
} ProcInfo;
d200 2
d204 2
a206 1

@


1.11
log
@Added 68k image magic.
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.10 1992/11/20 18:08:40 nick Exp $ */
d123 1
a123 1
#    if defined(__68K)
@


1.10
log
@Macros added for accessing Modules etc. via MPtr's. Module pointer
in ResRef converted to an MPtr.
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.8 1992/09/16 16:32:31 paul Exp $ */
d115 1
a115 1
#  define Image_Magic		0xc4045601L	/* simple program	*/
d118 1
a118 1
#   define Image_Magic		0x0a245601L	/* simple program	*/
d121 5
a125 1
#    define Image_Magic		0x86045601L	/* simple program	*/
@


1.9
log
@fixed comment in ProcInfo structure
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.8 1992/09/16 16:32:31 paul Exp nickc $ */
d26 6
d47 5
d60 1
a60 1
	Module		*Module;	/* pointer to module		*/
d63 4
d93 3
d163 1
a163 1
	word		Offset;		/* offset in code table		*/
d171 1
@


1.8
log
@fixed so we can build sysbuild with sun compiler
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.7 1992/07/08 16:28:12 paul Exp $ */
d145 1
a145 1
	word		Offset;		/* offset in data section	*/
@


1.7
log
@added new Image_Magic values for different processor types - would allow
hetrogeneous networking later
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.6 1992/03/04 14:35:48 paul Exp $ */
d87 6
a92 1
/* magic numbers */
a94 6
#elif defined(__C40)
# define Image_Magic		0xc4045601L	/* simple program	*/
#elif defined(__ARM)
# define Image_Magic		0x0a245601L	/* simple program	*/
#elif defined(__I860)
# define Image_Magic		0x86045601L	/* simple program	*/
d96 11
a106 1
# error processor type not defined
d122 2
a123 1
#elif defined(__C40)
d129 2
a130 1
#else
d136 1
@


1.6
log
@c40 version of Proc structure added.
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.5 1991/10/11 16:27:34 paul Exp $ */
d86 1
d88 14
a102 3
#define Image_Magic	0x12345678L	/* simple program		*/
#define TaskForce_Magic	0x12345677L	/* CDL object file		*/
#define RmLib_Magic	0x12345676L	/* Network object		*/
@


1.5
log
@SMT -> __SMT
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.4 1991/03/01 18:21:27 paul Exp paul $ */
d92 1
a92 1
#ifdef __HELIOSARM
d100 6
@


1.4
log
@got rid of arm specifix and made more general - helps in making host
versions of some utilities such as objed.
#ifdef SMT should really be ifdef __SMT!
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.3 90/11/02 10:30:19 paul Exp $ */
d36 1
a36 1
#ifdef SMT
@


1.3
log
@integrated ARM C fn header with Helios style fn header
@
text
@d17 1
a17 1
/* RcsId: $Id: module.h,v 1.2 90/09/26 17:30:48 paul Exp Locker: paul $ */
d36 1
a36 2
#ifdef __HELIOSARM
# ifdef SMT
a37 1
# endif
@


1.2
log
@arm integration with 1.2 changes
@
text
@d17 1
a17 1
/* RcsId: $Id$ */
d95 1
d97 2
a98 1
	/*word		Type;*/		/* T_Proc			*/
d100 1
a100 1
	RPTR		Proc;		/* start of name		*/
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
/* $Id$ */
d36 5
d99 1
@
