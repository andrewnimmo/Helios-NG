head	1.21;
access;
symbols
	Helios_C40_1_3_Official_Release:1.20
	Alenia_release:1.20
	Helios1_3:1.20
	C40_Field_Test_2:1.20
	C40_Field_Test_R1:1.19
	Helios13_beta:1.19
	Helios1_2_2:1.18
	Helios1_2_2Beta:1.14
	Helios1_2_1:1.12
	Helios1_2:1.4;
locks; strict;


1.21
date	93.07.26.17.24.31;	author paul;	state Exp;
branches;
next	1.20;

1.20
date	92.07.08.16.07.46;	author paul;	state Exp;
branches;
next	1.19;

1.19
date	92.04.21.17.51.35;	author paul;	state Exp;
branches;
next	1.18;

1.18
date	91.10.11.14.08.22;	author paul;	state Exp;
branches;
next	1.17;

1.17
date	91.10.10.15.07.00;	author paul;	state Exp;
branches;
next	1.16;

1.16
date	91.10.10.14.02.52;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	91.10.09.11.17.24;	author paul;	state Exp;
branches;
next	1.14;

1.14
date	91.04.12.12.54.20;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	91.04.07.13.24.43;	author bart;	state Exp;
branches;
next	1.12;

1.12
date	91.03.05.18.56.44;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	91.03.04.17.27.51;	author martyn;	state Exp;
branches;
next	1.10;

1.10
date	91.03.04.15.54.50;	author martyn;	state Exp;
branches;
next	1.9;

1.9
date	91.03.03.23.08.49;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	91.03.01.22.55.25;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	91.02.13.14.39.15;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	91.02.05.18.03.41;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.01.22.15.54.01;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	90.10.31.17.38.04;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.10.30.14.24.32;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.10.30.11.23.10;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.26.19.17.26;	author paul;	state Exp;
branches;
next	;


desc
@@


1.21
log
@merged with latest ARM sources
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - HOST SPECIFIC MAKEFILE -
#-----------------------------------------------------------------------------
# Acorn R140 Host system specific *DEFAULT* make rules.
# 
# File: /HSRC/makeinc/R140.mak
#
# This file contains definitions of variables and rules which are
# common to all Helios makefiles, or which need customizing to 
# a particular host. You may tailor to a particular processor via:
# ifeq($(HPROC),XXX) directives. This will allow you for instance, to select
# a particular compiler on this host to create XXX processor binaries.
#
# SccsId: %W% %G%
# RcsId: $Id: R140.mak,v 1.20 1992/07/08 16:07:46 paul Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------
# Host system directories:

ifndef HHOSTBIN
  HHOSTBIN	= /usr/local/bin## Where to place host utilities e.g. IO Server
endif

TEMP		= /tmp#		# dir for temporary files (/ram, /fifo, etc)


#-----------------------------------------------------------------------------
# Host system commands:

# For optional commands that do not exist, simply replace with dummy:
# e.g. DISASS = -@@echo#

# Native host compiler (used to generate host utilities)
HOSTCC = cc

# defaults to host is littleendian unless -DHOSTISBIGENDIAN is set
HOSTCFLAGS := $(HOSTCFLAGS) -D__SMT -D$(HHOST) -D__$(HPROC) -D__HELIOS$(HPROC)



# Cross C Compiler
ifeq ($(HPROC),TRAN)
  NC		= $(HHOSTBIN)/nc#	# Transputer C compil. on native Helios
else
  ifeq ($(HPROC),ARM)
    NC		= $(HHOSTBIN)/ccarm#	# ARM C compiler on Native Helios
  else
    ifeq ($(HPROC),I860)
      NC	= $(HHOSTBIN)/cci860#	# i860 C compiler on Native Helios
    else
      ifeq ($(HPROC),C40)
        NC	= $(HHOSTBIN)/ccc40#	# 'C40 C compiler on Native Helios
      endif
    endif
  endif
endif

# Cross Compiler Driver, accepting Unix cc syntax
ifeq ($(HPROC),TRAN)
  CC = $(HHOSTBIN)/c#			# Separate compiler driver
else
  ifeq ($(HPROC),ARM)
    CC = $(HHOSTBIN)/ccarm#		# Built-in compiler driver
  else
    ifeq ($(HPROC),I860)
      CC = $(HHOSTBIN)/cci860#		# @@@@@@ Built-in compiler driver ?
    else
      ifeq ($(HPROC),C40)
        CC = $(HHOSTBIN)/c#		# Separate compiler driver
      endif
    endif
  endif
endif

# Name of Cross linker
ifeq ($(HPROC),TRAN)
  LINK	= $(HHOSTBIN)/asm#
else
  ifeq ($(HPROC),ARM)
    LINK = $(HHOSTBIN)/ldarm#
  else
    ifeq ($(HPROC),I860)
      LINK = $(HHOSTBIN)/ldi860#
    else
      ifeq ($(HPROC),C40)
      LINK = $(HHOSTBIN)/ldc40#
      endif
    endif
  endif
endif

# Name of Cross assembler
ifeq ($(HPROC),TRAN)
  ASM = $(HHOSTBIN)/asm#
else
  ifeq ($(HPROC),ARM)
    ASM = $(HHOSTBIN)/asarm#
  else
    ifeq ($(HPROC),I860)
      ASM = $(HHOSTBIN)/asi860#
    else
      ifeq ($(HPROC),C40)
        ASM = $(HHOSTBIN)/asc40#
      endif
    endif
  endif
endif

# Name of Cross diassembler
ifeq ($(HPROC),TRAN)
  DISASS = -@@echo#
else
  ifeq ($(HPROC),ARM)
    DISASS = $(HHOSTBIN)/disasarm#
  else
    ifeq ($(HPROC),I860)
      DISASS = -@@echo#
    else
      ifeq ($(HPROC),C40)
        DISASS = $(HHOSTBIN)/disasc40#
      endif
    endif
  endif
endif

# Name of object dump program
ifeq ($(HPROC),TRAN)
  OBJDUMP = -@@echo#
else
  ifeq ($(HPROC),ARM)
    OBJDUMP = $(HHOSTBIN)/objdumparm#
  else
    ifeq ($(HPROC),I860)
      OBJDUMP = $(HHOSTBIN)/objdumpi860#
    else
      ifeq ($(HPROC),C40)
        OBJDUMP = $(HHOSTBIN)/objdumpc40#
      endif
    endif
  endif
endif

TCP	= /bin/cp#			# text file copy
RMTEMP	= /bin/rm#			# remove temporary files
CP	= /bin/cp#			# binary file copy
CAT	= /bin/cat#			# text file cat (create using default protect.)
OBJED	= $(HHOSTBIN)/objed#		# object editor
AMPP	= $(HHOSTBIN)/ampp#		# macro preprocessor
RM	= /bin/rm -f#			# file remover
MKDIR	= /bin/mkdir#			# directory creator
CHMOD	= /bin/chmod#			# chmod (if applicable)
SYSBUILD = $(HHOSTBIN)/sysbuild		# nucleus image builder
TOUCH	= /bin/touch#			# update file modification time
CPP	= cc -E -C -ansi		# standalone C pre-processor
#CPP	= /usr/lib/cpp -E -P -C		# standalone C pre-processor
#(HP) CPP     = /bin/cc -E -C -P -Aa	# stand-alone C pre-processor



#-----------------------------------------------------------------------------
# Generic variables and rules for making Helios
#
# No changes should be necessary beyond this point
#
#-----------------------------------------------------------------------------
# Directories where things will be found...

INCLUDE	= $(HSRC)/include#	# standard include directory
NUCLEUS	= $(HSRC)/nucleus#	# nucleus source directory
KERNEL	= $(HSRC)/kernel#	# kernel source directory
UTIL	= $(HSRC)/util#		# util source directory
POSIX	= $(HSRC)/posix#	# posix source directory
CLIB	= $(HSRC)/cmds/cc/clib#	# C library source directory
FPLIB	= $(HSRC)/fplib#	# floating point library source directory
PATCHLIB = $(HSRC)/patchlib#	# patch library source directory
FAULT	= $(HSRC)/fault#	# fault library source directory
TCPIP	= $(HSRC)/tcpip#	# tcp/ip source directory
MACRO	= $(HSRC)/include/ampp#	# AMPP macro files
HINCLUDE = $(HSRC)/include/abcARM/asm#	# hobjasm include files
CMDS	= $(HSRC)/cmds#		# Commands directory

BIN	= $(HPROD)/bin#		# production binaries
LIB	= $(HPROD)/lib#		# production libraries
ETC	= $(HPROD)/etc#		# production etc directory
TMP	= $(HPROD)/tmp#		# production temp directory

CSTART  = $(LIB)/cstart.o#	# Standard C runtime init. object file

NULL	= /dev/null		# Bit bucket

#-----------------------------------------------------------------------------
# Following two variables are NOT USED at present
# OEMDIR should be set from command line or environment, if not make a
# suitable default here
ifndef OEMDIR
OEMDIR		= /a/helios#		# OEM source distribution directory
endif

# same for BACKUPDIR
ifndef BACKUPDIR
BACKUPDIR	= /c/helios#		# BACKUP system directory
endif


#-----------------------------------------------------------------------------
# Rule to make native objects.
# This will be overlayed if processor specific rules are included later

.SUFFIXES: .o .c

%.o: %.c
	$(HOSTCC) $(HOSTCFLAGS) -c $<


#-----------------------------------------------------------------------------
# Default rules

firstrule: default	# default in user makefile is always first rule


# Standard backup target

tardir:
	cd ..; rm -f $(notdir $(COMPONENT)).tar ; tar chf $(notdir $(COMPONENT)).tar *

srcnames:
	@@echo $(foreach FILE, $(XSOURCES), $(COMPONENT)/$(HPROC)/$(FILE)) \
	$(foreach FILE, $(SOURCES), $(COMPONENT)/$(FILE)) >> $(HSRC)/backedupsrcs

ifdef SYSDEB
#-----------------------------------------------------------------------------
# disable RCS extraction

% :: %,v

% :: RCS/%,v

endif

@


1.20
log
@added __PROC and __HELIOSPROC names to HOSTCFLAGS
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.19 1992/04/21 17:51:35 paul Exp $
d38 5
d45 1
a45 1
  NC		= nc#			# Transputer C compil. on native Helios
d48 1
a48 1
    NC		= ncc#			# ARM C compiler on Native Helios
d51 1
a51 1
      NC	= ncci860#		# i860 C compiler on Native Helios
d54 1
a54 1
      NC	= nccc40#		# @@@@@@ Built-in compiler driver ?
d62 1
a62 1
  CC		= c#			# Separate compiler driver
d65 1
a65 1
    CC		= c #ncc#		# choice of separate or Built-in driver
d68 1
a68 1
      CC	= ncci860#		# @@@@@@ Built-in compiler driver ?
d71 1
a71 1
      CC	= nccc40#		# @@@@@@ Built-in compiler driver ?
d79 1
a79 1
  LINK	= asm#
d82 1
a82 1
    LINK = armld#
d85 1
a85 1
      LINK = i860ld#
d88 1
a88 1
        LINK = c40ld#
d96 1
a96 1
  ASM = asm#
d99 1
a99 3
#    ASM = armas#
    HOBJASM = hobjasm#
    ASM = as#
d102 1
a102 1
      ASM = i860as#
d105 1
a105 1
        ASM = c40as#
d116 1
a116 1
    DISASS = armdisas#
d122 1
a122 1
        DISASS = c40disas#
d133 1
a133 1
    OBJDUMP = armobjdump#
d136 1
a136 1
      OBJDUMP = i860objdump#
d139 1
a139 1
        OBJDUMP = c40objdump#
d145 15
a159 13
TCP	= cp#			# text file copy
RMTEMP	= rm#			# remove temporary files
CP	= cp -p#		# binary file copy
OBJED	= objed#		# object editor
AMPP	= ampp#			# macro preprocessor
RM	= rm -f#		# file remover
MKDIR	= mkdir#		# directory creator
CHMOD	= chmod#		# chmod not applicable (unset does nowt)
SYSBUILD = sysbuild#		# nucleus image builder
TOUCH	= touch#		# update file modification time
CPP	= cc -E -P -ansi -C	# standalone C pre-processor
#BACKUP	= backup -t#		# backup utility
#UPLOAD	= upload#		# upload utility
a207 8
# Default Host C compiler flags

# defaults to host is littleendian unless -DHOSTISBIGENDIAN is set
HOSTCFLAGS := $(HOSTCFLAGS) -D__SMT -D$(HHOST) -D__$(HPROC) -D__HELIOS$(HPROC)



#-----------------------------------------------------------------------------
d214 1
a214 1
	$(HOSTCC) $(HOSTCFLAGS) -D$(HHOST) -c $<
@


1.19
log
@std HOSTCFLAGS + CPP
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.18 1991/10/11 14:08:22 paul Exp paul $
d206 2
a207 1
HOSTCFLAGS := $(HOSTCFLAGS) -D__SMT -D$(HHOST)
@


1.18
log
@-DSMT -> -D__SMT + armobjdump/c40objdump extended names.
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.17 1991/10/10 15:07:00 paul Exp paul $
d152 1
a152 1

d206 1
a206 1
HOSTCFLAGS := $(HOSTCFLAGS) -D__SMT
@


1.17
log
@LITTLEENDIAN -> HOSTISLITTLEENDIAN
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.16 1991/10/10 14:02:52 paul Exp paul $
d129 11
a139 1
  OBJDUMP = objdump#
d205 2
a206 1
HOSTCFLAGS := $(HOSTCFLAGS) -DSMT -DHOSTISLITTLEENDIAN
@


1.16
log
@added -DLITTELENDIAN
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.15 1991/10/09 11:17:24 paul Exp paul $
d195 1
a195 1
HOSTCFLAGS := $(HOSTCFLAGS) -DSMT -DLITTLEENDIAN
@


1.15
log
@added support for 'C40 and new name for armlink (->armld)
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.14 1991/04/12 12:54:20 paul Exp paul $
d195 1
a195 1
HOSTCFLAGS := $(HOSTCFLAGS) -DSMT
@


1.14
log
@renamed compiler driver
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.13 1991/04/07 13:24:43 bart Exp paul $
d23 1
a23 1
  HHOSTBIN	= /usr/users/paul/bin	# Where to place host utilities e.g. IO Server
d26 1
a26 1
TEMP		= .#		# dir for temporary files (/ram, /fifo, etc)
d47 4
d63 5
a67 1
      CC	= ncci860#		# Built-in compiler driver ?
d77 1
a77 1
    LINK = armlink#
d80 5
a84 1
      LINK = i860link#
d94 1
a94 1
#    ASM = hobjasm#
d99 5
a103 1
      ASM = i860asm#
d113 1
a113 1
    DISASS = armdis#
d117 4
d129 1
a129 7
  ifeq ($(HPROC),ARM)
    OBJDUMP = objdump#
  else
    ifeq ($(HPROC),I860)
      OBJDUMP = objdump#
    endif
  endif
@


1.13
log
@Added the macro CC to represent a compiler or compiler driver that accepts
the same syntax as Unix CC.
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.12 1991/03/05 18:56:44 paul Exp bart $
d56 1
a56 1
    CC		= nccarm#			# Built-in compiler driver
@


1.12
log
@fixed chmod
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.11 91/03/04 17:27:51 martyn Exp Locker: paul $
d47 13
@


1.11
log
@added chmod
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.10 91/03/04 15:54:50 martyn Exp Locker: martyn $
d112 1
a112 1
CHMOD	= unset#		# chmod not applicable (unset does nowt)
@


1.10
log
@added MKDIR 
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.9 91/03/03 23:08:49 paul Exp Locker: martyn $
d112 1
@


1.9
log
@stop loads of test's whilst making 
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.8 91/03/01 22:55:25 paul Exp $
d111 1
@


1.8
log
@added -f to $(RM) to remove stupid cannot find messages
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.7 91/02/13 14:39:15 paul Exp $
d193 11
@


1.7
log
@added -p to $(CP) so that only changed files can cause later dependency actions
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.6 91/02/05 18:03:41 paul Exp Locker: paul $
d110 1
a110 1
RM	= rm#			# file remover
@


1.6
log
@changed name of TCPIP directory
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.5 91/01/22 15:54:01 paul Exp $
d107 1
a107 1
CP	= cp#			# binary file copy
@


1.5
log
@added patch library and redefined loaction of Hobjasm include files
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.4 90/10/31 17:38:04 paul Exp $
d135 1
a135 1
TCPIP	= $(HSRC)/ether#	# tcp/ip source directory
@


1.4
log
@support for hobjasm variables
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.3 90/10/30 14:24:32 paul Exp $
d133 1
d137 1
a137 1
HINCLUDE = $(HSRC)/include/hobjasm#	# hobjasm include files
@


1.3
log
@fixed hostcc
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.2 90/10/30 11:23:10 paul Exp $
d70 1
d136 1
@


1.2
log
@added default HOSTCFLAGS
@
text
@d15 1
a15 1
# RcsId: $Id: R140.mak,v 1.1 90/09/26 19:17:26 paul Exp $
d173 1
a173 1
	$(HOSTCC) $(HOSTCFLAGS -D$(HHOST) -c $<
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
# RcsId: $Id$
d161 6
d173 2
a174 1
	$(HOSTCC) $(HOSTCFLAGS) -D$(HHOST) -c $<
d184 1
a184 1
tar:
d186 4
@
