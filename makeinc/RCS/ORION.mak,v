head	1.6;
access;
symbols
	Helios_C40_1_3_Official_Release:1.6
	Alenia_release:1.6
	Helios1_3:1.6
	C40_Field_Test_2:1.6
	C40_Field_Test_R1:1.6
	Helios13_beta:1.6
	Helios1_2_2:1.6
	Helios1_2_2Beta:1.6
	Helios1_2_1:1.5
	Helios1_2:1.3;
locks; strict;


1.6
date	91.04.07.13.24.43;	author bart;	state Exp;
branches;
next	1.5;

1.5
date	91.03.04.17.27.50;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.03.04.15.54.49;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	90.10.19.20.04.54;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.10.08.16.08.57;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.26.19.17.24;	author paul;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Added the macro CC to represent a compiler or compiler driver that accepts
the same syntax as Unix CC.
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - HOST SPECIFIC MAKEFILE -
#-----------------------------------------------------------------------------
# HLH ORION Host system specific *DEFAULT* make rules.
# 
# File: /HSRC/makeinc/ORION.mak
#
# This file contains definitions of variables and rules which are
# common to all Helios makefiles, or which need customizing to 
# a particular host. You may tailor to a particular processor via:
# ifeq($(HPROC),XXX) directives. This will allow you for instance, to select
# a particular compiler on this host to create XXX processor binaries.
#
# SccsId: %W% %G%
# RcsId: $Id: ORION.mak,v 1.5 1991/03/04 17:27:50 martyn Exp bart $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------
# Host system directories:

ifndef HHOSTBIN
  HHOSTBIN	= /usr/perihelion/bin#	# Where to place host utilities e.g. IO Server
endif

TEMP		= /tmp#		# dir for temporary files (/ram, /fifo, etc)


#-----------------------------------------------------------------------------
# Host system commands:

# For optional commands that do not exist, simply replace with dummy:
# e.g. DISASS = -@@echo#

# Native host compiler (used to generate host utilities)
HOSTCC = cc

# Cross C Compiler
ifeq ($(HPROC),TRAN)
  NC		= nc#			# Transputer C compil. on native Helios
else
  ifeq ($(HPROC),ARM)
    NC		= nccarm#			# ARM C compiler on Native Helios
  else
    ifeq ($(HPROC),I860)
      NC	= ncci860#		# i860 C compiler on Native Helios
    endif
  endif
endif

# Cross Compiler Driver, accepting Unix cc syntax
ifeq ($(HPROC),TRAN)
  CC		= c#			# Separate compiler driver
else
  ifeq ($(HPROC),ARM)
    CC		= nccarm#			# Built-in compiler driver
  else
    ifeq ($(HPROC),I860)
      CC	= ncci860#		# Built-in compiler driver ?
    endif
  endif
endif

# Name of Cross linker
ifeq ($(HPROC),TRAN)
  LINK	= asm#
else
  ifeq ($(HPROC),ARM)
    LINK = armlink#
  else
    ifeq ($(HPROC),I860)
      LINK = i860link#
    endif
  endif
endif

# Name of Cross assembler
ifeq ($(HPROC),TRAN)
  ASM = asm#
else
  ifeq ($(HPROC),ARM)
#    ASM = hobjasm#
    ASM = as#
  else
    ifeq ($(HPROC),I860)
      ASM = i860asm#
    endif
  endif
endif

# Name of Cross diassembler
ifeq ($(HPROC),TRAN)
  DISASS = -@@echo#
else
  ifeq ($(HPROC),ARM)
    DISASS = armdis#
  else
    ifeq ($(HPROC),I860)
      DISASS = -@@echo#
    endif
  endif
endif

# Name of object dump program
ifeq ($(HPROC),TRAN)
  OBJDUMP = -@@echo#
else
  ifeq ($(HPROC),ARM)
    OBJDUMP = objdump#
  else
    ifeq ($(HPROC),I860)
      OBJDUMP = objdump#
    endif
  endif
endif

TCP	= cp#			# text file copy
RMTEMP	= rm#			# remove temporary files
CP	= cp#			# binary file copy
OBJED	= objed#		# object editor
AMPP	= ampp#			# macro preprocessor
RM	= rm#			# file remover
MKDIR	= mkdir#		# directory creator
CHMOD	= chmod#		# chmod (if applicable)
SYSBUILD = sysbuild#		# nucleus image builder
TOUCH	= touch#		# update file modification time

#BACKUP	= backup -t#		# backup utility
#UPLOAD	= upload#		# upload utility

LIBCPP  = /lib/cpp#		# stand-alone C pre-processor

#-----------------------------------------------------------------------------
# Generic variables and rules for making Helios
#
# No changes should be necessary beyond this point
#
#-----------------------------------------------------------------------------
# Directories where things will be found...

INCLUDE	= $(HSRC)/include#	# standard include directory
NUCLEUS	= $(HSRC)/nucleus#	# nucleus source directory
KERNEL	= $(HSRC)/kernel#	# kernel source directory
UTIL	= $(HSRC)/util#		# util source directory
POSIX	= $(HSRC)/posix#	# posix source directory
CLIB	= $(HSRC)/cmds/cc/clib#	# C library source directory
FPLIB	= $(HSRC)/fplib#	# floating point library source directory
FAULT	= $(HSRC)/fault#	# fault library source directory
TCPIP	= $(HSRC)/ether#	# tcp/ip source directory
MACRO	= $(INCLUDE)/ampp#	# AMPP macro files
CMDS	= $(HSRC)/cmds#		# Commands directory

BIN	= $(HPROD)/bin#		# production binaries
LIB	= $(HPROD)/lib#		# production libraries
ETC	= $(HPROD)/etc#		# production etc directory
TMP	= $(HPROD)/tmp#		# production temp directory

CSTART  = $(LIB)/cstart.o#	# Standard C runtime init. object file

NULL	= /dev/null		# Bit bucket

#-----------------------------------------------------------------------------
# Following two variables are NOT USED at present
# OEMDIR should be set from command line or environment, if not make a
# suitable default here
# *OEM source distribution directory*
ifndef OEMDIR
OEMDIR		= /usr/perihelion/Helios/oemdir#
endif

# same for BACKUPDIR
# *BACKUP system directory*
ifndef BACKUPDIR
BACKUPDIR	= /usr/perihelion/Helios/backup#
endif


#-----------------------------------------------------------------------------
# Rule to make native objects.
# This will be overlayed if processor specific rules are included later

.SUFFIXES: .o .c

%.o: %.c
	$(HOSTCC) $(HOSTCFLAGS) -D$(HHOST) -c $<

#-----------------------------------------------------------------------------
# Default rules

firstrule: default	# default in user makefile is always first rule


# Standard backup target

tar:
	cd ..; rm -f $(notdir $(COMPONENT)).tar ; tar chf $(notdir $(COMPONENT)).tar *

srcnames:
	@@echo $(foreach FILE, $(XSOURCES), $(COMPONENT)/$(HPROC)/$(FILE)) \
	$(foreach FILE, $(SOURCES), $(COMPONENT)/$(FILE)) >> $(HSRC)/backedupsrcs

@


1.5
log
@added chmod
@
text
@d15 1
a15 1
# RcsId: $Id: ORION.mak,v 1.4 91/03/04 15:54:49 martyn Exp Locker: martyn $
d47 13
@


1.4
log
@added MKDIR 
@
text
@d15 1
a15 1
# RcsId: $Id: ORION.mak,v 1.3 90/10/19 20:04:54 paul Exp Locker: martyn $
d111 1
@


1.3
log
@srcnames taraget added
@
text
@d15 1
a15 1
# RcsId: $Id: ORION.mak,v 1.2 90/10/08 16:08:57 nick Exp Locker: paul $
d110 1
@


1.2
log
@LIBCPP added
@
text
@d15 1
a15 1
# RcsId: $Id: ORION.mak,v 1.1 90/09/26 19:17:24 paul Exp $
d182 5
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
# RcsId: $Id$
d116 1
@
