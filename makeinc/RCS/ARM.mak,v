head	1.16;
access;
symbols
	Helios_C40_1_3_Official_Release:1.14
	Alenia_release:1.14
	Helios1_3:1.14
	C40_Field_Test_2:1.14
	C40_Field_Test_R1:1.11
	Helios13_beta:1.11
	Helios1_2_2:1.11
	Helios1_2_2Beta:1.9
	Helios1_2_1:1.8
	Helios1_2:1.3;
locks; strict;


1.16
date	93.08.12.08.16.44;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	93.07.26.17.24.11;	author paul;	state Exp;
branches;
next	1.14;

1.14
date	92.09.17.16.24.37;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	92.08.20.08.59.20;	author paul;	state Exp;
branches;
next	1.12;

1.12
date	92.07.10.08.38.40;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	91.10.14.09.28.18;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	91.10.09.11.16.34;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	91.05.20.15.17.47;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	91.03.11.01.34.40;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	91.03.10.21.31.36;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	91.03.10.21.15.42;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.02.26.14.59.35;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.01.22.15.52.35;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.11.19.20.46.40;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.11.09.19.26.35;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.26.19.17.02;	author paul;	state Exp;
branches;
next	;


desc
@initial makefile includes for the generic make system
/.
@


1.16
log
@added function name suppression for non-SYSDEB versions
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - PROCESSOR SPECIFIC MAKEFILE -
#-----------------------------------------------------------------------------
# ARM Processor specific *DEFAULT* make rules.
#
# File: /HSRC/makeinc/ARM.mak
#
# This file contains definitions of variables and rules with are
# specific to making the ARM processor version of Helios.
#
# SccsId: %W% %G%
# RcsId: $Id: ARM.mak,v 1.15 1993/07/26 17:24:11 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifeq ($(HLICENCEE), ABC)
 # Define SERIALLINK to build system with serial line as link 1
 SERIALLINK = 1
endif

# Default variables:

# Default #defines
# (These should already be produced automatically by your C compiler)
# NCFLAGS		:= $(NCFLAGS) -D__HELIOS -D__HELIOS$(HPROC) -D__$(HPROC)

# Compile time options for Helios:
#
# __RRD		Robust ram disk (reset proof).
# __MI		Memory indirection functions for relocatable memory support.
# __CARD	Support for insertable memory cards.
# __SMT		Split module table version.

ifeq ($(HPLATFORM), ABC)
 NCFLAGS := $(NCFLAGS) -D__RRD -D__MI -D__CARD -D__SMT -D__ABC
else
 ifeq ($(HPLATFORM), ARCHIMEDES)
  # defined for initial archimedes port:
  NCFLAGS := $(NCFLAGS) -D__SMT -D__ARCHIMEDES -D__IOC
 else
  ifeq ($(HPLATFORM), VY86PID)
   # defined for initial archimedes port:
   NCFLAGS := $(NCFLAGS) -D__SMT -D__VY86PID
  endif
 endif
endif

# -Ff  - do not insert function names into generated code

ifdef SYSDEB
 NCFLAGS := $(NCFLAGS) -DSYSDEB
else
 NCFLAGS := -Ff
endif

# Default compiler flags:
#
# -Zt = tiny address model
# -Zs = *NOT* split module table
# -wn = don't complain about implicit narrowing casts and reduced precision

ifdef RSRC
 NCFLAGS	:= $(NCFLAGS) -I$(RSRC)/$(COMPONENT)/$(HPROC) -I$(RSRC)/$(COMPONENT)
endif

NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) #-Zt

# Add compiler define for second link using serial line if required
ifdef SERIALLINK
  NCFLAGS	:= $(NCFLAGS) -D__SERIALLINK
endif

# Default ampp flags
#AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.$(HPROC) 1 -i$(MACRO)/
# for hysterical (historical) reasons helios.arm is in lowercase

# SMT.arm should be depreciated to __SMT

ifeq ($(HPLATFORM), ABC)
  AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -dSMT.arm 1 -i$(MACRO)/ -d__MI 1 -d__RRD 1 -d__ABC 1
else
 ifeq ($(HPLATFORM), ARCHIMEDES)
    AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -d__SMT 1 -d__$(HPLATFORM) 1 -d__IOC 1 -dSMT.arm 1 -i$(MACRO)/
 else
    AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -d__$(HPLATFORM) 1 -d__SMT 1 -dSMT.arm 1 -i$(MACRO)/
 endif
endif

# Default assembler flags
ASMFLAGS	:=  $(ASMFLAGS) -d

# Default linker flags
LINKFLAGS	:= $(LINKFLAGS)

#----------------------------------------------------------------------------- 
# Default rules:

.SUFFIXES:
.SUFFIXES: .c .a .s .p .o .q .def .i .t

# File extension defaults:
#
# .c	C source file
# .a	AMPP source file
# .s	ASM intermediate text source file
# .o	Conventional object file
# .p	Library object file (no module header or data init code)
# .q	Device Driver object code (no modhdr data/code directives or init (-r))

#----------------------------------------------------------------------------- 
# Rules for compiling C sources

#% : %.c
#	$(CC) $(NCFLAGS) -o $* $<
#	$(NC) $(NCFLAGS) -o $* $<

%.o : %.c
	$(NC) $(NCFLAGS) -c $<

# Library modules
%.p : %.c
	$(NC) -zl $(NCFLAGS) -o $*.p -c $<

# Device Drivers
%.q : %.c
	$(NC) -zr $(NCFLAGS) -o $*.q -c $<

%.s : %.c
	$(NC) $(NCFLAGS) -S $<


#----------------------------------------------------------------------------- 
# Rules for compiling AMPP sources

%.o : %.a
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< > $(TEMP)/$*.s
	$(ASM) $(ASMFLAGS) -o$*.o $(TEMP)/$*.s

%.p : %.a
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< > $(TEMP)/$*.s
	$(ASM) $(ASMFLAGS) -o$*.p $(TEMP)/$*.s

%.q : %.a
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< > $(TEMP)/$*.s
	$(ASM) $(ASMFLAGS) -o$*.q $(TEMP)/$*.s

%.s : %.a
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< > $*.s


#----------------------------------------------------------------------------- 
# Rules for assembling sources
%.o : %.s
	$(ASM) $(ASMFLAGS) -o$*.o $<


#----------------------------------------------------------------------------- 
# Misc rules:

# Making library definition files
define MAKE.DEF
	$(AMPP) -dmake.def 1 $(AMPPFLAGS) $(MACRO)/basic.m $^ > $(TEMP)/def.s
	$(ASM) $(ASMFLAGS) -o$@@ $(TEMP)/def.s
endef

# linking libraries
LINK.LIBRARY	=	$(LINK) $(LINKFLAGS) -v

# Linking programs
LINK.CPROGRAM	=	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h4000 \
				$(CSTART) $^

# Linking C floating point programs
LINK.FPPROGRAM  =	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s6000 -h4000 \
				$(CSTART) $(LIB)/fplib.def $^

# Ammp -> Object
# Convert first dependency source file into an object file
define AMPPASM
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< > $(TEMP)/$*.s
	$(ASM) $(ASMFLAGS) -o$*.o $(TEMP)/$*.s
endef

#------------------------------------------------------------------------------
@


1.15
log
@merged with latest ARM sources
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.14 1992/09/17 16:24:37 paul Exp $
d27 1
a27 1
NCFLAGS		:= $(NCFLAGS) -D__HELIOS -D__HELIOS$(HPROC) -D__$(HPROC)
d50 1
d54 2
d68 1
a68 1
NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn #-Zt
d79 2
a80 1
    # SMT.arm should be depreciated to __SMT
d95 1
a95 1
  LINKFLAGS	:= $(LINKFLAGS)
@


1.14
log
@updated for new ARM port - new arm assembler gasm
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.13 1992/08/20 08:59:20 paul Exp $
d27 1
a27 1
#DEFINES		:= $(DEFINES) -D__HELIOS -D__HELIOS$(HPROC) -D__$(HPROC)
d36 2
a37 2
ifeq ($(HLICENCEE), ABC)
 NCFLAGS := -D__RRD -D__MI -D__CARD -D__SMT -D__ABC
d39 9
a47 1
 NCFLAGS := -D__SMT
d50 1
d62 1
a62 1
 NCFLAGS		:= $(NCFLAGS) -I$(RSRC)/$(COMPONENT)/$(HPROC) -I$(RSRC)/$(COMPONENT)
d65 1
a65 1
NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn -Zt
d76 2
a77 1
ifeq ($(HLICENCEE), ABC)
d80 5
a84 2
# SMT.arm should be depreciated to __SMT
  AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -d__SMT 1 -dSMT.arm 1 -i$(MACRO)/
d88 1
a88 1
ASMFLAGS	:=  $(ASMFLAGS)
d111 3
a113 2
% : %.c
	$(NC) $(NCFLAGS) -o $* $<
d135 1
a135 1
	$(ASM) $(ASMFLAGS) -o$.o $(TEMP)/$*.s
d143 1
a143 1
	$(ASM) $(ASMFLAGS) -o$*.p $(TEMP)/$*.s
@


1.13
log
@removed CPPFLAGS and references to the old orrible pre Helios/ARM assembler
munge program
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.12 1992/07/10 08:38:40 paul Exp paul $
d37 1
a37 1
 NCFLAGS := -D__RRD -D__MI -D__CARD -D__SMT
a65 1
  AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -dSMT.arm 1 -i$(MACRO)/ -d__MI 1 -d__RRD 1
d67 7
d120 1
a120 2
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< \
		| tr '(' '[' | tr ')' ']' > $(TEMP)/$*.s
d124 1
a124 2
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< \
		| tr '(' '[' | tr ')' ']' > $(TEMP)/$*.s
d128 1
a128 2
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< \
		| tr '(' '[' | tr ')' ']' > $(TEMP)/$*.s
d132 1
a132 2
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< \
		| tr '(' '[' | tr ')' ']' > $*.s
d146 1
a146 2
	$(AMPP) -dmake.def 1 $(AMPPFLAGS) $(MACRO)/basic.m $^ \
		| tr '(' '[' | tr ')' ']' > $(TEMP)/def.s
d164 1
a164 2
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m $< \
		| tr '(' '[' | tr ')' ']' > $(TEMP)/$*.s
@


1.12
log
@added .q rules to build device drivers
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.11 1991/10/14 09:28:18 paul Exp paul $
d18 4
a21 2
# Define SERIALLINK to build system with serial line as link 1
SERIALLINK = 1
d36 5
a40 1
DEFINES := -D__RRD -D__MI -D__CARD -D__SMT
d43 1
a43 1
 DEFINES := $(DEFINES) -DSYSDEB
d56 1
a56 1
NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn -Zt $(DEFINES)
a62 3
# Default C Preprocessor flags
CPPFLAGS	:= $(CPPFLAGS)

a74 6
# ARM Special object processing stage
# Converts unix a.out format file to Helios object file.

MUNGE		= munge

#----------------------------------------------------------------------------- 
a87 1
# .t 	As->Munge intermediate file
d92 3
d96 1
a96 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) -c $<
d100 1
a100 1
	$(NC) -zl $(CPPFLAGS) $(NCFLAGS) -o $*.p -c $<
d104 1
a104 1
	$(NC) -zr $(CPPFLAGS) $(NCFLAGS) -o $*.q -c $<
d107 1
a107 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) -S $<
d116 1
a116 3
	$(ASM) $(ASMFLAGS) -o$(TEMP)/$*.t $(TEMP)/$*.s
	$(MUNGE) -o $*.o $(TEMP)/$*.t
	-$(RMTEMP) $(TEMP)/$*.s $(TEMP)/$*.t
d121 1
a121 3
	$(ASM) $(ASMFLAGS) -o$(TEMP)/$*.t $(TEMP)/$*.s
	$(MUNGE) -o $*.p $(TEMP)/$*.t
	-$(RMTEMP) $(TEMP)/$*.s $(TEMP)/$*.t
d126 1
a126 3
	$(ASM) $(ASMFLAGS) -o$(TEMP)/$*.t $(TEMP)/$*.s
	$(MUNGE) -o $*.q $(TEMP)/$*.t
	-$(RMTEMP) $(TEMP)/$*.s $(TEMP)/$*.t
d136 1
a136 3
	$(ASM) $(ASMFLAGS) -o$(TEMP)/$*.t $<
	$(MUNGE) -o $*.o $(TEMP)/$*.t
	-$(RMTEMP) $(TEMP)/$*.t
d146 1
a146 3
	$(ASM) $(ASMFLAGS) -o$(TEMP)/$*.t $(TEMP)/def.s
	$(MUNGE) -o $@@ $(TEMP)/$*.t
	-$(RMTEMP) $(TEMP)/def.s $(TEMP)/$*.t
d165 1
a165 3
	$(ASM) $(ASMFLAGS) -o$(TEMP)/$*.t $(TEMP)/$*.s
	$(MUNGE) -o $*.o $(TEMP)/$*.t
	-$(RMTEMP) $(TEMP)/$*.s $(TEMP)/$*.t
@


1.11
log
@SMT operation is no longer a option SMT as std + SMT -> __SMT
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.10 1991/10/09 11:16:34 paul Exp $
d81 1
a81 1
.SUFFIXES: .c .a .s .p .o .def .i .t
d90 1
a99 2
#%.p : %.c (old style)
#	$(NC) -zr $(CPPFLAGS) $(NCFLAGS) -o $*.p -c $<
d103 4
d126 7
@


1.10
log
@added -d definitions for AMPP for optional modules
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.9 1991/05/20 15:17:47 paul Exp $
a16 2
# define SMT for split module table usage by all cross coding utilities
SMT = 1
d32 1
a32 1
# SMT		Split module table version.
d34 1
a34 1
DEFINES := -D__RRD -D__MI -D__CARD
a35 4
ifdef SMT
 DEFINES := $(DEFINES) -DSMT
endif

a45 4
ifndef SMT
 NCFLAGS		:= $(NCFLAGS) -Zs
endif

a62 1
ifdef SMT
a63 3
else
  AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -i$(MACRO)/ -d__MI 1 -d__RRD 1
endif
a68 1
ifdef SMT
a69 4
else
# -nsmt = *not* smt
  LINKFLAGS	:= $(LINKFLAGS) -nsmt
endif
@


1.9
log
@added support for serial port being used as link
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.8 91/03/11 01:34:40 paul Exp $
d74 1
a74 1
  AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -dSMT.arm 1 -i$(MACRO)/
d76 1
a76 1
  AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.arm 1 -dAUTOLIB 1 -i$(MACRO)/
@


1.8
log
@fixed bug in previous edit
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.7 91/03/10 21:31:36 paul Exp $
d20 3
d61 5
@


1.7
log
@added $(RSRC) support to include path
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.5 91/02/26 14:59:35 paul Exp Locker: martyn $
d57 1
a57 1
NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn -Zt -Zs $(DEFINES)
@


1.6
log
@tied $(DEFINES) to NCFLAGS.
made automatic _DSYSDEB if SYSDEB make flag is set
@
text
@d43 3
a45 1
# Default compiler flags: -Zt = tiny address model
d48 1
d50 1
a50 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn -Zt -Zs $(DEFINES)
d52 6
@


1.5
log
@added suppression of implicit narrowing casts warnings.
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.4 91/01/22 15:52:35 paul Exp $
a24 1
DEFINES :=
d26 17
d44 1
a44 1
# -Zs = *not* split module table
d46 2
a47 4
ifdef SMT
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn -Zt -DSMT -D__RRD -D__MI -D__CARD
else
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -wn -Zt -Zs -D__RRD -D__MI -D__CARD
d98 1
a98 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) $(DEFINES) -c $<
d102 1
a102 1
#	$(NC) -zr $(CPPFLAGS) $(NCFLAGS) $(DEFINES) -o $*.p -c $<
d104 1
a104 1
	$(NC) -zl $(CPPFLAGS) $(NCFLAGS) $(DEFINES) -o $*.p -c $<
d107 1
a107 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) $(DEFINES) -S $<
@


1.4
log
@added card support option to Helios/ARM system make
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.3 90/11/19 20:46:40 paul Exp $
d27 3
a29 1
# Default compiler flags - -Zt = tiny address model -Zs = *not* split module table
d31 1
a31 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -DSMT -D__RRD -D__MI -D__CARD
d33 1
a33 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -Zs -D__RRD -D__MI -D__CARD
@


1.3
log
@changed RMM & RRD to __RMM & __RRD
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.2 90/11/09 19:26:35 paul Exp Locker: paul $
d29 1
a29 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -DSMT -D__RRD -D__RMM
d31 1
a31 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -Zs -D__RRD -D__RMM
@


1.2
log
@added default RMM RRD flags
@
text
@d12 1
a12 1
# RcsId: $Id: ARM.mak,v 1.1 90/09/26 19:17:02 paul Exp $
d29 1
a29 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -DSMT -DRRD -DRMM
d31 1
a31 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -Zs -DRRD -DRMM
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
# RcsId: $Id$
d29 1
a29 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -DSMT
d31 1
a31 1
  NCFLAGS		:= $(NCFLAGS) -j$(INCLUDE) -Zt -Zs
@
