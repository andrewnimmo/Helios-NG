head	1.8;
access;
symbols
	Helios_C40_1_3_Official_Release:1.8
	Alenia_release:1.8
	Helios1_3:1.8
	C40_Field_Test_2:1.8
	C40_Field_Test_R1:1.6
	Helios13_beta:1.6
	Helios1_2_2:1.6
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.5
	Helios1_2:1.1;
locks
	tony:1.8; strict;


1.8
date	92.08.20.08.58.25;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.07.10.08.39.08;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	91.11.21.11.50.21;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	91.03.10.21.31.57;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.02.13.10.42.52;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	91.02.12.17.26.15;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	91.01.28.15.29.40;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	90.09.26.19.17.29;	author paul;	state Exp;
branches;
next	;


desc
@@


1.8
log
@removed unneeded flags CPPFLAGS and DEFINES
@
text
@#------------------------------------------------------------------------------
# Helios generic make system - PROCESSOR SPECIFIC MAKEFILE -
#-----------------------------------------------------------------------------
# TRANSPUTER Processor specific *DEFAULT* make rules.
#
# File: /HSRC/makeinc/TRAN.mak
#
# This file contains definitions of variables and rules with are
# specific to making the transputer processor version of Helios.
#
# SccsId: %W% %G%
# RcsId: $Id: TRAN.mak,v 1.7 1992/07/10 08:39:08 paul Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------
# Default variables:

# Default #defines
# (These should already be produced automatically by your C compiler)
NCFLAGS := $(NCFLAGS) -D__HELIOS -D__HELIOS$(HPROC) -D__$(HPROC)
ifdef SYSDEB
 NCFLAGS := $(NCFLAGS) -DSYSDEB
endif

# Default compiler flags
ifndef RSRC
 NCFLAGS		:= $(NCFLAGS) -i,../,$(INCLUDE)/ -j$(INCLUDE)/ 
else
 NCFLAGS		:= $(NCFLAGS) -i,$(RSRC)/$(COMPONENT)/$(HPROC)/,../,$(RSRC)/$(COMPONENT)/,$(INCLUDE)/ -j$(INCLUDE)/ 
endif

# Default ampp flags
AMPPFLAGS	:= $(AMPPFLAGS) -dhelios.$(HPROC) 1 -i$(MACRO)/

# Default assembler flags
ASMFLAGS	:=  $(ASMFLAGS) -p

# Default linker flags
LINKFLAGS	:= $(LINKFLAGS)

#----------------------------------------------------------------------------- 
# Default rules:

.SUFFIXES:
.SUFFIXES: .c .a .s .p .q .o .def .i

# File extension defaults:
#
# .c	C source file
# .a	AMPP source file
# .s	ASM intermediate text source file
# .o	Conventional object file
# .p	Library object file (no module header or data init code(-l))
# .q	Device Driver object code (no modhdr data/code directives or init (-r))

#----------------------------------------------------------------------------- 
# Rules for compiling C sources

%.o : %.c
	$(NC) $(NCFLAGS) $< -s$(TEMP)/$(notdir $*.s)
	$(ASM) $(ASMFLAGS) -o $*.o $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)

# Library modules
%.p : %.c
	$(NC) -r $(NCFLAGS) $< -s$(TEMP)/$(notdir $*.s)
	$(ASM) $(ASMFLAGS) -o $*.p $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)

# Device Drivers
%.q : %.c
	$(NC) -r $(NCFLAGS) $< -s$(TEMP)/$(notdir $*.s)
	$(ASM) $(ASMFLAGS) -o $*.q $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)

%.s : %.c
	$(NC) $(NCFLAGS) $< -s$*.s


#----------------------------------------------------------------------------- 
# Rules for compiling AMPP sources

%.o : %.a
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$(notdir $*.s) $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.o $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)

%.p : %.a
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$(notdir $*.s) $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.p $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)

%.q : %.a
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$(notdir $*.s) $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.q $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)

%.s : %.a
	$(AMPP) $(AMPPFLAGS) -o$*.s $(MACRO)/basic.m $<


#----------------------------------------------------------------------------- 
# Rules for assembling sources
%.o : %.s
	$(ASM) $(ASMFLAGS) -o$*.o $<


#----------------------------------------------------------------------------- 
# Misc rules:

# Making library definition files
define MAKE.DEF
	$(AMPP) -dmake.def 1 $(AMPPFLAGS) -o$(TEMP)/def.s $(MACRO)/basic.m $^
	$(ASM) $(ASMFLAGS) -o$@@ $(TEMP)/def.s
	-$(RMTEMP) $(TEMP)/def.s
endef

# linking libraries
LINK.LIBRARY	=	$(LINK) -v -f

# Linking programs
LINK.CPROGRAM	=	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h4000 \
				$(LIB)/c0.o $^ \
				-l$(LIB)/helios.lib -l$(LIB)/c.lib

# Linking C floating point programs
LINK.FPPROGRAM  =	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s6000 -h4000 \
				$(LIB)/c0.o $^ \
				-l$(LIB)/helios.lib -l$(LIB)/c.lib

# Ammp -> Object
# Convert first dependency source file into an object file
define AMPPASM
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$(notdir $*.s) $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.o $(TEMP)/$(notdir $*.s)
	-$(RMTEMP) $(TEMP)/$(notdir $*.s)
endef

#------------------------------------------------------------------------------
@


1.7
log
@added .q rules to build device drivers
@
text
@d12 1
a12 1
# RcsId: $Id: TRAN.mak,v 1.6 1991/11/21 11:50:21 nick Exp paul $
d21 1
a21 1
DEFINES		:= $(DEFINES) -D__HELIOS -D__HELIOS$(HPROC) -D__$(HPROC)
d23 1
a23 1
 DEFINES := $(DEFINES) -DSYSDEB
d28 1
a28 1
 NCFLAGS		:= $(NCFLAGS) -i,../,$(INCLUDE)/ -j$(INCLUDE)/ $(DEFINES)
d30 1
a30 1
 NCFLAGS		:= $(NCFLAGS) -i,$(RSRC)/$(COMPONENT)/$(HPROC)/,../,$(RSRC)/$(COMPONENT)/,$(INCLUDE)/ -j$(INCLUDE)/ $(DEFINES)
a32 3
# Default C Preprocessor flags
CPPFLAGS	:= $(CPPFLAGS)

d61 1
a61 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) $< -s$(TEMP)/$(notdir $*.s)
d67 1
a67 1
	$(NC) -r $(CPPFLAGS) $(NCFLAGS) $< -s$(TEMP)/$(notdir $*.s)
d73 1
a73 1
	$(NC) -r $(CPPFLAGS) $(NCFLAGS) $< -s$(TEMP)/$(notdir $*.s)
d78 1
a78 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) $< -s$*.s
@


1.6
log
@trailing / in RSRC -i directory list added
@
text
@d12 1
a12 1
# RcsId: $Id: TRAN.mak,v 1.5 1991/03/10 21:31:57 paul Exp nick $
d49 1
a49 1
.SUFFIXES: .c .a .s .p .o .def .i
d57 2
a58 1
# .p	Library object file (no module header or data init code)
a59 1

d74 6
d95 5
@


1.5
log
@fixed up $(DEFINES) to be automatically included in $(NCFLAGS)
+ automatically define -DSYSDEB if SYSDEB is set as env var/make option.
@
text
@d12 1
a12 1
# RcsId: $Id: TRAN.mak,v 1.4 91/02/13 10:42:52 nick Exp Locker: martyn $
d30 1
a30 1
 NCFLAGS		:= $(NCFLAGS) -i,$(RSRC)/$(COMPONENT)/$(HPROC),../,$(RSRC)/$(COMPONENT)/,$(INCLUDE)/ -j$(INCLUDE)/ $(DEFINES)
@


1.4
log
@LINK.CPROGRAM and LINK.FPPROGRAM brought up to date
@
text
@d12 1
a12 1
# RcsId: $Id: TRAN.mak,v 1.3 91/02/12 17:26:15 nick Exp Locker: nick $
d22 3
d28 1
a28 1
NCFLAGS		:= $(NCFLAGS) -i,../,$(INCLUDE)/ -j$(INCLUDE)/
d30 1
a30 1
NCFLAGS		:= $(NCFLAGS) -i,$(RSRC)/$(COMPONENT)/$(HPROC),../,$(RSRC)/$(COMPONENT)/,$(INCLUDE)/ -j$(INCLUDE)/
d64 1
a64 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/$(notdir $*.s)
d70 1
a70 1
	$(NC) -r $(CPPFLAGS) $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/$(notdir $*.s)
d75 1
a75 1
	$(NC) $(CPPFLAGS) $(NCFLAGS) $(DEFINES) $< -s$*.s
@


1.3
log
@test for RSRC added.
Use of $(notdir $*.s) extended to all cases.
@
text
@d12 1
a12 1
# RcsId: $Id$
d113 2
a114 1
				$(CSTART) $^
d118 2
a119 1
				$(CSTART) $(LIB)/fplib.def $^
@


1.2
log
@can now pass long pathnames to .c->.o rule and tmp files will be created ok
@
text
@d12 1
a12 1
# RcsId: $Id: TRAN.mak,v 1.1 90/09/26 19:17:29 paul Exp $
d24 5
a28 1
NCFLAGS		:= $(NCFLAGS) -i../,$(INCLUDE)/ -j,$(INCLUDE)/
d79 3
a81 3
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$*.s $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.o $(TEMP)/$*.s
	-$(RMTEMP) $(TEMP)/$*.s
d84 3
a86 3
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$*.s $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.p $(TEMP)/$*.s
	-$(RMTEMP) $(TEMP)/$*.s
d122 3
a124 3
	$(AMPP) $(AMPPFLAGS) -o$(TEMP)/$*.s $(MACRO)/basic.m $<
	$(ASM) $(ASMFLAGS) -o$*.o $(TEMP)/$*.s
	-$(RMTEMP) $(TEMP)/$*.s
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
# RcsId: $Id$
d57 3
a59 3
	$(NC) $(CPPFLAGS) $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/$*.s
	$(ASM) $(ASMFLAGS) -o $*.o $(TEMP)/$*.s
	-$(RMTEMP) $(TEMP)/$*.s
d63 3
a65 3
	$(NC) -r $(CPPFLAGS) $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/$*.s
	$(ASM) $(ASMFLAGS) -o $*.p $(TEMP)/$*.s
	-$(RMTEMP) $(TEMP)/$*.s
@
