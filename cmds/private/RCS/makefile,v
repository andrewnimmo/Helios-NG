head	1.7;
access;
symbols
	Helios_1_3_1:1.6
	Helios_C40_1_3_Official_Release:1.6
	Alenia_release:1.6
	Helios1_3:1.5
	C40_Field_Test_2:1.5
	C40_Field_Test_R1:1.4
	Helios13_beta:1.3;
locks; strict;
comment	@# @;


1.7
date	94.02.17.11.45.35;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.12.07.17.10.40;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.08.20.08.54.50;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.07.01.12.36.02;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	92.06.26.14.06.29;	author bart;	state Exp;
branches;
next	1.2;

1.2
date	92.06.26.09.40.17;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	92.03.11.11.34.47;	author paul;	state Exp;
branches;
next	;


desc
@added as it never was!
@


1.7
log
@added test for existance of private directory - creates if needed
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: General Commands
#
# File: /HSRC/cmds/private/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.6 1992/12/07 17:10:40 nickc Exp nickc $
#		(C) Copyright 1990 - 1994 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#
#
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = SUN4
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/private

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.

HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HVPATH):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = $(RBINS) $(PBINS) $(SBINS)

# default & install are at end of this file due to problem with GNUMake
# See comments there...

#default: $(TARGETS) Xdefault
#
#install	: $(TARGETS) Xinstall
#	$(CP) $(RBINS) $(BIN)
#	$(CP) $(PBINS) $(BIN)/private
#	$(CP) $(SBINS) $(BIN)
#	$(TOUCH) install
# Stop no args cleaning the cmds!
newdefault: default


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	=

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile

# Private commands which we don't formally support or release
PSRCS := bounce.c b2.c dbg.c dbt.c dhry.c links.c pause.c ports.c ansitest.c \
        free.c disktest.c mtime.c trail.c enable.c szal.c timeio.c linkcat.c  \
	portcnt.c portown.c

# no network/CDL style commands for the ARM
ifneq ($(HPROC),ARM)
PSRCS := $(PSRCS) format.c memsearch.c
endif

#ifeq ($(HPROC),C40)
#PSRCS := $(PSRCS)
#endif
 
# C source files
SOURCES.c	= $(PSRCS)

# Transform to lists of object files
POBJS = $(PSRCS:.c=.o)

default: $(TARGETS) Xdefault

#transform to lists of binaries
PBINS = $(POBJS:.o=)

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

OBJECTS	= $(ROBJS) $(POBJS) $(SOBJS)

#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),TRAN)
  NCFLAGS := $(NCFLAGS) -wadfsv -ecpz
else
  NCFLAGS := $(NCFLAGS)
endif

%: %.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $(CSTART) $@@.o

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

#$(TARGETS): $(CSTART)

# Compile regular and private binaries

$(POBJS):

$(PBINS): $(CSTART)

#------------------------------------------------------------------------
# Special cases

disktest : $(CSTART) disktest.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s8000 -h4000 $^

#-----------------------------------------------------------------------------
# Due to the use of ':=', rather than '=', these rules have to appear here.

default: $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	@@ test -d $(BIN)/private || mkdir -p $(BIN)/private
	$(CP) $(PBINS) $(BIN)/private
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.6
log
@removed boot.c as this is no longer necessary
@
text
@d13 2
a14 3
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.5 1992/08/20 08:54:50 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
d185 1
@


1.5
log
@added portcnt and portown
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1992/07/01 12:36:02 paul Exp paul $
d125 1
a125 1
PSRCS := $(PSRCS) format.c boot.c memsearch.c
@


1.4
log
@added RSRC changes and moved threadps, idrom and slice commands to ../com
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/03/11 11:34:47 paul Exp $
d120 2
a121 1
        free.c disktest.c mtime.c trail.c enable.c szal.c timeio.c linkcat.c 
@


1.3
log
@removed remotetf, redundant
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1992/06/26 09:40:17 paul Exp bart $
a70 1
VPATH := $(HSRC)/$(COMPONENT)
d72 10
d127 4
a130 4
ifeq ($(HPROC),C40)
PSRCS := $(PSRCS) threadps.c slice.c atst.c idrom.c
endif

@


1.2
log
@added threadps slice atst and idrom C40 specific programs to make
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/03/11 11:34:47 paul Exp $
d115 1
a115 1
PSRCS := $(PSRCS) format.c boot.c remotetf.c memsearch.c
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/03/11 11:33:34 paul Exp $
d110 2
a111 2
PSRCS := bounce.c dbg.c dbt.c dhry.c links.c pause.c ports.c ansitest.c \
        free.c disktest.c mtime.c trail.c enable.c szal.c timeio.c linkcat.c
d116 4
@
