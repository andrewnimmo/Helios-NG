head	1.3;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2
	Helios1_2:1.2;
locks; strict;
comment	@ * @;


1.3
date	93.08.12.11.15.29;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	90.08.23.10.23.17;	author james;	state Exp;
branches;
next	1.1;

1.1
date	90.08.22.16.32.29;	author james;	state Exp;
branches;
next	;


desc
@@


1.3
log
@switched to using _ldtimer() instead of Timer() since ARM does not export Timer() function
@
text
@#ifdef __TRAN
static char *rcsid = "$Header: /hsrc/cmds/private/RCS/mtime.c,v 1.2 1990/08/23 10:23:17 james Exp nickc $";
#endif

#include <stdio.h>
#include <syslib.h>
#include <message.h>
#include <stdlib.h>
#include <helios.h>
#include <process.h>
#include <nonansi.h>

char *buf;
int bsize = 0;

word mtime;
word ttime;
Port port;

void foo()
{
	MCB m;
	
	m.MsgHdr.Dest = port;
	m.Timeout = -1;
	m.Data = buf;
	
	for(;;)
	{	
		GetMsg(&m);
	
		mtime = _ldtimer(0) - mtime - ttime;

		printf("%ld\n",mtime);
	
		PutMsg(&m);
	}
}


int main(int argc, char **argv)
{
	MCB m;
	
	if( argc == 2 )
	{
		bsize = atoi(argv[1]);
		buf = (char *)malloc(bsize);
	}
	
	port = NewPort();
		
	Fork(3000,foo,0);
	
	InitMCB(&m,0,port,NullPort,0);
	m.MsgHdr.DataSize = bsize;
	m.Data = buf;
	
	for(;;)
	{
		/* ensure that we explicitly test the time to a waiting */
		/* receiver.						*/
		while( PutReady(port) != 0 ) Delay(20000);
	
		/* calculate overhead of doing timing.			*/
		ttime = _ldtimer(0);
		ttime = _ldtimer(0) - ttime;
		
		mtime = _ldtimer(0);
		
		PutMsg(&m);
	
		GetMsg(&m);
		
		Delay(1000000);
	}
}
@


1.2
log
@*** empty log message ***
@
text
@d1 3
a4 2
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/com/RCS/mtime.c,v 1.1 90/08/22 16:32:29 james Exp Locker: james $";

d8 4
d16 2
a17 2
int mtime;
int ttime;
d32 1
a32 1
		mtime = Timer() - mtime - ttime;
d34 1
a34 1
		printf("%d\n",mtime);
d66 2
a67 2
		ttime = Timer();
		ttime = Timer() - ttime;
d69 1
a69 1
		mtime = Timer();
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
static char rcsid[] = "$Header$";
@
