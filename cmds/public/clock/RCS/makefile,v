head	1.5;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.3
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.1;
locks; strict;
comment	@# @;


1.5
date	94.05.12.17.01.56;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	94.05.12.15.47.55;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	92.08.17.11.04.13;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	91.05.07.09.33.05;	author ben;	state Exp;
branches;
next	1.1;

1.1
date	91.03.08.18.49.52;	author paul;	state Exp;
branches;
next	;


desc
@@


1.5
log
@oops removed spurious endif left in previous delta
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: cmds/public/clock/gdc
#
# File: /HSRC/cmds/public/clock/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.4 1994/05/12 15:47:55 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#	(C) Copyright 1994 Perihelion Distributed Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/public/clock

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
VPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
endif

	#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = gdc

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(HPROD)/local/bin
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install Xinstall *.ghof


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	=  gdc.c

# AMPP source files
SOURCES.a	= 

# C header files
HEADERS.c	= 

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile Makefile.old gdc.6

#-----------------------------------------------------------------------------

#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1 -D_BSD


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

gdc: $(OBJECTS)
	@@ echo linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o gdc $(LIB)/cstart.o $(OBJECTS) -l$(LIB)/curses.lib -l$(LIB)/bsd.lib -l$(LIB)/termcap.lib



#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF


@


1.4
log
@fixed for ARM world
@
text
@d13 1
a13 1
# RcsId: $Id: makefile,v 1.3 1992/08/17 11:04:13 paul Exp nickc $
d120 3
a122 2
	$(LINK) $(LINKFLAGS) -o gdc $(LIB)/cstart.o $(OBJECTS) -l$(LIB)/curses.lib -l$(LIB)/bsd.lib -l$(LIB)/termcap.lib
endif
@


1.3
log
@removed cppflags
@
text
@d13 1
a13 2
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.2 1991/05/07 09:33:05 ben Exp paul $
d15 1
d78 1
a78 1
		core ../mkout install Xinstall
d120 1
a120 4
ifeq ($(HPROC),ARM) #@@@@@@ bodge while -l option isn't working */
	$(LINK) $(LINKFLAGS) -o gdc $(LIB)/cstart.o $(OBJECTS)  -l$(LIB)/curses.lib -l$(LIB)/bsd.lib -l$(LIB)/termcap.lib
else
	$(LINK) $(LINKFLAGS) -o gdc $(LIB)/cstart.o $(OBJECTS) -l$(LIB)/bsd.lib -l$(LIB)/curses.lib -l$(LIB)/termcap.lib
@


1.2
log
@Modified for ARM scanned libraries
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 91/03/08 18:49:52 paul Exp Locker: al $
d113 1
a113 1
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1
a114 1
CPPFLAGS := $(CPPFLAGS) -D_BSD
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 91/02/13 14:48:19 nick Exp $
d122 1
a122 1
	$(LINK) $(LINKFLAGS) -o gdc $(LIB)/cstart.o $(OBJECTS) $(LIB)/bsd.lib $(LIB)/curses.lib $(LIB)/termcap.lib
@
