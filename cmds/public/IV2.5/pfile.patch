Message interviews:22 -  Read
From:      John Vlissides <vlis@interviews.stanford.edu>
To:        Paolo Zeppegno <paolo@to.sem.it>
Cc:        <interviews@lurch.stanford.edu>,
            John Vlissides <vlis@lurch.stanford.edu>
Subject:   Re: one little bug.. I think
Obsoletes: Your message of Fri, 8907070946.AA27999@sem.it

> In libgraphic, pfile.c method PFIle::Exists is defined as:
>
> 	boolean PFile::Exists (char* filename) {
> 	    return fopen(filename, "r") != NULL;
> 	}
>
> a similar function in idraw is instead:
>
> 	boolean Drawing::Exists (const char* path) {
> 	    return (access(path, F_OK) >= 0);
> 	}
>
> I don't know which one is best, but I think that the libgraphic version
> wastes a file descriptor each time it's called.. As usual, am I missing
> something here?
> 	- paolo zeppegno

I'm the one who missed something!  The original code definitely wastes
a file descriptor.  Here's the fix:

Apply with ``cd iv; patch -p -N < diffs'' to patch files:

        src/libgraphic/pfile.c

*** /tmp/da1145	Sat Jul  8 08:46:48 1989
--- src/libgraphic/pfile.c	Sat Jul  8 08:40:28 1989
***************
*** 8,13 ****
--- 8,14 ----
  #include <osfcn.h>
  #include <stdlib.h>
  #include <string.h>
+ #include <sys/file.h>

  static const int FROM_BEGINNING = 0;
  static const int FROM_CURPOS = 1;
***************
*** 39,49 ****
  }

  boolean PFile::Exists () {
!     return fopen(name, "r") != NULL;
  }

  boolean PFile::Exists (char* filename) {
!     return fopen(filename, "r") != NULL;
  }

  boolean PFile::Read (short& i) {
--- 40,50 ----
  }

  boolean PFile::Exists () {
!     return access(name, F_OK) >= 0;
  }

  boolean PFile::Exists (char* filename) {
!     return access(filename, F_OK) >= 0;
  }

  boolean PFile::Read (short& i) {
