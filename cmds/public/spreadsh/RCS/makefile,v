head	1.12;
access;
symbols
	Helios_1_3_1:1.11
	Helios_C40_1_3_Official_Release:1.11
	Alenia_release:1.11
	Helios1_3:1.11
	C40_Field_Test_2:1.11
	C40_Field_Test_R1:1.10
	Helios13_beta:1.10
	Helios1_2_2:1.9
	Helios1_2_2Beta:1.9
	Helios1_2_1:1.8;
locks; strict;
comment	@# @;


1.12
date	94.05.12.15.48.23;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	92.08.11.10.32.13;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.04.30.13.12.32;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	91.05.07.09.32.19;	author ben;	state Exp;
branches;
next	1.8;

1.8
date	91.03.13.16.29.14;	author al;	state Exp;
branches;
next	1.7;

1.7
date	91.03.12.15.39.51;	author martyn;	state Exp;
branches;
next	1.6;

1.6
date	91.03.12.14.57.43;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.03.12.14.33.19;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.03.12.14.31.00;	author al;	state Exp;
branches;
next	1.3;

1.3
date	91.03.09.00.48.01;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	91.03.08.21.18.23;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	91.03.08.17.24.50;	author paul;	state Exp;
branches;
next	;


desc
@@


1.12
log
@fixed for ARM world
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: cmds/public/spreadsh/sc
#
# File: /HSRC/cmds/public/spreadsh/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.11 1992/08/11 10:32:13 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/public/spreadsh

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
VPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
endif

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = sc

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(HPROD)/local/bin
	cat ../tutorial.sc > $(HPROD)/local/bin/tutorial.sc
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	=  lex.c sc.c y.tab.c interp.c crypt.c xmalloc.c cmds.c \
                   range.c help.c 

# AMPP source files
SOURCES.a	= 

# C header files
HEADERS.c	= sc.h y.tab.h experres.h statres.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= gram.y eres.sed sres.sed makefile makefile.old \
		BSD_BUGS CHANGES HELIOS README ReadMe2 VMS_NOTES tutorial.sc \
		psc.1 psc.c psc.doc psc.txt sc.1 sc.doc sc.txt


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1 -DPOSIX -DBSD43 -DSIGVOID -D_BSD -DINTERNATIONAL


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

sc: $(OBJECTS)
ifeq ($(HPROC),ARM) #@@ quick bodge while -l option to armlink isn't working
	$(LINK) -s10000 $(LINKFLAGS) -o sc $(LIB)/cstart.o $(LIB)/fplib.def $(OBJECTS) -l$(LIB)/bsd.lib -l$(LIB)/curses.lib -l$(LIB)/termcap.lib
else
	$(LINK) -s10000 $(LINKFLAGS) -o sc $(LIB)/cstart.o $(OBJECTS) -l$(LIB)/bsd.lib -l$(LIB)/curses.lib -l$(LIB)/termcap.lib -l$(LIB)/fplib.def
endif
ifeq ($(HHOST),HELIOSTRAN)
#	$(RM) /lib/curses.lib
#	$(CP) curses.lib /lib/curses.lib
endif


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.11
log
@fixed for protection
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1992/04/30 13:12:32 nickc Exp $
d94 1
a94 1
SOURCES.c	=  sc.c lex.c y.tab.c interp.c crypt.c xmalloc.c cmds.c \
@


1.10
log
@included fp library in TRAN/C40 link
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 1991/05/07 09:32:19 ben Exp nickc $
d74 1
a74 3
	$(RM) $(HPROD)/local/bin/tutorial.sc
	$(CP) ../tutorial.sc $(HPROD)/local/bin
	$(CHMOD) ug+w $(HPROD)/local/bin/tutorial.sc
@


1.9
log
@Modified for ARM scanned libraries
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1991/03/13 16:29:14 al Exp ben $
d128 1
a128 1
	$(LINK) -s10000 $(LINKFLAGS) -o sc $(LIB)/cstart.o $(OBJECTS) -l$(LIB)/bsd.lib -l$(LIB)/curses.lib -l$(LIB)/termcap.lib
@


1.8
log
@-DINTERNATIONAL added to allow for CSI interface
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 91/03/12 15:39:51 martyn Exp Locker: al $
d126 1
a126 1
	$(LINK) -s10000 $(LINKFLAGS) -o sc $(LIB)/cstart.o $(LIB)/fplib.def $(OBJECTS) $(LIB)/bsd.lib $(LIB)/curses.lib $(LIB)/termcap.lib
@


1.7
log
@psc.c included twice
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 91/03/12 14:57:43 martyn Exp $
d118 1
a118 1
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1 -DPOSIX -DBSD43 -DSIGVOID -D_BSD
@


1.6
log
@sc.tex doesn't exist (yet?)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 91/03/12 14:33:19 martyn Exp Locker: martyn $
d109 1
a109 1
SOURCES.odd	= gram.y eres.sed sres.sed makefile makefile.old psc.c \
@


1.5
log
@corrected HEADERS.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/12 14:31:00 al Exp Locker: martyn $
d111 1
a111 1
		psc.1 psc.c psc.doc psc.txt sc.1 sc.doc sc.tex sc.txt
@


1.4
log
@Attempt to fix cursor keys (-DSIMPLE).
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/03/09 00:48:01 paul Exp Locker: al $
d103 1
a103 1
HEADERS.c	= sc.h y.tab.h
@


1.3
log
@fixed bad access mode on tutorial.sc
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/03/08 21:18:23 paul Exp $
d109 1
a109 1
SOURCES.odd	= gram.y erse.sed sres.sed makefile makefile.old psc.c \
d118 1
a118 1
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1 -DPOSIX -DSIMPLE -DSIGVOID -D_BSD
@


1.2
log
@fixed to run on ARM
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 91/03/08 17:24:50 paul Exp $
d74 1
d76 1
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 91/02/13 14:48:19 nick Exp $
a111 1

a112 2

#-----------------------------------------------------------------------------
d116 1
a116 1
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1 -DPOSIX -DSIMPLE
a117 1
CPPFLAGS := $(CPPFLAGS) -D_BSD
a121 3
# uncomment if you have compiler or makedepend generated dependencies
#include depends

d123 3
a125 1
ifeq ($(HPROC),TRAN)
a126 2
else
	cat $(OBJECTS) > sc
a132 1
tutorial.sc:
a135 2


@
