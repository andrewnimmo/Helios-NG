head	1.2;
access;
symbols
	Helios_1_3_1:1.2
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.1
	C40_Field_Test_2:1.1;
locks; strict;
comment	@ * @;


1.2
date	92.11.04.19.12.10;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	92.09.04.16.09.30;	author martyn;	state Exp;
branches;
next	;


desc
@work out endianness of host
@


1.2
log
@fixed BYTE_ORDER definitions to cope with stupid compilers
@
text
@/*
 * Copyright (c) 1987 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted provided
 * that: (1) source distributions retain this entire copyright notice and
 * comment, and (2) distributions including binaries display the following
 * acknowledgement:  ``This product includes software developed by the
 * University of California, Berkeley and its contributors'' in the
 * documentation or other materials provided with the distribution and in
 * all advertising materials mentioning features or use of this software.
 * Neither the name of the University nor the names of its contributors may
 * be used to endorse or promote products derived from this software without
 * specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 *	@@(#)endian.h	7.6 (Berkeley) 6/28/90
 */

/*
 * Definitions for byte order,
 * according to byte significance from low address to high.
 */
#define	LITTLE_ENDIAN	1234	/* least-significant byte first (vax) */
#define	BIG_ENDIAN	4321	/* most-significant byte first (IBM, net) */
#define	PDP_ENDIAN	3412	/* LSB first in word, MSW first in long (pdp) */

/*
 *  If your machine doesn't appear in this list, add it.  You should only
 *  need to do this if you're not running BSD.
 */
#ifndef BYTE_ORDER
#if defined(__TRAN) || defined(__C40) || defined(mips) || defined(vax)
#define	BYTE_ORDER	LITTLE_ENDIAN
#else
# if defined(sun) || defined(sequent) || defined(hpux)
# define BYTE_ORDER	BIG_ENDIAN
# endif /* __TRAN, __C40, sun, sequent, mips, or vax */
#endif
#endif /* ndef BYTE_ORDER */

/*
 * Macros for network/external number representation conversion.
 */
#if BYTE_ORDER == BIG_ENDIAN && !defined(lint)
#define	ntohl(x)	(x)
#define	ntohs(x)	(x)
#define	htonl(x)	(x)
#define	htons(x)	(x)

#define	NTOHL(x)	(x)
#define	NTOHS(x)	(x)
#define	HTONL(x)	(x)
#define	HTONS(x)	(x)

#else

#ifndef __HELIOS
unsigned short	ntohs(), htons();
unsigned long	ntohl(), htonl();
#else
#include <netinet/in.h>
#endif

#define	NTOHL(x)	(x) = ntohl((u_long)x)
#define	NTOHS(x)	(x) = ntohs((u_short)x)
#define	HTONL(x)	(x) = htonl((u_long)x)
#define	HTONS(x)	(x) = htons((u_short)x)
#endif
@


1.1
log
@Initial revision
@
text
@d34 2
a35 1
#if defined(__TRAN) || defined(__C40)
d38 4
a41 6
#ifndef BYTE_ORDER
#if defined(mips) || defined(vax)
#define	BYTE_ORDER	LITTLE_ENDIAN
#elif defined(sun) || defined(sequent) || defined(hpux)
#define BYTE_ORDER	BIG_ENDIAN
#endif /* sun, sequent, mips, or vax */
a42 1
#endif /* def __TRAN */
@
