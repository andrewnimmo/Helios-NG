head	1.6;
access;
symbols
	Helios_1_3_1:1.4
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.1;
locks; strict;
comment	@# @;


1.6
date	94.06.10.11.47.57;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	94.01.13.17.23.22;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	93.08.18.16.26.35;	author bart;	state Exp;
branches;
next	1.3;

1.3
date	92.10.29.12.22.26;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	92.10.27.19.16.42;	author martyn;	state Exp;
branches;
next	1.1;

1.1
date	92.09.04.16.13.15;	author martyn;	state Exp;
branches;
next	;


desc
@
@


1.6
log
@made rules silent
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Helios Help
#
# File: /HSRC/cmds/help/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.5 1994/01/13 17:23:22 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#	(c) Copyright 1994 Perihelion Distributed Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONEY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/help

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONEY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = help dbbuild truncate dbdump dbprint

default: $(TARGETS) Xdefault

install: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(BIN)
	-$(CP) $(HSRC)/$(COMPONENT)/$(HPROC)/help0.txt $(LIB)
	-$(CP) $(HSRC)/$(COMPONENT)/$(HPROC)/help0.dct $(LIB)
	$(TOUCH) install

clean: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		dbprint.o dbbuild.o dbdump.o help.o truncate.o\
		core ../mkout install Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS		= big.o lrutils.o stem.o utils.o storage.o \
		  insert.o search.o btree.o lrucache.o \
		  seq.o delete.o lruhash.o split.o updutils.o

# C source files
SOURCES.c	= big.c help.c lrutils.c stem.c utils.c btree.c \
		  insert.c search.c storage.c dbbuild.c lrucache.c \
		  seq.c delete.c lruhash.c split.c updutils.c \
		  truncate.c dbdump.c dbprint.c

# C header files
HEADERS.c  	= btree.h db.h endian.h lrucache.h

# AMPP source files
SOURCES.a	=

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile generic.txt c40.txt arm.txt transputer.txt \
		  vectlib.txt winman.txt stopword.lst not_tran.txt


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required

NCFLAGS := $(NCFLAGS) -D_BSD

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

$(OBJECTS): $(HEADERS.c)

truncate: $(CSTART) truncate.o stem.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ $^ -l$(LIB)/bsd.lib

dbdump: $(CSTART) dbdump.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ $^ -l$(LIB)/bsd.lib

dbprint: $(CSTART) dbprint.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ $^ -l$(LIB)/bsd.lib

help: $(CSTART) help.o $(OBJECTS)
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h20000 $^ -l$(LIB)/bsd.lib

dbbuild: $(CSTART) dbbuild.o $(OBJECTS)
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h20000 $^ -l$(LIB)/bsd.lib

#-----------------------------------------------------------------------------
endif #InProcMake

# This line must be at EOF
@


1.5
log
@objects reordered when linking to allow ARM compiler to work
@
text
@d13 1
a13 2
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.4 1993/08/18 16:26:35 bart Exp nickc $
d15 1
d134 2
a135 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ $^ -l$(LIB)/bsd.lib
d138 2
a139 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ $^ -l$(LIB)/bsd.lib
d142 2
a143 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ $^ -l$(LIB)/bsd.lib
d146 2
a147 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h20000 $^ -l$(LIB)/bsd.lib
d150 2
a151 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h20000 $^ -l$(LIB)/bsd.lib
@


1.4
log
@Added not_tran.txt source
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1992/10/29 12:22:26 martyn Exp $
d97 2
a98 2
OBJECTS		= big.o lrutils.o stem.o utils.o btree.o \
		  insert.o search.o storage.o lrucache.o \
@


1.3
log
@move database to HPROC directory
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1992/10/27 19:16:42 martyn Exp $
d118 1
a118 1
		  vectlib.txt stopword.lst
@


1.2
log
@added new text files
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/09/04 16:13:15 martyn Exp $
d78 2
a79 2
	-$(CP) $(HSRC)/$(COMPONENT)/help0.txt $(LIB)
	-$(CP) $(HSRC)/$(COMPONENT)/help0.dct $(LIB)
d118 1
a118 1
		  vectlib.txt stopword.lst help0.dct help0.txt
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/06/29 15:47:11 nickc Exp $
d78 2
a79 2
	-$(CP) /giga/lib/help0.txt $(LIB)
	-$(CP) /giga/lib/help0.dct $(LIB)
d117 2
a118 1
SOURCES.odd	= makefile input_data stopword.lst
@
