head	1.5;
access;
symbols
	Helios1_3:1.5
	Helios13_beta:1.4
	Helios1_2_2:1.4
	Helios1_2_2Beta:1.4
	Helios1_2_1:1.3;
locks; strict;
comment	@ * @;


1.5
date	92.09.25.10.41.21;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.06.07.07.30.14;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	90.09.28.12.30.30;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.08.28.09.48.06;	author james;	state Exp;
branches;
next	1.1;

1.1
date	90.08.24.16.30.12;	author james;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Cleaned up all the different flags used into a standard coherent set. The
asm now builds for all targets correctly again
@
text
@/* $Id: encode.c,v 1.4 1991/06/07 07:30:14 nickc Exp $ */

#ifdef __HELIOS
#include <helios.h>
#define TargetBytesPerWord 4
#else
#include "ttypes.h"
#endif

#ifdef FALSE
#undef FALSE
#endif

#define FALSE 0l

#define f_pfix 0x20
#define f_nfix 0x60

/********************************************************/
/* pfsize                                               */
/*                                                      */
/* Calculates how many bytes the supplied value can be  */
/* encoded in.                                          */
/********************************************************/

PUBLIC WORD
pfsize( n )
  WORD n;
{
  WORD pfx = 0;

  
  if ( n < 0 )
    {
      pfx = 1;
      n   = (~n) >> 4;
    }

  for (; pfx <= TargetBytesPerWord * 2; pfx++)
    {
      n = n >> 4;
      
      if ( n == 0 )
	return pfx + 1;
    }

  return pfx;
}

/********************************************************/
/* encode                                               */
/*                                                      */
/* Generates a prefix encoded version of the given op   */
/* and argument, outputting the bytes via the supplied  */
/* function.                                            */
/********************************************************/

#define pbyte( x ) (*pbytefn)( x )

PRIVATE void
encodestep( arg, negative, pbytefn )
  WORD 		arg, negative;
  void (*	pbytefn)();
{
  if( arg > 15 )
    {
      encodestep( (WORD)(arg >> 4), negative, pbytefn );
      
      pbyte( (WORD)(f_pfix | ((negative ? ~arg : arg) & 0xf)) );
    }
  else
    pbyte( (WORD)((negative ? f_nfix : f_pfix ) | (arg & 0xf)) );
}


PUBLIC void
encode( op, arg, pbytefn )
  WORD 		op;
  WORD 		arg;
  void (*	pbytefn)();
{
  if ( arg < 0 )
    encodestep( (WORD)((~arg) >> 4), TRUE, pbytefn );
  else if ( arg > 15 )
    encodestep( (WORD)(arg >> 4), FALSE, pbytefn );

  pbyte( (WORD)(op | ( arg & 0xf )) );

  return;
}

/* End of encode.c */
@


1.4
log
@new improved version (50% speed increase)
@
text
@d1 1
a1 1
/* $Id: encode.c,v 1.3 90/09/28 12:30:30 nick Exp $ */
d3 1
a3 1
#ifdef NORCROFT
@


1.3
log
@tidied
@
text
@d1 1
a1 1
/* $Id$ */
d10 4
d26 3
a28 2
PUBLIC WORD pfsize(n)
WORD n;
d30 1
a30 1
        WORD pfx = 0;
d32 6
a37 5
        if( n < 0 )
        {
                pfx = 1;
                n = (~n) >> 4;
        }
d39 9
a47 6
        for(; pfx <= TargetBytesPerWord*2; pfx++)
        {
                n = n>>4;
                if( n == 0 ) return pfx+1;
        }
        return pfx;
d58 1
a58 1
#define pbyte(x) (*pbytefn)(x)
d60 4
a63 4
PUBLIC encode(op,arg,pbytefn)
WORD op;
WORD arg;
void (*pbytefn)();
d65 8
a72 3
        if ( arg < 0 ) encodestep( (WORD)((~arg)>>4), TRUE, pbytefn);
        else if ( arg > 15 ) encodestep( (WORD)(arg>>4), FALSE, pbytefn);
        pbyte( (WORD)(op | ( arg & 0xf )) );
d75 6
a80 3
PRIVATE encodestep( arg, negative, pbytefn)
WORD arg, negative;
void (*pbytefn)();
d82 8
a89 6
        if( arg > 15 )
        {
                encodestep( (WORD)(arg>>4), negative, pbytefn);
                pbyte( (WORD)(f_pfix | ((negative ? ~arg : arg) & 0xf)) );
        }
        else pbyte((WORD)((negative ? f_nfix : f_pfix ) | (arg & 0xf)) );
@


1.2
log
@uses local copy of ttypes.h
@
text
@d1 1
a9 3
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/asm/RCS/encode.c,v 1.1 90/08/24 16:30:12 james Exp Locker: james $";

#define TRUE 1l
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
#include <ttypes.h>
d9 1
a9 1
static char *rcsid = "$Header$";
@
