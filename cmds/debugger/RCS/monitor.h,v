head	1.1;
access;
symbols
	Helios_1_3_1:1.1
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.1
date	90.08.28.16.47.52;	author james;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/**
*
* Title:  Helios Debugger - Monitor support.
*
* Author: Andy England
*
* Date:   February 1989
*
*         (c) Copyright 1988, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
* $Header$
*
**/

typedef struct breakpoint
{
  NODE node;
  LOCATION loc;
  int count;
  char *docmd;
} BREAKPOINT;

#ifdef OLDCODE
typedef struct watch
{
  NODE node;
  union expr *expr;
} WATCH;

typedef struct watchpoint
{
  NODE node;
  union expr *expr;
  LIST watchelementlist;
  BOOL recalc;
} WATCHPOINT;

typedef struct watchelement
{
  NODE node;
  void *addr;
  int size;
} WATCHELEMENT;
#else
typedef struct watchpoint
{
  NODE node;
  char *expr;
  void *addr;
  int size;
  char *docmd;
  FORMAT format;
  BOOL silent;
} WATCHPOINT;
#endif

typedef struct
{
  void *addr;
  int size;
} MEM_LOCATION;

PUBLIC void stopped(DEBUG *, int, int, int);
PUBLIC void traced(DEBUG *, int, int, int);
PUBLIC void entered(DEBUG *, int, int, int);
PUBLIC void returned(DEBUG *, int, int, int);
PUBLIC void endthread(DEBUG *, int);
PUBLIC void addbreakpoint(DEBUG *, LOCATION, int, char *);
PUBLIC void rembreakpoint(DEBUG *, LOCATION);
PUBLIC void freebreakpoint(BREAKPOINT *);
PUBLIC BREAKPOINT *findbreakpoint(DEBUG *, LOCATION);
PUBLIC void listbreakpoints(DEBUG *);
PUBLIC WATCHPOINT *addwatchpoint(DEBUG *, char *, void *, int, char *, FORMAT, BOOL);
PUBLIC void remwatchpoint(DEBUG *, WATCHPOINT *);
PUBLIC void freewatchpoint(WATCHPOINT *);
PUBLIC void listwatchpoints(DEBUG *);
@
