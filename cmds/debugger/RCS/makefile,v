head	1.9;
access;
symbols
	Helios_1_3_1:1.9
	Helios_C40_1_3_Official_Release:1.9
	Alenia_release:1.9
	Helios13_beta:1.7
	Helios1_2_2:1.7
	Helios1_2_2Beta:1.7
	Helios1_2_1:1.4;
locks; strict;
comment	@# @;


1.9
date	92.11.04.14.41.56;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.10.26.12.53.50;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	91.08.19.10.35.54;	author martyn;	state Exp;
branches;
next	1.6;

1.6
date	91.08.19.10.29.07;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.08.19.09.44.04;	author craig;	state Exp;
branches;
next	1.4;

1.4
date	91.03.04.14.13.06;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	91.03.04.14.03.49;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	90.10.19.13.36.44;	author chris;	state Exp;
branches;
next	1.1;

1.1
date	90.08.28.16.57.44;	author james;	state Exp;
branches;
next	;


desc
@@


1.9
log
@C40 version completed
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: KERNEL
#
# File: /HSRC/cmds/debugger/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.8 1992/10/26 12:53:50 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/debugger

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak
include $(HSRC)/makeinc/$(HPROC).mak

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)


#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS	= tla

default : $(TARGETS) Xdefault


install	: installdef $(TARGETS) Xinstall
	$(CP) tla $(LIB)
	$(RM) $(ETC)/debugrc $(ETC)/debug.hlp
	$(CP) ../debugrc ../debug.hlp $(ETC)
	$(TOUCH) install

installdef:
	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) \
		mkout core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

SOURCES	=	$(SOURCES.c) $(SOURCES.a) $(HEADERS.c) $(HEADERS.m) $(SOURCES.odd)

OBJECTS	= 	$(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c  = thread.c server.c source.c load.c line.c dump.c develop.c \
           disasm.c symbol.c interp.c cmd.c var.c system.c \
           info.c expr.c table.c eval.c sem.c mem.c util.c menu.c \
           monitor.c debug.c key.c display.c module.c

SOURCES.a =

# C header files
HEADERS.c  =  tla.h

# AMPP macro files
HEADERS.m =

SOURCES.odd = makefile debugrc debug.hlp

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

# Turn off stack check and function header generation.
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1
else
  NCFLAGS := $(NCFLAGS) -wd -dV1_1 -dMEMCHECK -dSYMBOLS -dEVALUATION -DHE12
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -Zpl1 -Zpw1
  endif
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/fault.def $(LIB)/servlib.def

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

$(OBJECTS): $(HEADERS.c)

tla: $(CSTART) $(LIBDEFS) $(OBJECTS)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h10000 $^




#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.8
log
@added memory access checking for C40 version
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1991/08/19 10:35:54 martyn Exp nickc $
d129 1
a129 1
    NCFLAGS := $(NCFLAGS) -Zpc1
@


1.7
log
@corrected debug text names
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1991/08/19 10:29:07 martyn Exp martyn $
d128 3
@


1.6
log
@added text files
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1991/08/19 09:44:04 craig Exp $
d82 1
a82 1
	$(CP) debugrc debug.hlp $(ETC)
@


1.5
log
@changes for V2.0
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/03/04 14:13:06 martyn Exp craig $
d81 2
d115 1
a115 1
SOURCES.odd = makefile
@


1.4
log
@*** empty log message ***
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/03/04 14:03:49 martyn Exp $
d108 1
a108 4
HEADERS.c  =  cmd.h debug.h display.h eval.h expr.h \
            info.h interp.h key.h line.h module.h \
            monitor.h source.h symbol.h system.h table.h thread.h \
            util.h
d125 1
a125 1
  NCFLAGS := $(NCFLAGS) -wd -dV1_1 -dMEMCHECK -dSYMBOLS -dEVALUATION
@


1.3
log
@changed to new scheme
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.18 91/03/01 17:59:47 martyn Exp $
a81 1
endif
d145 1
a145 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h10000
@


1.2
log
@*** empty log message ***
@
text
@d1 4
d6 1
a6 1
# makefile for Helios debug
d8 4
a11 1
# $Header: /usr/perihelion/Helios/debugger/RCS/makefile,v 1.1 90/08/28 16:57:44 james Exp Locker: chris $
d13 6
a18 2
.SUFFIXES:
.SUFFIXES: .c .o
d20 2
a21 3
HELIOS  = /usr/perihelion/Helios/slashhelios/TRAN/
INCLUDE = $(HELIOS)include
LIB     = $(HELIOS)lib
d23 6
a28 6
CC   = /usr/perihelion/bin/nc
AMPP = /usr/perihelion/bin/ampp
ASM  = /usr/perihelion/asm
CP   = cp
TEMP = tmp
DLIBDIR = lib
d30 3
a32 1
CFLAGS  = -wd -j$(INCLUDE)/  -dV1_1 -dHELIOS -dMEMCHECK -dSYMBOLS -dEVALUATION
d34 2
a35 4
OBJECTS  = thread.o server.o source.o load.o line.o develop.o \
           symbol.o interp.o cmd.o var.o system.o \
           info.o expr.o table.o eval.o sem.o mem.o util.o menu.o \
           monitor.o debug.o key.o display.o module.o
d37 65
a101 1
SOURCES  = thread.c server.c source.c load.c line.c dump.c develop.c \
d106 4
a109 1
HEADERS  =  cmd.h debug.h display.h eval.h expr.h \
d114 2
a115 3
DLIBSRCS = $(DLIBDIR)/dlib.c $(DLIBDIR)/dlib.h $(DLIBDIR)/dlibasm.a \
           $(DLIBDIR)/dlibdef.a $(DLIBDIR)/dlibstar.a $(DLIBDIR)/dmsg.h \
           $(DLIBDIR)/makefile
d117 1
a117 1
DISTRIBSRCS = $(SOURCES) $(HEADERS) $(DLIBSRCS) makefile.hel
d119 2
a120 4
.c.o:
	$(CC) $(CFLAGS) $*.c -s $(TEMP)/$*.s
	asm -p -o$*.o $(TEMP)/$*.s
	rm $(TEMP)/$*.s
d122 2
a123 3
tla: $(OBJECTS)
	asm -v -s20000 -h10000 -n$@@ $(LIB)/cstart.o $(LIB)/servlib.def \
         $(LIB)/fault.def $(OBJECTS) -o$@@
d125 6
d132 2
a133 1
distrib: oem-kit
d135 19
a153 2
oem-kit: $(DISTRIBSRCS)
	tar cvf oem-kit $(DISTRIBSRCS)
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# $Header$
d9 3
a11 3
HELIOS  = /usr/perihelion/Helios
INCLUDE = $(HELIOS)/include
LIB     = $(HELIOS)/lib
d50 1
a50 1
        $(LIB)/fplib.def $(LIB)/fpclib.def $(LIB)/fault.def $(OBJECTS) -o$@@
@
