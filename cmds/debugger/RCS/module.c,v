head	1.5;
access;
symbols
	Helios_1_3_1:1.5
	Helios_C40_1_3_Official_Release:1.5
	Alenia_release:1.4
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.5
date	93.03.17.17.43.45;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	92.11.04.14.43.14;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	92.10.27.14.27.07;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	91.08.19.09.44.04;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	90.08.28.16.46.19;	author james;	state Exp;
branches;
next	;


desc
@@


1.5
log
@minor cosmetic changes
@
text
@/**
*
* Title:  Helios Debugger - Module support.
*
* Author: Andy England
*
* Date:   April 1989
*
*         (c) Copyright 1989 - 1993, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
**/

#ifdef __TRAN
static char *rcsid = "$Header: /hsrc/cmds/debugger/RCS/module.c,v 1.4 1992/11/04 14:43:14 nickc Exp nickc $";
#endif

#include "tla.h"

/**
*
* addmodule(debug, name, modnum);
*
* Add a module.
*
**/
PUBLIC BOOL addmodule(DEBUG *debug, char *name, int modnum)
{
  MODULE *module = NEW(MODULE);

  module->name       = strdup(name);
  module->modnum     = modnum;
  module->debug      = debug;
#ifdef OLDCODE
  module->source     = loadsource(debug, name);
#else
  module->source     = NULL;
#endif
  
#ifdef SYMBOLS
  module->outerblock = loadinfo(debug, module);

  if (module->outerblock == NULL)
    {
      /* unable to load .dbg file for this module */

      debugf( "Unable to load .dbg file for module %s", name );
      IOdebug( "Debugger: Unable to load .dbg file for module %s", name );
    }  
#else
  module->outerblock = NULL;
#endif
  
  AddTail( &debug->modulelist, &module->node );
  
#ifndef BUG
 if (module->outerblock == NULL)
     return(FALSE);
 else
   return(TRUE);
#endif
}

/**
*
* remmodule(module);
*
* Remove a module.
*
**/
PUBLIC void remmodule(MODULE *module)
{
  Remove(&module->node);
  freemem(module->name);
  unless (module->source == NULL) unloadsource(module->source);
#ifdef SYMBOLS
  unless (module->outerblock == NULL) walkblock(module->outerblock, freeblock, 0);
#endif
  freemem(module);
}

/**
*
* found = cmpmodnum(module, modnum)
*
* Support routine for getmodule().
*
**/
PRIVATE BOOL cmpmodnum(MODULE *module, int modnum)
{
  return module->modnum == modnum;
}

/**
*
* module = getmodule(debug, modnum);
*
* Find a module.
*
**/
PUBLIC MODULE *getmodule(DEBUG *debug, int modnum)
{
  return (MODULE *)SearchList(&debug->modulelist, (WordFnPtr)cmpmodnum, modnum);
}

/**
*
* found = cmpmodule(module, name)
*
* Support routine for findmodule().
*
**/
PRIVATE BOOL cmpmodule(MODULE *module, char *name)
{
  return strequ(module->name, name);
}

/**
*
* module = findmodule(debug, name);
*
* Find a module.
*
**/
PUBLIC MODULE *findmodule(DEBUG *debug, char *name)
{
  return (MODULE *)SearchList(&debug->modulelist, (WordFnPtr)cmpmodule, name);
}

/**
*
* source = getsource(module);
*
* Get the source for a module.
*
**/
PUBLIC SOURCE *getsource(MODULE *module)
{
  SOURCE *source;

  debugf("getsource(%s, %d)", module->name, module->modnum);
  if ((source = module->source) == NULL)
  {
    module->source = source = loadsource(module->debug, module->name);
  }
  return source;
}
@


1.4
log
@C40 version completed
@
text
@d9 1
a9 1
*         (c) Copyright 1989 - 1992, Perihelion Software Ltd.
d16 1
a16 1
static char *rcsid = "$Header: /m/giga/Helios.tmp/Helios/cmds/debugger/RCS/module.c,v 1.3 1992/10/27 14:27:07 nickc Exp nickc $";
d43 8
@


1.3
log
@fixed compile time warning
@
text
@d16 1
a16 1
static char *rcsid = "$Header: /hsrc/cmds/debugger/RCS/module.c,v 1.2 1991/08/19 09:44:04 craig Exp nickc $";
d32 3
a34 3
  module->name = strdup(name);
  module->modnum = modnum;
  module->debug = debug;
d36 1
a36 1
  module->source = loadsource(debug, name);
d38 1
a38 1
  module->source = NULL;
d40 1
d46 3
a48 1
  AddTail(&debug->modulelist, &module->node);
@


1.2
log
@Major fixes to V1.1 for V2.0 (see documentation for details)
@
text
@d9 1
a9 1
*         (c) Copyright 1989, Perihelion Software Ltd.
d15 3
a17 1
static char *rcsid = "$Header: /hsrc/cmds/debugger/RCS/module.c,v 1.1 1990/08/28 16:46:19 james Exp craig $";
@


1.1
log
@Initial revision
@
text
@d15 1
a15 7
#include <nonansi.h>
#include "debug.h"
#include "util.h"
#include "source.h"
#include "symbol.h"
#include "info.h"
#include "module.h"
d17 1
a17 1
static char *rcsid = "$Header$";
@
