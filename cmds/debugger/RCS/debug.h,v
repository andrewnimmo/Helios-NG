head	1.2;
access;
symbols
	Helios_1_3_1:1.2
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2;
locks; strict;
comment	@ * @;


1.2
date	90.10.19.12.54.59;	author chris;	state Exp;
branches;
next	1.1;

1.1
date	90.08.28.16.30.31;	author james;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove rcsid
@
text
@/**
*
* Title:  Helios Debugger - Header File.
*
* Author: Andy England
*
* Date:   September 1988
*
*         (c) Copyright 1988, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
**/

#include <stdio.h>
#include <ctype.h>
#ifdef OLDCODE
#include <stdlib.h>
#endif
#include <string.h>
#include <nonansi.h>
#include <queue.h>
#undef print
#undef STRING

typedef long LONG;
typedef unsigned long ULONG;
typedef int BOOL;
typedef Node NODE;
typedef List LIST;

#define AND &&
#define OR  ||

#define strequ(s, t)     (strcmp(s, t) == 0)
#define strnequ(s, t, n) (strncmp(s, t, n) == 0)
#define NEW(t)           (t *)newmem(sizeof(t))

#define PathMax 512

typedef enum
{
  Default, Ascii, Binary, Decimal, Error, Float, Hexadecimal, Octal, Unsigned
} FORMAT;

typedef struct
{
  struct module *module;
  int line;
} LOCATION;

typedef struct debug
{
  char name[256];
  LIST modulelist;
  LIST breakpointlist;
  LIST watchlist;
  LIST watchpointlist;
  LIST threadlist;
  Port port, reply;
  struct thread *thread;
  struct display *display;
  struct interp *interp;
  Environ env;
  struct line *line;
  struct eval *eval;
  struct table *table;
} DEBUG;

PUBLIC void *newmem(int);
PUBLIC void freemem(void *);
PUBLIC void putmem(void);

PUBLIC void initdebug(int, char *[]);
PUBLIC void debugf(char *, ...);
PUBLIC DEBUG *newdebug(char *);
PUBLIC void startdebug(DEBUG *, Port, Port);
PUBLIC void remdebug(DEBUG *);

#ifdef V1_1
#define _MYSYS_OPEN	64
extern Semaphore loadlock;
extern FILE      my_iob[_MYSYS_OPEN];
#endif
@


1.1
log
@Initial revision
@
text
@a25 2
static char *rcsid = "$Header$";

@
