head	1.1;
access;
symbols
	Helios_1_3_1:1.1
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.1
date	90.08.28.16.53.00;	author james;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/**
*
* Title:  Helios Debugger - System dependent parts.
*
* Author: Andy England
*
* Date:   September 1988
*
*         (c) Copyright 1988, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
* $Header$
*
**/

#define DebugTimeout OneSec

PUBLIC void receiver(DEBUG *);
PUBLIC void syscall(DEBUG *, void *, int, void *, int, void *);
PUBLIC void sysfree(DEBUG *, int);
PUBLIC void sysfreeall(DEBUG *);
PUBLIC void sysgo(DEBUG *, int);
PUBLIC void sysgoall(DEBUG *);
PUBLIC void sysgoto(DEBUG *, int, int, int);
PUBLIC void sysgotoall(DEBUG *, int, int);
PUBLIC void sysgotoframe(DEBUG *, int, int);
PUBLIC void sysgotoframeall(DEBUG *, int);
PUBLIC void syskill(DEBUG *, int);
PUBLIC void syskillall(DEBUG *);
PUBLIC void sysprofile(DEBUG *, int, int, int, int);
PUBLIC void sysstep(DEBUG *, int);
PUBLIC void sysstepall(DEBUG *);
PUBLIC void sysstop(DEBUG *, int);
PUBLIC void sysstopall(DEBUG *);
PUBLIC void systrace(DEBUG *, int, int, int, int);
PUBLIC void systraceall(DEBUG *);
PUBLIC void sysaddbreak(DEBUG *, int, int, int);
PUBLIC void sysrembreak(DEBUG *, int, int);
PUBLIC void peekmem(DEBUG *, void *, void *, int);
PUBLIC void peekdata(DEBUG *, void *, int, int, int);
PUBLIC void peekstack(DEBUG *, void *, int, int, int, int);
PUBLIC void pokemem(DEBUG *, void *, void *, int);
PUBLIC void *locatedata(DEBUG *, int, int);
PUBLIC void *locatestack(DEBUG *, int, int, int);
PUBLIC void sysaddwatch(DEBUG *, void *, int);
PUBLIC void sysremwatch(DEBUG *, void *, int);
PUBLIC int syswhere(DEBUG *, int, int, LOCATION *);
PUBLIC void systimeout(DEBUG *, int);
PUBLIC void systimeoutall(DEBUG *);

PUBLIC UBYTE peekbyte(DEBUG *, void *);
PUBLIC USHORT peekshort(DEBUG *, void *);
PUBLIC UWORD peekword(DEBUG *, void *);
@
