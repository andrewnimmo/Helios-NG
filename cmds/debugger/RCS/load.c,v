head	1.3;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.3
date	92.10.27.13.50.59;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	91.08.19.09.44.04;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	90.08.28.16.44.41;	author james;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fixed compile time warnings
@
text
@/**
*
* Title:  Helios Debugger - Program loading.
*
* Author: Andy England
*
* Date:   September 1988
*
*         (c) Copyright 1988, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
**/

#ifdef __TRAN
static char *rcsid = "$Header: /hsrc/cmds/debugger/RCS/load.c,v 1.2 1991/08/19 09:44:04 craig Exp nickc $";
#endif

#include "tla.h"

/**
*
* readcode(debug);
*
* Read through loaded object to discover module names.
*
**/
PUBLIC BOOL readcode(DEBUG *debug)
{
  Stream *stream;
  ImageHdr imagehdr;
  Module module;
  BOOL   mod_exists = FALSE;

#ifdef OLDCODE
  debugf("readcode(%s)", debug->env.Objv[1]->Name);
  if ((stream = Open(debug->env.Objv[1], "", O_ReadOnly)) == NULL)return(FALSE);
#endif
/*
-- crf : 12/08/91 - clean up use of Environment Objv
*/
  debugf("readcode(%s)", debug->env.Objv[OV_Code]->Name);
  if ((stream = Open(debug->env.Objv[OV_Code], "", O_ReadOnly)) == NULL)
    return(FALSE);

  Read(stream, (byte *)&imagehdr, sizeof(ImageHdr), -1);
  do
  {
    Read(stream, (byte *)&module, sizeof(ResRef), -1);
    if (module.Type == T_Module) 
    {
    	mod_exists = addmodule(debug, module.Name, (int)module.Id);
    }
    stream->Pos += module.Size - sizeof(ResRef);
  } until (module.Type == 0);
  Close(stream);
  debugf("code has been read");
  return(mod_exists);
}
@


1.2
log
@Major fixes to V1.1 for V2.0 (see documentation for details)
@
text
@d15 3
a17 1
static char *rcsid = "$Header: /hsrc/cmds/debugger/RCS/load.c,v 1.1 1990/08/28 16:44:41 james Exp craig $";
d33 1
a33 1
  BOOL   mod_exists;
d52 1
a52 1
    	mod_exists = addmodule(debug, module.Name, module.Id);
@


1.1
log
@Initial revision
@
text
@d15 1
a15 6
#include "debug.h"
#include "module.h"
#include <stdlib.h>
#include <syslib.h>
#include <posix.h>
#include <module.h>
d17 1
a17 1
static char *rcsid = "$Header$";
d33 1
d36 8
@
