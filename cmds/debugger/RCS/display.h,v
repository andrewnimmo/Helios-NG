head	1.1;
access;
symbols
	Helios_1_3_1:1.1
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.1
date	90.08.28.16.32.50;	author james;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/**
*
* Title:  Helios Debugger - Display handling.
*
* Author: Andy England
*
* Date:   September 1988
*
*         (c) Copyright 1988, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
* $Header$
*
**/

#define DisplayBorder	6

typedef struct
{
  int row;
  int col;
  int size;
} CURSOR;

typedef struct window
{
  NODE node;
  struct display *display;
  int pos;
  int size;
  LOCATION loc;
  LOCATION progloc;
  CURSOR cur;
} WINDOW;

typedef struct display
{
  DEBUG *debug;
  FILE *filein;
  FILE *fileout;
  LIST windowlist;
  WINDOW *topwin;
  Semaphore lock;
  int height;
  int width;
  int row;
  int col;
  int varsize;
  struct watchpoint **varvec;
  Port breakport;
  BOOL breakflag;
} DISPLAY;

PUBLIC DISPLAY *dopen(DEBUG *, char *);
PUBLIC BOOL testbreak(DISPLAY *);
PUBLIC void dclose(DISPLAY *);
PUBLIC void drefresh(DISPLAY *);
PUBLIC void dcursor(DISPLAY *, int, int);
PUBLIC void dstart(DISPLAY *);
PUBLIC void dend(DISPLAY *, BOOL);
PUBLIC void dclear(DISPLAY *);
PUBLIC void dinverse(DISPLAY *);
PUBLIC void dnormal(DISPLAY *);
PUBLIC void deol(DISPLAY *);
PUBLIC void dlock(DISPLAY *);
PUBLIC void dunlock(DISPLAY *);
PUBLIC void dprintf(DISPLAY *, char *, ...);
PUBLIC void xdputc(DISPLAY *, int);
PUBLIC void dputc(DISPLAY *, int);
PUBLIC int dgetc(DISPLAY *);
PUBLIC void raw(DISPLAY *);
PUBLIC void cooked(DISPLAY *);
PUBLIC void vgrow(DISPLAY *);
PUBLIC void vshrink(DISPLAY *);
PUBLIC void vinsert(DISPLAY *, struct watchpoint *);
PUBLIC void vdelete(DISPLAY *, int);
PUBLIC void vupdate(DISPLAY *, struct watchpoint *);
PUBLIC WINDOW *wopen(DISPLAY *);
PUBLIC void wclose(WINDOW *);
PUBLIC void wclear(WINDOW *);
PUBLIC void wselect(WINDOW *);
PUBLIC void wgrow(WINDOW *);
PUBLIC void wshrink(WINDOW *);
PUBLIC void lowlight(WINDOW *);
PUBLIC void wgoto(WINDOW *, LOCATION);
PUBLIC void view(WINDOW *, LOCATION);
PUBLIC void scrollup(WINDOW *, int);
PUBLIC void scrolldown(WINDOW *, int);
PUBLIC void pageup(WINDOW *);
PUBLIC void pagedown(WINDOW *);
PUBLIC void pagefirst(WINDOW *);
PUBLIC void pagelast(WINDOW *);
PUBLIC void cursorup(WINDOW *);
PUBLIC void cursordown(WINDOW *);
PUBLIC void cursorleft(WINDOW *);
PUBLIC void cursorright(WINDOW *);
PUBLIC void cursorgrow(WINDOW *);
PUBLIC void cursorshrink(WINDOW *);
PUBLIC char *getcurtext(WINDOW *, char *);
@
