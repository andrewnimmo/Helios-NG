head	1.13;
access;
symbols
	Helios_1_3_1:1.12
	Helios_C40_1_3_Official_Release:1.12
	Alenia_release:1.12
	Helios13_beta:1.3
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.1;
locks; strict;
comment	@# @;


1.13
date	93.11.17.17.26.12;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	92.11.04.15.00.52;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	92.10.16.17.40.05;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	92.10.09.09.15.39;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	92.10.08.13.50.41;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.10.08.09.41.18;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	92.10.08.08.41.01;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.09.29.14.19.22;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.09.29.12.50.41;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	92.09.23.15.13.01;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	91.11.13.11.38.09;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.08.19.09.47.51;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	91.03.05.12.59.06;	author martyn;	state Exp;
branches;
next	;


desc
@@


1.13
log
@fixed SOURCES.c declaration
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: KERNEL
#
# File: /HSRC/cmds/debugger/lib/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.12 1992/11/04 15:00:52 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/debugger/lib

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak
include $(HSRC)/makeinc/$(HPROC).mak

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)


#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS	= dlib dlib.def

default : $(TARGETS) Xdefault


install	: installdef $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(LIB)
	$(TOUCH) install

installdef:
	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) \
		mkout core ../mkout install installdef Xinstall dlib.d *.s *.o


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

SOURCES	=	$(SOURCES.c) $(SOURCES.a) $(HEADERS.c) $(HEADERS.m) $(SOURCES.odd)

OBJECTS	= 	$(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c  = $(HPROC)/dlib.c

SOURCES.a = dlibstar.a dlibdef.a #dlibasm.a

# C header files
HEADERS.c  =  dlib.h dmsg.h

# AMPP macro files
HEADERS.m = 

SOURCES.odd = makefile

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

# Turn off stack check and function header generation.
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1 -I..
else
  ifeq ($(HPROC),C40)
    NCFLAGS := -I.. $(NCFLAGS) -Zl -DV1_1 -Zpl1 -Zpw1
  else
    NCFLAGS := $(NCFLAGS) -pf0 -ps1 -r -DV1_1 -DHE12 
  endif
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/kernel.def $(LIB)/util.def \
           $(LIB)/posix.def $(LIB)/syslib.def

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

$(OBJECTS): $(HEADERS.c)


dlib: dlibstar.o dlib.o dlibasm.o $(HSRC)/nucleus/$(HPROC)/modend.p
	$(LINK.LIBRARY) -nDlib $^ $(LIBDEFS) -o$@@

dlib.d: dlibstar.a
	$(AMPP) -dmake.def 1 $(AMPPFLAGS) $(MACRO)/basic.m $^ > dlib.d

dlib.def:: dlib.d
	$(MAKE.DEF)

dlibstar.o : dlibstar.a



#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.12
log
@C40 version completed
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 1992/10/16 17:40:05 nickc Exp nickc $
d100 1
a100 1
SOURCES.c  = dlib.c
@


1.11
log
@added -Fd to C40 command line
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1992/10/09 09:15:39 nickc Exp nickc $
d123 1
a123 1
    NCFLAGS := $(NCFLAGS) -Zl -DV1_1 -DHE12 -I.. -Fd
a150 1
dlib.def:: dlibdef.a 
@


1.10
log
@added rule to build dlib.d
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 1992/10/08 13:50:41 nickc Exp nickc $
d123 1
a123 1
    NCFLAGS := $(NCFLAGS) -Zl -DV1_1 -DHE12 -I..
@


1.9
log
@Did not build before because of problems with the make.def macro.
Patched for now.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1992/10/08 09:41:18 nickc Exp nickc $
d88 1
a88 1
		mkout core ../mkout install installdef Xinstall
d147 5
a151 1
dlib.def: dlibdef.a
@


1.8
log
@fixed makefile for Transputer compilations
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/10/08 08:41:01 nickc Exp nickc $
d147 1
a147 1
dlib.def: dlibstar.o dlibdef.a
@


1.7
log
@added build-for-resident-library option
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/09/29 14:19:22 nickc Exp nickc $
d125 1
a125 1
    NCFLAGS := $(NCFLAGS) -pf0 -ps1 -r -DV1_1 -DHE12 -I..
@


1.6
log
@fixed for compilation of dlib.c locally
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1992/09/29 12:50:41 nickc Exp nickc $
d123 1
a123 1
    NCFLAGS := $(NCFLAGS) -m -DV1_1 -DHE12 -I..
@


1.5
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1992/09/23 15:13:01 martyn Exp nickc $
d120 1
a120 1
  NCFLAGS := $(NCFLAGS) -Zps1
d123 1
a123 1
    NCFLAGS := $(NCFLAGS) -m -DV1_1 -DHE12
d125 1
a125 1
    NCFLAGS := $(NCFLAGS) -pf0 -ps1 -r -DV1_1 -DHE12
@


1.4
log
@dlibasm.a is exported from processor specific directory.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1991/11/13 11:38:09 martyn Exp $
d122 5
a126 1
  NCFLAGS := $(NCFLAGS) -pf0 -ps1 -r -DV1_1 -DHE12
d145 1
a145 1
	$(ASM) -v -f $^ $(LIBDEFS) -o$@@
d148 1
a148 3
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m ../dlibdef.a >$(TMP)/dlib.x 
	$(ASM) -p $(TMP)/dlib.x -o$@@
	rm $(TMP)/dlib.x
d151 1
a151 3
	$(AMPP) $(AMPPFLAGS) $(MACRO)/basic.m ../dlibstar.a >$(TMP)/dlibstar.x 
	$(ASM) -p -ddlib.d $(TMP)/dlibstar.x -o$@@
	rm $(TMP)/dlibstar.x
@


1.3
log
@removed debug.m from SOURCES
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1991/08/19 09:47:51 craig Exp $
d102 1
a102 1
SOURCES.a = dlibstar.a dlibdef.a dlibasm.a
@


1.2
log
@changes from V1.1 to V2.0 (see documentation for details)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1991/03/05 12:59:06 martyn Exp craig $
d108 1
a108 1
HEADERS.m = debug.m
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/04 14:13:06 martyn Exp $
d122 1
a122 1
  NCFLAGS := $(NCFLAGS) -pf0 -ps1 -r -DV1_1
@
