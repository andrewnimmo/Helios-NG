head	1.6;
access;
symbols
	Helios_1_3_1:1.6
	Helios_C40_1_3_Official_Release:1.5
	Alenia_release:1.5
	C40_Field_Test_2:1.5;
locks; strict;
comment	@ * @;


1.6
date	93.06.22.16.58.53;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	92.09.25.18.03.17;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.09.04.13.22.55;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	92.09.02.18.23.53;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	92.09.01.17.19.50;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	92.03.12.21.16.01;	author paul;	state Exp;
branches;
next	;


desc
@@


1.6
log
@integrated latest ARM assembler with C40 - made floting point support
generic. ARM compiler has various fixes and ARM6 mneumonic support
@
text
@/*
 * File:	lex_ARM.c
 * Subsystem:	Generic (ARM) Assembler
 * Author:	P.A.Beskeen
 * Date:	Dec '91
 *
 * Description: ARM specific lexer functions
 *
 *		My apologies for the verbose nature of this file, however the 
 *		ARM syntax gives oodles of different possible keywords.	A code
 *		space reducing optimisation could be done if required later.
 *		This would involve changing the generic part of the lexer.
 *		However, I believe the current method will produce a faster
 *		assembler (-; ...to implement - the games up - I admit it! ;-).
 *
 * RcsId: $Id: lex_ARM.c,v 1.5 1992/09/25 18:03:17 paul Exp $
 *
 * (C) Copyright 1992 Paul Beskeen
 * 
 * $RcsLog$
 *
 */

/* Include Files: */

#include <stdlib.h>

#include "gasm.h"
#include "y.tab.h"
#include "ghof.h"



/*
 * This structure is used to initialise the hash table with the ARM specific
 * mnemonics. It associates the keyword with its lexer token value,
 * the condition code and the binary instruction template for that opcode.
 *  
 * N.B. keyword must be entered in lower case.
 *  
 * This description may seem needlessly verbose, but it leads to faster
 * initialisation and far less memory fragmentation.
 *
 */

static Mnemonic TheMnemonics[] =  {

	/* ************************************************************ */
	/* ARM Machine opcode mnemonics					*/
	/* ************************************************************ */

	/* TEXT		TOKEN	OPCODE		*/

	/* Branch op-codes 			*/

	{"b",		B,	C_AL | OP_B	},
	{"bl",		BL,	C_AL | OP_BL	},

	{"beq",		B,	C_EQ | OP_B	},
	{"bleq",	BL,	C_EQ | OP_BL	},
	{"bne",		B,	C_NE | OP_B	},
	{"blne",	BL,	C_NE | OP_BL	},
	{"bcs",		B,	C_CS | OP_B	},
	{"blcs",	BL,	C_CS | OP_BL	},
	{"bcc",		B,	C_CC | OP_B	},
	{"blcc",	BL,	C_CC | OP_BL	},
	{"bmi",		B,	C_MI | OP_B	},
	{"blmi",	BL,	C_MI | OP_BL	},
	{"bpl",		B,	C_PL | OP_B	},
	{"blpl",	BL,	C_PL | OP_BL	},
	{"bvs",		B,	C_VS | OP_B	},
	{"blvs",	BL,	C_VS | OP_BL	},
	{"bvc",		B,	C_VC | OP_B	},
	{"blvc",	BL,	C_VC | OP_BL	},
	{"bhi",		B,	C_HI | OP_B	},
	{"blhi",	BL,	C_HI | OP_BL	},
	{"bls",		B,	C_LS | OP_B	},
	{"blls",	BL,	C_LS | OP_BL	},
	{"bge",		B,	C_GE | OP_B	},
	{"blge",	BL,	C_GE | OP_BL	},
	{"blt",		B,	C_LT | OP_B	},
	{"bllt",	BL,	C_LT | OP_BL	},
	{"bgt",		B,	C_GT | OP_B	},
	{"blgt",	BL,	C_GT | OP_BL	},
	{"ble",		B,	C_LE | OP_B	},
	{"blle",	BL,	C_LE | OP_BL	},
	{"bal",		B,	C_AL | OP_B	},
	{"blal",	BL,	C_AL | OP_BL	},
	{"bnv",		B,	C_NV | OP_B	},
	{"blnv",	BL,	C_NV | OP_BL	},


	/* Data Processing op-codes			*/

/* AND */
	{"and",		AND,	C_AL | OP_AND		},
	{"ands",	AND,	C_AL | OP_AND | DP_S	},
	{"andeq",	AND,	C_EQ | OP_AND		},
	{"andeqs",	AND,	C_EQ | OP_AND | DP_S	},
	{"andne",	AND,	C_NE | OP_AND		},
	{"andnes",	AND,	C_NE | OP_AND | DP_S	},
	{"andcs",	AND,	C_CS | OP_AND		},
	{"andcss",	AND,	C_CS | OP_AND | DP_S	},
	{"andcc",	AND,	C_CC | OP_AND		},
	{"andccs",	AND,	C_CC | OP_AND | DP_S	},
	{"andmi",	AND,	C_MI | OP_AND		},
	{"andmis",	AND,	C_MI | OP_AND | DP_S	},
	{"andpl",	AND,	C_PL | OP_AND		},
	{"andpls",	AND,	C_PL | OP_AND | DP_S	},
	{"andvs",	AND,	C_VS | OP_AND		},
	{"andvss",	AND,	C_VS | OP_AND | DP_S	},
	{"andvc",	AND,	C_VC | OP_AND		},
	{"andvcs",	AND,	C_VC | OP_AND | DP_S	},
	{"andhi",	AND,	C_HI | OP_AND		},
	{"andhis",	AND,	C_HI | OP_AND | DP_S	},
	{"andls",	AND,	C_LS | OP_AND		},
	{"andlss",	AND,	C_LS | OP_AND | DP_S	},
	{"andge",	AND,	C_GE | OP_AND		},
	{"andges",	AND,	C_GE | OP_AND | DP_S	},
	{"andlt",	AND,	C_LT | OP_AND		},
	{"andlts",	AND,	C_LT | OP_AND | DP_S	},
	{"andgt",	AND,	C_GT | OP_AND		},
	{"andgts",	AND,	C_GT | OP_AND | DP_S	},
	{"andle",	AND,	C_LE | OP_AND		},
	{"andles",	AND,	C_LE | OP_AND | DP_S	},
	{"andal",	AND,	C_AL | OP_AND		},
	{"andals",	AND,	C_AL | OP_AND | DP_S	},
	{"andnv",	AND,	C_NV | OP_AND		},
	{"andnvs",	AND,	C_NV | OP_AND | DP_S	},
/* EOR */
	{"eor",		EOR,	C_AL | OP_EOR		},
	{"eors",	EOR,	C_AL | OP_EOR | DP_S	},
	{"eoreq",	EOR,	C_EQ | OP_EOR		},
	{"eoreqs",	EOR,	C_EQ | OP_EOR | DP_S	},
	{"eorne",	EOR,	C_NE | OP_EOR		},
	{"eornes",	EOR,	C_NE | OP_EOR | DP_S	},
	{"eorcs",	EOR,	C_CS | OP_EOR		},
	{"eorcss",	EOR,	C_CS | OP_EOR | DP_S	},
	{"eorcc",	EOR,	C_CC | OP_EOR		},
	{"eorccs",	EOR,	C_CC | OP_EOR | DP_S	},
	{"eormi",	EOR,	C_MI | OP_EOR		},
	{"eormis",	EOR,	C_MI | OP_EOR | DP_S	},
	{"eorpl",	EOR,	C_PL | OP_EOR		},
	{"eorpls",	EOR,	C_PL | OP_EOR | DP_S	},
	{"eorvs",	EOR,	C_VS | OP_EOR		},
	{"eorvss",	EOR,	C_VS | OP_EOR | DP_S	},
	{"eorvc",	EOR,	C_VC | OP_EOR		},
	{"eorvcs",	EOR,	C_VC | OP_EOR | DP_S	},
	{"eorhi",	EOR,	C_HI | OP_EOR		},
	{"eorhis",	EOR,	C_HI | OP_EOR | DP_S	},
	{"eorls",	EOR,	C_LS | OP_EOR		},
	{"eorlss",	EOR,	C_LS | OP_EOR | DP_S	},
	{"eorge",	EOR,	C_GE | OP_EOR		},
	{"eorges",	EOR,	C_GE | OP_EOR | DP_S	},
	{"eorlt",	EOR,	C_LT | OP_EOR		},
	{"eorlts",	EOR,	C_LT | OP_EOR | DP_S	},
	{"eorgt",	EOR,	C_GT | OP_EOR		},
	{"eorgts",	EOR,	C_GT | OP_EOR | DP_S	},
	{"eorle",	EOR,	C_LE | OP_EOR		},
	{"eorles",	EOR,	C_LE | OP_EOR | DP_S	},
	{"eoral",	EOR,	C_AL | OP_EOR		},
	{"eorals",	EOR,	C_AL | OP_EOR | DP_S	},
	{"eornv",	EOR,	C_NV | OP_EOR		},
	{"eornvs",	EOR,	C_NV | OP_EOR | DP_S	},
/* SUB */
	{"sub",		SUB,	C_AL | OP_SUB		},
	{"subs",	SUB,	C_AL | OP_SUB | DP_S	},
	{"subeq",	SUB,	C_EQ | OP_SUB		},
	{"subeqs",	SUB,	C_EQ | OP_SUB | DP_S	},
	{"subne",	SUB,	C_NE | OP_SUB		},
	{"subnes",	SUB,	C_NE | OP_SUB | DP_S	},
	{"subcs",	SUB,	C_CS | OP_SUB		},
	{"subcss",	SUB,	C_CS | OP_SUB | DP_S	},
	{"subcc",	SUB,	C_CC | OP_SUB		},
	{"subccs",	SUB,	C_CC | OP_SUB | DP_S	},
	{"submi",	SUB,	C_MI | OP_SUB		},
	{"submis",	SUB,	C_MI | OP_SUB | DP_S	},
	{"subpl",	SUB,	C_PL | OP_SUB		},
	{"subpls",	SUB,	C_PL | OP_SUB | DP_S	},
	{"subvs",	SUB,	C_VS | OP_SUB		},
	{"subvss",	SUB,	C_VS | OP_SUB | DP_S	},
	{"subvc",	SUB,	C_VC | OP_SUB		},
	{"subvcs",	SUB,	C_VC | OP_SUB | DP_S	},
	{"subhi",	SUB,	C_HI | OP_SUB		},
	{"subhis",	SUB,	C_HI | OP_SUB | DP_S	},
	{"subls",	SUB,	C_LS | OP_SUB		},
	{"sublss",	SUB,	C_LS | OP_SUB | DP_S	},
	{"subge",	SUB,	C_GE | OP_SUB		},
	{"subges",	SUB,	C_GE | OP_SUB | DP_S	},
	{"sublt",	SUB,	C_LT | OP_SUB		},
	{"sublts",	SUB,	C_LT | OP_SUB | DP_S	},
	{"subgt",	SUB,	C_GT | OP_SUB		},
	{"subgts",	SUB,	C_GT | OP_SUB | DP_S	},
	{"suble",	SUB,	C_LE | OP_SUB		},
	{"subles",	SUB,	C_LE | OP_SUB | DP_S	},
	{"subal",	SUB,	C_AL | OP_SUB		},
	{"subals",	SUB,	C_AL | OP_SUB | DP_S	},
	{"subnv",	SUB,	C_NV | OP_SUB		},
	{"subnvs",	SUB,	C_NV | OP_SUB | DP_S	},
/* RSB */
	{"rsb",		RSB,	C_AL | OP_RSB		},
	{"rsbs",	RSB,	C_AL | OP_RSB | DP_S	},
	{"rsbeq",	RSB,	C_EQ | OP_RSB		},
	{"rsbeqs",	RSB,	C_EQ | OP_RSB | DP_S	},
	{"rsbne",	RSB,	C_NE | OP_RSB		},
	{"rsbnes",	RSB,	C_NE | OP_RSB | DP_S	},
	{"rsbcs",	RSB,	C_CS | OP_RSB		},
	{"rsbcss",	RSB,	C_CS | OP_RSB | DP_S	},
	{"rsbcc",	RSB,	C_CC | OP_RSB		},
	{"rsbccs",	RSB,	C_CC | OP_RSB | DP_S	},
	{"rsbmi",	RSB,	C_MI | OP_RSB		},
	{"rsbmis",	RSB,	C_MI | OP_RSB | DP_S	},
	{"rsbpl",	RSB,	C_PL | OP_RSB		},
	{"rsbpls",	RSB,	C_PL | OP_RSB | DP_S	},
	{"rsbvs",	RSB,	C_VS | OP_RSB		},
	{"rsbvss",	RSB,	C_VS | OP_RSB | DP_S	},
	{"rsbvc",	RSB,	C_VC | OP_RSB		},
	{"rsbvcs",	RSB,	C_VC | OP_RSB | DP_S	},
	{"rsbhi",	RSB,	C_HI | OP_RSB		},
	{"rsbhis",	RSB,	C_HI | OP_RSB | DP_S	},
	{"rsbls",	RSB,	C_LS | OP_RSB		},
	{"rsblss",	RSB,	C_LS | OP_RSB | DP_S	},
	{"rsbge",	RSB,	C_GE | OP_RSB		},
	{"rsbges",	RSB,	C_GE | OP_RSB | DP_S	},
	{"rsblt",	RSB,	C_LT | OP_RSB		},
	{"rsblts",	RSB,	C_LT | OP_RSB | DP_S	},
	{"rsbgt",	RSB,	C_GT | OP_RSB		},
	{"rsbgts",	RSB,	C_GT | OP_RSB | DP_S	},
	{"rsble",	RSB,	C_LE | OP_RSB		},
	{"rsbles",	RSB,	C_LE | OP_RSB | DP_S	},
	{"rsbal",	RSB,	C_AL | OP_RSB		},
	{"rsbals",	RSB,	C_AL | OP_RSB | DP_S	},
	{"rsbnv",	RSB,	C_NV | OP_RSB		},
	{"rsbnvs",	RSB,	C_NV | OP_RSB | DP_S	},
/* ADD */
	{"add",		ADD,	C_AL | OP_ADD		},
	{"adds",	ADD,	C_AL | OP_ADD | DP_S	},
	{"addeq",	ADD,	C_EQ | OP_ADD		},
	{"addeqs",	ADD,	C_EQ | OP_ADD | DP_S	},
	{"addne",	ADD,	C_NE | OP_ADD		},
	{"addnes",	ADD,	C_NE | OP_ADD | DP_S	},
	{"addcs",	ADD,	C_CS | OP_ADD		},
	{"addcss",	ADD,	C_CS | OP_ADD | DP_S	},
	{"addcc",	ADD,	C_CC | OP_ADD		},
	{"addccs",	ADD,	C_CC | OP_ADD | DP_S	},
	{"addmi",	ADD,	C_MI | OP_ADD		},
	{"addmis",	ADD,	C_MI | OP_ADD | DP_S	},
	{"addpl",	ADD,	C_PL | OP_ADD		},
	{"addpls",	ADD,	C_PL | OP_ADD | DP_S	},
	{"addvs",	ADD,	C_VS | OP_ADD		},
	{"addvss",	ADD,	C_VS | OP_ADD | DP_S	},
	{"addvc",	ADD,	C_VC | OP_ADD		},
	{"addvcs",	ADD,	C_VC | OP_ADD | DP_S	},
	{"addhi",	ADD,	C_HI | OP_ADD		},
	{"addhis",	ADD,	C_HI | OP_ADD | DP_S	},
	{"addls",	ADD,	C_LS | OP_ADD		},
	{"addlss",	ADD,	C_LS | OP_ADD | DP_S	},
	{"addge",	ADD,	C_GE | OP_ADD		},
	{"addges",	ADD,	C_GE | OP_ADD | DP_S	},
	{"addlt",	ADD,	C_LT | OP_ADD		},
	{"addlts",	ADD,	C_LT | OP_ADD | DP_S	},
	{"addgt",	ADD,	C_GT | OP_ADD		},
	{"addgts",	ADD,	C_GT | OP_ADD | DP_S	},
	{"addle",	ADD,	C_LE | OP_ADD		},
	{"addles",	ADD,	C_LE | OP_ADD | DP_S	},
	{"addal",	ADD,	C_AL | OP_ADD		},
	{"addals",	ADD,	C_AL | OP_ADD | DP_S	},
	{"addnv",	ADD,	C_NV | OP_ADD		},
	{"addnvs",	ADD,	C_NV | OP_ADD | DP_S	},
/* ADC */
	{"adc",		ADC,	C_AL | OP_ADC		},
	{"adcs",	ADC,	C_AL | OP_ADC | DP_S	},
	{"adceq",	ADC,	C_EQ | OP_ADC		},
	{"adceqs",	ADC,	C_EQ | OP_ADC | DP_S	},
	{"adcne",	ADC,	C_NE | OP_ADC		},
	{"adcnes",	ADC,	C_NE | OP_ADC | DP_S	},
	{"adccs",	ADC,	C_CS | OP_ADC		},
	{"adccss",	ADC,	C_CS | OP_ADC | DP_S	},
	{"adccc",	ADC,	C_CC | OP_ADC		},
	{"adcccs",	ADC,	C_CC | OP_ADC | DP_S	},
	{"adcmi",	ADC,	C_MI | OP_ADC		},
	{"adcmis",	ADC,	C_MI | OP_ADC | DP_S	},
	{"adcpl",	ADC,	C_PL | OP_ADC		},
	{"adcpls",	ADC,	C_PL | OP_ADC | DP_S	},
	{"adcvs",	ADC,	C_VS | OP_ADC		},
	{"adcvss",	ADC,	C_VS | OP_ADC | DP_S	},
	{"adcvc",	ADC,	C_VC | OP_ADC		},
	{"adcvcs",	ADC,	C_VC | OP_ADC | DP_S	},
	{"adchi",	ADC,	C_HI | OP_ADC		},
	{"adchis",	ADC,	C_HI | OP_ADC | DP_S	},
	{"adcls",	ADC,	C_LS | OP_ADC		},
	{"adclss",	ADC,	C_LS | OP_ADC | DP_S	},
	{"adcge",	ADC,	C_GE | OP_ADC		},
	{"adcges",	ADC,	C_GE | OP_ADC | DP_S	},
	{"adclt",	ADC,	C_LT | OP_ADC		},
	{"adclts",	ADC,	C_LT | OP_ADC | DP_S	},
	{"adcgt",	ADC,	C_GT | OP_ADC		},
	{"adcgts",	ADC,	C_GT | OP_ADC | DP_S	},
	{"adcle",	ADC,	C_LE | OP_ADC		},
	{"adcles",	ADC,	C_LE | OP_ADC | DP_S	},
	{"adcal",	ADC,	C_AL | OP_ADC		},
	{"adcals",	ADC,	C_AL | OP_ADC | DP_S	},
	{"adcnv",	ADC,	C_NV | OP_ADC		},
	{"adcnvs",	ADC,	C_NV | OP_ADC | DP_S	},
/* SBC */
	{"sbc",		SBC,	C_AL | OP_SBC		},
	{"sbcs",	SBC,	C_AL | OP_SBC | DP_S	},
	{"sbceq",	SBC,	C_EQ | OP_SBC		},
	{"sbceqs",	SBC,	C_EQ | OP_SBC | DP_S	},
	{"sbcne",	SBC,	C_NE | OP_SBC		},
	{"sbcnes",	SBC,	C_NE | OP_SBC | DP_S	},
	{"sbccs",	SBC,	C_CS | OP_SBC		},
	{"sbccss",	SBC,	C_CS | OP_SBC | DP_S	},
	{"sbccc",	SBC,	C_CC | OP_SBC		},
	{"sbcccs",	SBC,	C_CC | OP_SBC | DP_S	},
	{"sbcmi",	SBC,	C_MI | OP_SBC		},
	{"sbcmis",	SBC,	C_MI | OP_SBC | DP_S	},
	{"sbcpl",	SBC,	C_PL | OP_SBC		},
	{"sbcpls",	SBC,	C_PL | OP_SBC | DP_S	},
	{"sbcvs",	SBC,	C_VS | OP_SBC		},
	{"sbcvss",	SBC,	C_VS | OP_SBC | DP_S	},
	{"sbcvc",	SBC,	C_VC | OP_SBC		},
	{"sbcvcs",	SBC,	C_VC | OP_SBC | DP_S	},
	{"sbchi",	SBC,	C_HI | OP_SBC		},
	{"sbchis",	SBC,	C_HI | OP_SBC | DP_S	},
	{"sbcls",	SBC,	C_LS | OP_SBC		},
	{"sbclss",	SBC,	C_LS | OP_SBC | DP_S	},
	{"sbcge",	SBC,	C_GE | OP_SBC		},
	{"sbcges",	SBC,	C_GE | OP_SBC | DP_S	},
	{"sbclt",	SBC,	C_LT | OP_SBC		},
	{"sbclts",	SBC,	C_LT | OP_SBC | DP_S	},
	{"sbcgt",	SBC,	C_GT | OP_SBC		},
	{"sbcgts",	SBC,	C_GT | OP_SBC | DP_S	},
	{"sbcle",	SBC,	C_LE | OP_SBC		},
	{"sbcles",	SBC,	C_LE | OP_SBC | DP_S	},
	{"sbcal",	SBC,	C_AL | OP_SBC		},
	{"sbcals",	SBC,	C_AL | OP_SBC | DP_S	},
	{"sbcnv",	SBC,	C_NV | OP_SBC		},
	{"sbcnvs",	SBC,	C_NV | OP_SBC | DP_S	},
/* RSC */
	{"rsc",		RSC,	C_AL | OP_RSC		},
	{"rscs",	RSC,	C_AL | OP_RSC | DP_S	},
	{"rsceq",	RSC,	C_EQ | OP_RSC		},
	{"rsceqs",	RSC,	C_EQ | OP_RSC | DP_S	},
	{"rscne",	RSC,	C_NE | OP_RSC		},
	{"rscnes",	RSC,	C_NE | OP_RSC | DP_S	},
	{"rsccs",	RSC,	C_CS | OP_RSC		},
	{"rsccss",	RSC,	C_CS | OP_RSC | DP_S	},
	{"rsccc",	RSC,	C_CC | OP_RSC		},
	{"rscccs",	RSC,	C_CC | OP_RSC | DP_S	},
	{"rscmi",	RSC,	C_MI | OP_RSC		},
	{"rscmis",	RSC,	C_MI | OP_RSC | DP_S	},
	{"rscpl",	RSC,	C_PL | OP_RSC		},
	{"rscpls",	RSC,	C_PL | OP_RSC | DP_S	},
	{"rscvs",	RSC,	C_VS | OP_RSC		},
	{"rscvss",	RSC,	C_VS | OP_RSC | DP_S	},
	{"rscvc",	RSC,	C_VC | OP_RSC		},
	{"rscvcs",	RSC,	C_VC | OP_RSC | DP_S	},
	{"rschi",	RSC,	C_HI | OP_RSC		},
	{"rschis",	RSC,	C_HI | OP_RSC | DP_S	},
	{"rscls",	RSC,	C_LS | OP_RSC		},
	{"rsclss",	RSC,	C_LS | OP_RSC | DP_S	},
	{"rscge",	RSC,	C_GE | OP_RSC		},
	{"rscges",	RSC,	C_GE | OP_RSC | DP_S	},
	{"rsclt",	RSC,	C_LT | OP_RSC		},
	{"rsclts",	RSC,	C_LT | OP_RSC | DP_S	},
	{"rscgt",	RSC,	C_GT | OP_RSC		},
	{"rscgts",	RSC,	C_GT | OP_RSC | DP_S	},
	{"rscle",	RSC,	C_LE | OP_RSC		},
	{"rscles",	RSC,	C_LE | OP_RSC | DP_S	},
	{"rscal",	RSC,	C_AL | OP_RSC		},
	{"rscals",	RSC,	C_AL | OP_RSC | DP_S	},
	{"rscnv",	RSC,	C_NV | OP_RSC		},
	{"rscnvs",	RSC,	C_NV | OP_RSC | DP_S	},
/* TST - defaults to setting the condition codes */
	{"tst",		TST,	C_AL | OP_TST | DP_S	},
	{"tsts",	TST,	C_AL | OP_TST | DP_S	},
	{"tstp",	TST,	C_AL | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tsteq",	TST,	C_EQ | OP_TST | DP_S	},
	{"tsteqp",	TST,	C_EQ | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstne",	TST,	C_NE | OP_TST | DP_S	},
	{"tstnep",	TST,	C_NE | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstcs",	TST,	C_CS | OP_TST | DP_S	},
	{"tstcsp",	TST,	C_CS | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstcc",	TST,	C_CC | OP_TST | DP_S	},
	{"tstccp",	TST,	C_CC | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstmi",	TST,	C_MI | OP_TST | DP_S	},
	{"tstmip",	TST,	C_MI | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstpl",	TST,	C_PL | OP_TST | DP_S	},
	{"tstplp",	TST,	C_PL | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstvs",	TST,	C_VS | OP_TST | DP_S	},
	{"tstvsp",	TST,	C_VS | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstvc",	TST,	C_VC | OP_TST | DP_S	},
	{"tstvcp",	TST,	C_VC | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tsthi",	TST,	C_HI | OP_TST | DP_S	},
	{"tsthip",	TST,	C_HI | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstls",	TST,	C_LS | OP_TST | DP_S	},
	{"tstlsp",	TST,	C_LS | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstge",	TST,	C_GE | OP_TST | DP_S	},
	{"tstgep",	TST,	C_GE | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstlt",	TST,	C_LT | OP_TST | DP_S	},
	{"tstltp",	TST,	C_LT | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstgt",	TST,	C_GT | OP_TST | DP_S	},
	{"tstgtp",	TST,	C_GT | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstle",	TST,	C_LE | OP_TST | DP_S	},
	{"tstlep",	TST,	C_LE | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstal",	TST,	C_AL | OP_TST | DP_S	},
	{"tstalp",	TST,	C_AL | OP_TST | DP_S | DP_DSTREG(R_R15)	},
	{"tstnv",	TST,	C_NV | OP_TST | DP_S	},
	{"tstnvp",	TST,	C_NV | OP_TST | DP_S | DP_DSTREG(R_R15)	},
/* TEQ - defaults to setting the condition codes */
	{"teq",		TEQ,	C_AL | OP_TEQ | DP_S	},
	{"teqs",	TEQ,	C_AL | OP_TEQ | DP_S	},
	{"teqp",	TEQ,	C_AL | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqeq",	TEQ,	C_EQ | OP_TEQ | DP_S	},
	{"teqeqp",	TEQ,	C_EQ | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqne",	TEQ,	C_NE | OP_TEQ | DP_S	},
	{"teqnep",	TEQ,	C_NE | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqcs",	TEQ,	C_CS | OP_TEQ | DP_S	},
	{"teqcsp",	TEQ,	C_CS | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqcc",	TEQ,	C_CC | OP_TEQ | DP_S	},
	{"teqccp",	TEQ,	C_CC | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqmi",	TEQ,	C_MI | OP_TEQ | DP_S	},
	{"teqmip",	TEQ,	C_MI | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqpl",	TEQ,	C_PL | OP_TEQ | DP_S	},
	{"teqplp",	TEQ,	C_PL | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqvs",	TEQ,	C_VS | OP_TEQ | DP_S	},
	{"teqvsp",	TEQ,	C_VS | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqvc",	TEQ,	C_VC | OP_TEQ | DP_S	},
	{"teqvcp",	TEQ,	C_VC | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqhi",	TEQ,	C_HI | OP_TEQ | DP_S	},
	{"teqhip",	TEQ,	C_HI | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqls",	TEQ,	C_LS | OP_TEQ | DP_S	},
	{"teqlsp",	TEQ,	C_LS | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqge",	TEQ,	C_GE | OP_TEQ | DP_S	},
	{"teqgep",	TEQ,	C_GE | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqlt",	TEQ,	C_LT | OP_TEQ | DP_S	},
	{"teqltp",	TEQ,	C_LT | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqgt",	TEQ,	C_GT | OP_TEQ | DP_S	},
	{"teqgtp",	TEQ,	C_GT | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqle",	TEQ,	C_LE | OP_TEQ | DP_S	},
	{"teqlep",	TEQ,	C_LE | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqal",	TEQ,	C_AL | OP_TEQ | DP_S	},
	{"teqalp",	TEQ,	C_AL | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
	{"teqnv",	TEQ,	C_NV | OP_TEQ | DP_S	},
	{"teqnvp",	TEQ,	C_NV | OP_TEQ | DP_S | DP_DSTREG(R_R15)	},
/* CMP  - defaults to setting the condition codes */
	{"cmp",		CMP,	C_AL | OP_CMP | DP_S	},
	{"cmps",	CMP,	C_AL | OP_CMP | DP_S	},
	{"cmpp",	CMP,	C_AL | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpeq",	CMP,	C_EQ | OP_CMP | DP_S	},
	{"cmpeqp",	CMP,	C_EQ | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpne",	CMP,	C_NE | OP_CMP | DP_S	},
	{"cmpnep",	CMP,	C_NE | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpcs",	CMP,	C_CS | OP_CMP | DP_S	},
	{"cmpcsp",	CMP,	C_CS | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpcc",	CMP,	C_CC | OP_CMP | DP_S	},
	{"cmpccp",	CMP,	C_CC | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpmi",	CMP,	C_MI | OP_CMP | DP_S	},
	{"cmpmip",	CMP,	C_MI | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmppl",	CMP,	C_PL | OP_CMP | DP_S	},
	{"cmpplp",	CMP,	C_PL | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpvs",	CMP,	C_VS | OP_CMP | DP_S	},
	{"cmpvsp",	CMP,	C_VS | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpvc",	CMP,	C_VC | OP_CMP | DP_S	},
	{"cmpvcp",	CMP,	C_VC | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmphi",	CMP,	C_HI | OP_CMP | DP_S	},
	{"cmphip",	CMP,	C_HI | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpls",	CMP,	C_LS | OP_CMP | DP_S	},
	{"cmplsp",	CMP,	C_LS | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpge",	CMP,	C_GE | OP_CMP | DP_S	},
	{"cmpgep",	CMP,	C_GE | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmplt",	CMP,	C_LT | OP_CMP | DP_S	},
	{"cmpltp",	CMP,	C_LT | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpgt",	CMP,	C_GT | OP_CMP | DP_S	},
	{"cmpgtp",	CMP,	C_GT | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmple",	CMP,	C_LE | OP_CMP | DP_S	},
	{"cmplep",	CMP,	C_LE | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpal",	CMP,	C_AL | OP_CMP | DP_S	},
	{"cmpalp",	CMP,	C_AL | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
	{"cmpnv",	CMP,	C_NV | OP_CMP | DP_S	},
	{"cmpnvp",	CMP,	C_NV | OP_CMP | DP_S | DP_DSTREG(R_R15)	},
/* CMN - defaults to setting the condition codes */
	{"cmn",		CMN,	C_AL | OP_CMN | DP_S	},
	{"cmns",	CMN,	C_AL | OP_CMN | DP_S	},
	{"cmnp",	CMN,	C_AL | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmneq",	CMN,	C_EQ | OP_CMN | DP_S	},
	{"cmneqp",	CMN,	C_EQ | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnne",	CMN,	C_NE | OP_CMN | DP_S	},
	{"cmnnep",	CMN,	C_NE | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmncs",	CMN,	C_CS | OP_CMN | DP_S	},
	{"cmncsp",	CMN,	C_CS | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmncc",	CMN,	C_CC | OP_CMN | DP_S	},
	{"cmnccp",	CMN,	C_CC | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnmi",	CMN,	C_MI | OP_CMN | DP_S	},
	{"cmnmip",	CMN,	C_MI | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnpl",	CMN,	C_PL | OP_CMN | DP_S	},
	{"cmnplp",	CMN,	C_PL | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnvs",	CMN,	C_VS | OP_CMN | DP_S	},
	{"cmnvsp",	CMN,	C_VS | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnvc",	CMN,	C_VC | OP_CMN | DP_S	},
	{"cmnvcp",	CMN,	C_VC | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnhi",	CMN,	C_HI | OP_CMN | DP_S	},
	{"cmnhip",	CMN,	C_HI | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnls",	CMN,	C_LS | OP_CMN | DP_S	},
	{"cmnlsp",	CMN,	C_LS | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnge",	CMN,	C_GE | OP_CMN | DP_S	},
	{"cmngep",	CMN,	C_GE | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnlt",	CMN,	C_LT | OP_CMN | DP_S	},
	{"cmnltp",	CMN,	C_LT | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmngt",	CMN,	C_GT | OP_CMN | DP_S	},
	{"cmngtp",	CMN,	C_GT | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnle",	CMN,	C_LE | OP_CMN | DP_S	},
	{"cmnlep",	CMN,	C_LE | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnal",	CMN,	C_AL | OP_CMN | DP_S	},
	{"cmnalp",	CMN,	C_AL | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
	{"cmnnv",	CMN,	C_NV | OP_CMN | DP_S	},
	{"cmnnvp",	CMN,	C_NV | OP_CMN | DP_S | DP_DSTREG(R_R15)	},
/* ORR */
	{"orr",		ORR,	C_AL | OP_ORR		},
	{"orrs",	ORR,	C_AL | OP_ORR | DP_S	},
	{"orreq",	ORR,	C_EQ | OP_ORR		},
	{"orreqs",	ORR,	C_EQ | OP_ORR | DP_S	},
	{"orrne",	ORR,	C_NE | OP_ORR		},
	{"orrnes",	ORR,	C_NE | OP_ORR | DP_S	},
	{"orrcs",	ORR,	C_CS | OP_ORR		},
	{"orrcss",	ORR,	C_CS | OP_ORR | DP_S	},
	{"orrcc",	ORR,	C_CC | OP_ORR		},
	{"orrccs",	ORR,	C_CC | OP_ORR | DP_S	},
	{"orrmi",	ORR,	C_MI | OP_ORR		},
	{"orrmis",	ORR,	C_MI | OP_ORR | DP_S	},
	{"orrpl",	ORR,	C_PL | OP_ORR		},
	{"orrpls",	ORR,	C_PL | OP_ORR | DP_S	},
	{"orrvs",	ORR,	C_VS | OP_ORR		},
	{"orrvss",	ORR,	C_VS | OP_ORR | DP_S	},
	{"orrvc",	ORR,	C_VC | OP_ORR		},
	{"orrvcs",	ORR,	C_VC | OP_ORR | DP_S	},
	{"orrhi",	ORR,	C_HI | OP_ORR		},
	{"orrhis",	ORR,	C_HI | OP_ORR | DP_S	},
	{"orrls",	ORR,	C_LS | OP_ORR		},
	{"orrlss",	ORR,	C_LS | OP_ORR | DP_S	},
	{"orrge",	ORR,	C_GE | OP_ORR		},
	{"orrges",	ORR,	C_GE | OP_ORR | DP_S	},
	{"orrlt",	ORR,	C_LT | OP_ORR		},
	{"orrlts",	ORR,	C_LT | OP_ORR | DP_S	},
	{"orrgt",	ORR,	C_GT | OP_ORR		},
	{"orrgts",	ORR,	C_GT | OP_ORR | DP_S	},
	{"orrle",	ORR,	C_LE | OP_ORR		},
	{"orrles",	ORR,	C_LE | OP_ORR | DP_S	},
	{"orral",	ORR,	C_AL | OP_ORR		},
	{"orrals",	ORR,	C_AL | OP_ORR | DP_S	},
	{"orrnv",	ORR,	C_NV | OP_ORR		},
	{"orrnvs",	ORR,	C_NV | OP_ORR | DP_S	},
/* MOV */
	{"mov",		MOV,	C_AL | OP_MOV		},
	{"movs",	MOV,	C_AL | OP_MOV | DP_S	},
	{"moveq",	MOV,	C_EQ | OP_MOV		},
	{"moveqs",	MOV,	C_EQ | OP_MOV | DP_S	},
	{"movne",	MOV,	C_NE | OP_MOV		},
	{"movnes",	MOV,	C_NE | OP_MOV | DP_S	},
	{"movcs",	MOV,	C_CS | OP_MOV		},
	{"movcss",	MOV,	C_CS | OP_MOV | DP_S	},
	{"movcc",	MOV,	C_CC | OP_MOV		},
	{"movccs",	MOV,	C_CC | OP_MOV | DP_S	},
	{"movmi",	MOV,	C_MI | OP_MOV		},
	{"movmis",	MOV,	C_MI | OP_MOV | DP_S	},
	{"movpl",	MOV,	C_PL | OP_MOV		},
	{"movpls",	MOV,	C_PL | OP_MOV | DP_S	},
	{"movvs",	MOV,	C_VS | OP_MOV		},
	{"movvss",	MOV,	C_VS | OP_MOV | DP_S	},
	{"movvc",	MOV,	C_VC | OP_MOV		},
	{"movvcs",	MOV,	C_VC | OP_MOV | DP_S	},
	{"movhi",	MOV,	C_HI | OP_MOV		},
	{"movhis",	MOV,	C_HI | OP_MOV | DP_S	},
	{"movls",	MOV,	C_LS | OP_MOV		},
	{"movlss",	MOV,	C_LS | OP_MOV | DP_S	},
	{"movge",	MOV,	C_GE | OP_MOV		},
	{"movges",	MOV,	C_GE | OP_MOV | DP_S	},
	{"movlt",	MOV,	C_LT | OP_MOV		},
	{"movlts",	MOV,	C_LT | OP_MOV | DP_S	},
	{"movgt",	MOV,	C_GT | OP_MOV		},
	{"movgts",	MOV,	C_GT | OP_MOV | DP_S	},
	{"movle",	MOV,	C_LE | OP_MOV		},
	{"movles",	MOV,	C_LE | OP_MOV | DP_S	},
	{"moval",	MOV,	C_AL | OP_MOV		},
	{"movals",	MOV,	C_AL | OP_MOV | DP_S	},
	{"movnv",	MOV,	C_NV | OP_MOV		},
	{"movnvs",	MOV,	C_NV | OP_MOV | DP_S	},
/* BIC */
	{"bic",		BIC,	C_AL | OP_BIC		},
	{"bics",	BIC,	C_AL | OP_BIC | DP_S	},
	{"biceq",	BIC,	C_EQ | OP_BIC		},
	{"biceqs",	BIC,	C_EQ | OP_BIC | DP_S	},
	{"bicne",	BIC,	C_NE | OP_BIC		},
	{"bicnes",	BIC,	C_NE | OP_BIC | DP_S	},
	{"biccs",	BIC,	C_CS | OP_BIC		},
	{"biccss",	BIC,	C_CS | OP_BIC | DP_S	},
	{"biccc",	BIC,	C_CC | OP_BIC		},
	{"bicccs",	BIC,	C_CC | OP_BIC | DP_S	},
	{"bicmi",	BIC,	C_MI | OP_BIC		},
	{"bicmis",	BIC,	C_MI | OP_BIC | DP_S	},
	{"bicpl",	BIC,	C_PL | OP_BIC		},
	{"bicpls",	BIC,	C_PL | OP_BIC | DP_S	},
	{"bicvs",	BIC,	C_VS | OP_BIC		},
	{"bicvss",	BIC,	C_VS | OP_BIC | DP_S	},
	{"bicvc",	BIC,	C_VC | OP_BIC		},
	{"bicvcs",	BIC,	C_VC | OP_BIC | DP_S	},
	{"bichi",	BIC,	C_HI | OP_BIC		},
	{"bichis",	BIC,	C_HI | OP_BIC | DP_S	},
	{"bicls",	BIC,	C_LS | OP_BIC		},
	{"biclss",	BIC,	C_LS | OP_BIC | DP_S	},
	{"bicge",	BIC,	C_GE | OP_BIC		},
	{"bicges",	BIC,	C_GE | OP_BIC | DP_S	},
	{"biclt",	BIC,	C_LT | OP_BIC		},
	{"biclts",	BIC,	C_LT | OP_BIC | DP_S	},
	{"bicgt",	BIC,	C_GT | OP_BIC		},
	{"bicgts",	BIC,	C_GT | OP_BIC | DP_S	},
	{"bicle",	BIC,	C_LE | OP_BIC		},
	{"bicles",	BIC,	C_LE | OP_BIC | DP_S	},
	{"bical",	BIC,	C_AL | OP_BIC		},
	{"bicals",	BIC,	C_AL | OP_BIC | DP_S	},
	{"bicnv",	BIC,	C_NV | OP_BIC		},
	{"bicnvs",	BIC,	C_NV | OP_BIC | DP_S	},
/* MVN */
	{"mvn",		MVN,	C_AL | OP_MVN		},
	{"mvns",	MVN,	C_AL | OP_MVN | DP_S	},
	{"mvneq",	MVN,	C_EQ | OP_MVN		},
	{"mvneqs",	MVN,	C_EQ | OP_MVN | DP_S	},
	{"mvnne",	MVN,	C_NE | OP_MVN		},
	{"mvnnes",	MVN,	C_NE | OP_MVN | DP_S	},
	{"mvncs",	MVN,	C_CS | OP_MVN		},
	{"mvncss",	MVN,	C_CS | OP_MVN | DP_S	},
	{"mvncc",	MVN,	C_CC | OP_MVN		},
	{"mvnccs",	MVN,	C_CC | OP_MVN | DP_S	},
	{"mvnmi",	MVN,	C_MI | OP_MVN		},
	{"mvnmis",	MVN,	C_MI | OP_MVN | DP_S	},
	{"mvnpl",	MVN,	C_PL | OP_MVN		},
	{"mvnpls",	MVN,	C_PL | OP_MVN | DP_S	},
	{"mvnvs",	MVN,	C_VS | OP_MVN		},
	{"mvnvss",	MVN,	C_VS | OP_MVN | DP_S	},
	{"mvnvc",	MVN,	C_VC | OP_MVN		},
	{"mvnvcs",	MVN,	C_VC | OP_MVN | DP_S	},
	{"mvnhi",	MVN,	C_HI | OP_MVN		},
	{"mvnhis",	MVN,	C_HI | OP_MVN | DP_S	},
	{"mvnls",	MVN,	C_LS | OP_MVN		},
	{"mvnlss",	MVN,	C_LS | OP_MVN | DP_S	},
	{"mvnge",	MVN,	C_GE | OP_MVN		},
	{"mvnges",	MVN,	C_GE | OP_MVN | DP_S	},
	{"mvnlt",	MVN,	C_LT | OP_MVN		},
	{"mvnlts",	MVN,	C_LT | OP_MVN | DP_S	},
	{"mvngt",	MVN,	C_GT | OP_MVN		},
	{"mvngts",	MVN,	C_GT | OP_MVN | DP_S	},
	{"mvnle",	MVN,	C_LE | OP_MVN		},
	{"mvnles",	MVN,	C_LE | OP_MVN | DP_S	},
	{"mvnal",	MVN,	C_AL | OP_MVN		},
	{"mvnals",	MVN,	C_AL | OP_MVN | DP_S	},
	{"mvnnv",	MVN,	C_NV | OP_MVN		},
	{"mvnnvs",	MVN,	C_NV | OP_MVN | DP_S	},


	/* MULTIPLY op-codes 				*/

/* MUL/MLA */
	{"mul",		MUL,	C_AL | OP_MUL		},
	{"muls",	MUL,	C_AL | OP_MUL | MPY_S	},
	{"mla",		MLA,	C_AL | OP_MLA		},
	{"mlas",	MLA,	C_AL | OP_MLA | MPY_S	},
	{"muleq",	MUL,	C_EQ | OP_MUL		},
	{"muleqs",	MUL,	C_EQ | OP_MUL | MPY_S	},
	{"mlaeq",	MLA,	C_EQ | OP_MLA		},
	{"mlaeqs",	MLA,	C_EQ | OP_MLA | MPY_S	},
	{"mulne",	MUL,	C_NE | OP_MUL		},
	{"mulnes",	MUL,	C_NE | OP_MUL | MPY_S	},
	{"mlane",	MLA,	C_NE | OP_MLA		},
	{"mlanes",	MLA,	C_NE | OP_MLA | MPY_S	},
	{"mulcs",	MUL,	C_CS | OP_MUL		},
	{"mulcss",	MUL,	C_CS | OP_MUL | MPY_S	},
	{"mlacs",	MLA,	C_CS | OP_MLA		},
	{"mlacss",	MLA,	C_CS | OP_MLA | MPY_S	},
	{"mulcc",	MUL,	C_CC | OP_MUL		},
	{"mulccs",	MUL,	C_CC | OP_MUL | MPY_S	},
	{"mlacc",	MLA,	C_CC | OP_MLA		},
	{"mlaccs",	MLA,	C_CC | OP_MLA | MPY_S	},
	{"mulmi",	MUL,	C_MI | OP_MUL		},
	{"mulmis",	MUL,	C_MI | OP_MUL | MPY_S	},
	{"mlami",	MLA,	C_MI | OP_MLA		},
	{"mlamis",	MLA,	C_MI | OP_MLA | MPY_S	},
	{"mulpl",	MUL,	C_PL | OP_MUL		},
	{"mulpls",	MUL,	C_PL | OP_MUL | MPY_S	},
	{"mlapl",	MLA,	C_PL | OP_MLA		},
	{"mlapls",	MLA,	C_PL | OP_MLA | MPY_S	},
	{"mulvs",	MUL,	C_VS | OP_MUL		},
	{"mulvss",	MUL,	C_VS | OP_MUL | MPY_S	},
	{"mlavs",	MLA,	C_VS | OP_MLA		},
	{"mlavss",	MLA,	C_VS | OP_MLA | MPY_S	},
	{"mulvc",	MUL,	C_VC | OP_MUL		},
	{"mulvcs",	MUL,	C_VC | OP_MUL | MPY_S	},
	{"mlavc",	MLA,	C_VC | OP_MLA		},
	{"mlavcs",	MLA,	C_VC | OP_MLA | MPY_S	},
	{"mulhi",	MUL,	C_HI | OP_MUL		},
	{"mulhis",	MUL,	C_HI | OP_MUL | MPY_S	},
	{"mlahi",	MLA,	C_HI | OP_MLA		},
	{"mlahis",	MLA,	C_HI | OP_MLA | MPY_S	},
	{"mulls",	MUL,	C_LS | OP_MUL		},
	{"mullss",	MUL,	C_LS | OP_MUL | MPY_S	},
	{"mlals",	MLA,	C_LS | OP_MLA		},
	{"mlalss",	MLA,	C_LS | OP_MLA | MPY_S	},
	{"mulge",	MUL,	C_GE | OP_MUL		},
	{"mulges",	MUL,	C_GE | OP_MUL | MPY_S	},
	{"mlage",	MLA,	C_GE | OP_MLA		},
	{"mlages",	MLA,	C_GE | OP_MLA | MPY_S	},
	{"mullt",	MUL,	C_LT | OP_MUL		},
	{"mullts",	MUL,	C_LT | OP_MUL | MPY_S	},
	{"mlalt",	MLA,	C_LT | OP_MLA		},
	{"mlalts",	MLA,	C_LT | OP_MLA | MPY_S	},
	{"mulgt",	MUL,	C_GT | OP_MUL		},
	{"mulgts",	MUL,	C_GT | OP_MUL | MPY_S	},
	{"mlagt",	MLA,	C_GT | OP_MLA		},
	{"mlagts",	MLA,	C_GT | OP_MLA | MPY_S	},
	{"mulle",	MUL,	C_LE | OP_MUL		},
	{"mulles",	MUL,	C_LE | OP_MUL | MPY_S	},
	{"mlale",	MLA,	C_LE | OP_MLA		},
	{"mlales",	MLA,	C_LE | OP_MLA | MPY_S	},
	{"mulal",	MUL,	C_AL | OP_MUL		},
	{"mulals",	MUL,	C_AL | OP_MUL | MPY_S	},
	{"mlaal",	MLA,	C_AL | OP_MLA		},
	{"mlaals",	MLA,	C_AL | OP_MLA | MPY_S	},
	{"mulnv",	MUL,	C_NV | OP_MUL		},
	{"mulnvs",	MUL,	C_NV | OP_MUL | MPY_S	},
	{"mlanv",	MLA,	C_NV | OP_MLA		},
	{"mlanvs",	MLA,	C_NV | OP_MLA | MPY_S	},


	/* Single Data Transfer op-codes 			*/

/* STR */
	{"str",		STR,	C_AL | OP_STR			},
	{"strb",	STR,	C_AL | OP_STR | SDT_B		},
	{"strt",	STR,	C_AL | OP_STR | WTRANS		},
	{"strbt",	STR,	C_AL | OP_STR | WTRANS | SDT_B	},
	{"streq",	STR,	C_EQ | OP_STR			},
	{"streqb",	STR,	C_EQ | OP_STR | SDT_B		},
	{"streqt",	STR,	C_EQ | OP_STR | WTRANS		},
	{"streqbt",	STR,	C_EQ | OP_STR | WTRANS | SDT_B	},
	{"strne",	STR,	C_NE | OP_STR			},
	{"strneb",	STR,	C_NE | OP_STR | SDT_B		},
	{"strnet",	STR,	C_NE | OP_STR | WTRANS		},
	{"strnebt",	STR,	C_NE | OP_STR | WTRANS | SDT_B	},
	{"strcs",	STR,	C_CS | OP_STR			},
	{"strcsb",	STR,	C_CS | OP_STR | SDT_B		},
	{"strcst",	STR,	C_CS | OP_STR | WTRANS		},
	{"strcsbt",	STR,	C_CS | OP_STR | WTRANS | SDT_B	},
	{"strcc",	STR,	C_CC | OP_STR			},
	{"strccb",	STR,	C_CC | OP_STR | SDT_B		},
	{"strcct",	STR,	C_CC | OP_STR | WTRANS		},
	{"strccbt",	STR,	C_CC | OP_STR | WTRANS | SDT_B	},
	{"strmi",	STR,	C_MI | OP_STR			},
	{"strmib",	STR,	C_MI | OP_STR | SDT_B		},
	{"strmit",	STR,	C_MI | OP_STR | WTRANS		},
	{"strmibt",	STR,	C_MI | OP_STR | WTRANS | SDT_B	},
	{"strpl",	STR,	C_PL | OP_STR			},
	{"strplb",	STR,	C_PL | OP_STR | SDT_B		},
	{"strplt",	STR,	C_PL | OP_STR | WTRANS		},
	{"strplbt",	STR,	C_PL | OP_STR | WTRANS | SDT_B	},
	{"strvs",	STR,	C_VS | OP_STR			},
	{"strvsb",	STR,	C_VS | OP_STR | SDT_B		},
	{"strvst",	STR,	C_VS | OP_STR | WTRANS		},
	{"strvsbt",	STR,	C_VS | OP_STR | WTRANS | SDT_B	},
	{"strvc",	STR,	C_VC | OP_STR			},
	{"strvcb",	STR,	C_VC | OP_STR | SDT_B		},
	{"strvct",	STR,	C_VC | OP_STR | WTRANS		},
	{"strvcbt",	STR,	C_VC | OP_STR | WTRANS | SDT_B	},
	{"strhi",	STR,	C_HI | OP_STR			},
	{"strhib",	STR,	C_HI | OP_STR | SDT_B		},
	{"strhit",	STR,	C_HI | OP_STR | WTRANS		},
	{"strhibt",	STR,	C_HI | OP_STR | WTRANS | SDT_B	},
	{"strls",	STR,	C_LS | OP_STR			},
	{"strlsb",	STR,	C_LS | OP_STR | SDT_B		},
	{"strlst",	STR,	C_LS | OP_STR | WTRANS		},
	{"strlsbt",	STR,	C_LS | OP_STR | WTRANS | SDT_B	},
	{"strge",	STR,	C_GE | OP_STR			},
	{"strgeb",	STR,	C_GE | OP_STR | SDT_B		},
	{"strget",	STR,	C_GE | OP_STR | WTRANS		},
	{"strgebt",	STR,	C_GE | OP_STR | WTRANS | SDT_B	},
	{"strlt",	STR,	C_LT | OP_STR			},
	{"strltb",	STR,	C_LT | OP_STR | SDT_B		},
	{"strltt",	STR,	C_LT | OP_STR | WTRANS		},
	{"strltbt",	STR,	C_LT | OP_STR | WTRANS | SDT_B	},
	{"strgt",	STR,	C_GT | OP_STR			},
	{"strgtb",	STR,	C_GT | OP_STR | SDT_B		},
	{"strgtt",	STR,	C_GT | OP_STR | WTRANS		},
	{"strgtbt",	STR,	C_GT | OP_STR | WTRANS | SDT_B	},
	{"strle",	STR,	C_LE | OP_STR			},
	{"strleb",	STR,	C_LE | OP_STR | SDT_B		},
	{"strlet",	STR,	C_LE | OP_STR | WTRANS		},
	{"strlebt",	STR,	C_LE | OP_STR | WTRANS | SDT_B	},
	{"stral",	STR,	C_AL | OP_STR			},
	{"stralb",	STR,	C_AL | OP_STR | SDT_B		},
	{"stralt",	STR,	C_AL | OP_STR | WTRANS		},
	{"stralbt",	STR,	C_AL | OP_STR | WTRANS | SDT_B	},
	{"strnv",	STR,	C_NV | OP_STR			},
	{"strnvb",	STR,	C_NV | OP_STR | SDT_B		},
	{"strnvt",	STR,	C_NV | OP_STR | WTRANS		},
	{"strnvbt",	STR,	C_NV | OP_STR | WTRANS | SDT_B	},


/* LDR */
	{"ldr",		LDR,	C_AL | OP_LDR			},
	{"ldrb",	LDR,	C_AL | OP_LDR | SDT_B		},
	{"ldrt",	LDR,	C_AL | OP_LDR | WTRANS		},
	{"ldrbt",	LDR,	C_AL | OP_LDR | WTRANS | SDT_B	},
	{"ldreq",	LDR,	C_EQ | OP_LDR			},
	{"ldreqb",	LDR,	C_EQ | OP_LDR | SDT_B		},
	{"ldreqt",	LDR,	C_EQ | OP_LDR | WTRANS		},
	{"ldreqbt",	LDR,	C_EQ | OP_LDR | WTRANS | SDT_B	},
	{"ldrne",	LDR,	C_NE | OP_LDR			},
	{"ldrneb",	LDR,	C_NE | OP_LDR | SDT_B		},
	{"ldrnet",	LDR,	C_NE | OP_LDR | WTRANS		},
	{"ldrnebt",	LDR,	C_NE | OP_LDR | WTRANS | SDT_B	},
	{"ldrcs",	LDR,	C_CS | OP_LDR			},
	{"ldrcsb",	LDR,	C_CS | OP_LDR | SDT_B		},
	{"ldrcst",	LDR,	C_CS | OP_LDR | WTRANS		},
	{"ldrcsbt",	LDR,	C_CS | OP_LDR | WTRANS | SDT_B	},
	{"ldrcc",	LDR,	C_CC | OP_LDR			},
	{"ldrccb",	LDR,	C_CC | OP_LDR | SDT_B		},
	{"ldrcct",	LDR,	C_CC | OP_LDR | WTRANS		},
	{"ldrccbt",	LDR,	C_CC | OP_LDR | WTRANS | SDT_B	},
	{"ldrmi",	LDR,	C_MI | OP_LDR			},
	{"ldrmib",	LDR,	C_MI | OP_LDR | SDT_B		},
	{"ldrmit",	LDR,	C_MI | OP_LDR | WTRANS		},
	{"ldrmibt",	LDR,	C_MI | OP_LDR | WTRANS | SDT_B	},
	{"ldrpl",	LDR,	C_PL | OP_LDR			},
	{"ldrplb",	LDR,	C_PL | OP_LDR | SDT_B		},
	{"ldrplt",	LDR,	C_PL | OP_LDR | WTRANS		},
	{"ldrplbt",	LDR,	C_PL | OP_LDR | WTRANS | SDT_B	},
	{"ldrvs",	LDR,	C_VS | OP_LDR			},
	{"ldrvsb",	LDR,	C_VS | OP_LDR | SDT_B		},
	{"ldrvst",	LDR,	C_VS | OP_LDR | WTRANS		},
	{"ldrvsbt",	LDR,	C_VS | OP_LDR | WTRANS | SDT_B	},
	{"ldrvc",	LDR,	C_VC | OP_LDR			},
	{"ldrvcb",	LDR,	C_VC | OP_LDR | SDT_B		},
	{"ldrvct",	LDR,	C_VC | OP_LDR | WTRANS		},
	{"ldrvcbt",	LDR,	C_VC | OP_LDR | WTRANS | SDT_B	},
	{"ldrhi",	LDR,	C_HI | OP_LDR			},
	{"ldrhib",	LDR,	C_HI | OP_LDR | SDT_B		},
	{"ldrhit",	LDR,	C_HI | OP_LDR | WTRANS		},
	{"ldrhibt",	LDR,	C_HI | OP_LDR | WTRANS | SDT_B	},
	{"ldrls",	LDR,	C_LS | OP_LDR			},
	{"ldrlsb",	LDR,	C_LS | OP_LDR | SDT_B		},
	{"ldrlst",	LDR,	C_LS | OP_LDR | WTRANS		},
	{"ldrlsbt",	LDR,	C_LS | OP_LDR | WTRANS | SDT_B	},
	{"ldrge",	LDR,	C_GE | OP_LDR			},
	{"ldrgeb",	LDR,	C_GE | OP_LDR | SDT_B		},
	{"ldrget",	LDR,	C_GE | OP_LDR | WTRANS		},
	{"ldrgebt",	LDR,	C_GE | OP_LDR | WTRANS | SDT_B	},
	{"ldrlt",	LDR,	C_LT | OP_LDR			},
	{"ldrltb",	LDR,	C_LT | OP_LDR | SDT_B		},
	{"ldrltt",	LDR,	C_LT | OP_LDR | WTRANS		},
	{"ldrltbt",	LDR,	C_LT | OP_LDR | WTRANS | SDT_B	},
	{"ldrgt",	LDR,	C_GT | OP_LDR			},
	{"ldrgtb",	LDR,	C_GT | OP_LDR | SDT_B		},
	{"ldrgtt",	LDR,	C_GT | OP_LDR | WTRANS		},
	{"ldrgtbt",	LDR,	C_GT | OP_LDR | WTRANS | SDT_B	},
	{"ldrle",	LDR,	C_LE | OP_LDR			},
	{"ldrleb",	LDR,	C_LE | OP_LDR | SDT_B		},
	{"ldrlet",	LDR,	C_LE | OP_LDR | WTRANS		},
	{"ldrlebt",	LDR,	C_LE | OP_LDR | WTRANS | SDT_B	},
	{"ldral",	LDR,	C_AL | OP_LDR			},
	{"ldralb",	LDR,	C_AL | OP_LDR | SDT_B		},
	{"ldralt",	LDR,	C_AL | OP_LDR | WTRANS		},
	{"ldralbt",	LDR,	C_AL | OP_LDR | WTRANS | SDT_B	},
	{"ldrnv",	LDR,	C_NV | OP_LDR			},
	{"ldrnvb",	LDR,	C_NV | OP_LDR | SDT_B		},
	{"ldrnvt",	LDR,	C_NV | OP_LDR | WTRANS		},
	{"ldrnvbt",	LDR,	C_NV | OP_LDR | WTRANS | SDT_B	},



	/* Block Data Transfer op-codes				*/

/* STM */
	{"stm",		STM,	BDT_ERROR				},
	{"stmfa",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"stmea",	STM,	C_AL | OP_STM | INDEXUP			},
	{"stmfd",	STM,	C_AL | OP_STM | PREINDEX		},
	{"stmed",	STM,	C_AL | OP_STM 				},
	{"stmib",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"stmia",	STM,	C_AL | OP_STM | INDEXUP			},
	{"stmdb",	STM,	C_AL | OP_STM | PREINDEX		},
	{"stmda",	STM,	C_AL | OP_STM				},

	{"stmeqfa",	STM,	C_EQ | OP_STM | PREINDEX | INDEXUP	},
	{"stmeqea",	STM,	C_EQ | OP_STM | INDEXUP			},
	{"stmeqfd",	STM,	C_EQ | OP_STM | PREINDEX		},
	{"stmeqed",	STM,	C_EQ | OP_STM 				},
	{"stmeqib",	STM,	C_EQ | OP_STM | PREINDEX | INDEXUP	},
	{"stmeqia",	STM,	C_EQ | OP_STM | INDEXUP			},
	{"stmeqdb",	STM,	C_EQ | OP_STM | PREINDEX		},
	{"stmeqda",	STM,	C_EQ | OP_STM				},

	{"stmnefa",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"stmneea",	STM,	C_NE | OP_STM | INDEXUP			},
	{"stmnefd",	STM,	C_NE | OP_STM | PREINDEX		},
	{"stmneed",	STM,	C_NE | OP_STM 				},
	{"stmneib",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"stmneia",	STM,	C_NE | OP_STM | INDEXUP			},
	{"stmnedb",	STM,	C_NE | OP_STM | PREINDEX		},
	{"stmneda",	STM,	C_NE | OP_STM				},

	{"stmnefa",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"stmneea",	STM,	C_NE | OP_STM | INDEXUP			},
	{"stmnefd",	STM,	C_NE | OP_STM | PREINDEX		},
	{"stmneed",	STM,	C_NE | OP_STM 				},
	{"stmneib",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"stmneia",	STM,	C_NE | OP_STM | INDEXUP			},
	{"stmnedb",	STM,	C_NE | OP_STM | PREINDEX		},
	{"stmneda",	STM,	C_NE | OP_STM				},

	{"stmccfa",	STM,	C_CC | OP_STM | PREINDEX | INDEXUP	},
	{"stmccea",	STM,	C_CC | OP_STM | INDEXUP			},
	{"stmccfd",	STM,	C_CC | OP_STM | PREINDEX		},
	{"stmcced",	STM,	C_CC | OP_STM 				},
	{"stmccib",	STM,	C_CC | OP_STM | PREINDEX | INDEXUP	},
	{"stmccia",	STM,	C_CC | OP_STM | INDEXUP			},
	{"stmccdb",	STM,	C_CC | OP_STM | PREINDEX		},
	{"stmccda",	STM,	C_CC | OP_STM				},

	{"stmcsfa",	STM,	C_CS | OP_STM | PREINDEX | INDEXUP	},
	{"stmcsea",	STM,	C_CS | OP_STM | INDEXUP			},
	{"stmcsfd",	STM,	C_CS | OP_STM | PREINDEX		},
	{"stmcsed",	STM,	C_CS | OP_STM 				},
	{"stmcsib",	STM,	C_CS | OP_STM | PREINDEX | INDEXUP	},
	{"stmcsia",	STM,	C_CS | OP_STM | INDEXUP			},
	{"stmcsdb",	STM,	C_CS | OP_STM | PREINDEX		},
	{"stmcsda",	STM,	C_CS | OP_STM				},

	{"stmmifa",	STM,	C_MI | OP_STM | PREINDEX | INDEXUP	},
	{"stmmiea",	STM,	C_MI | OP_STM | INDEXUP			},
	{"stmmifd",	STM,	C_MI | OP_STM | PREINDEX		},
	{"stmmied",	STM,	C_MI | OP_STM 				},
	{"stmmiib",	STM,	C_MI | OP_STM | PREINDEX | INDEXUP	},
	{"stmmiia",	STM,	C_MI | OP_STM | INDEXUP			},
	{"stmmidb",	STM,	C_MI | OP_STM | PREINDEX		},
	{"stmmida",	STM,	C_MI | OP_STM				},

	{"stmplfa",	STM,	C_PL | OP_STM | PREINDEX | INDEXUP	},
	{"stmplea",	STM,	C_PL | OP_STM | INDEXUP			},
	{"stmplfd",	STM,	C_PL | OP_STM | PREINDEX		},
	{"stmpled",	STM,	C_PL | OP_STM 				},
	{"stmplib",	STM,	C_PL | OP_STM | PREINDEX | INDEXUP	},
	{"stmplia",	STM,	C_PL | OP_STM | INDEXUP			},
	{"stmpldb",	STM,	C_PL | OP_STM | PREINDEX		},
	{"stmplda",	STM,	C_PL | OP_STM				},

	{"stmvsfa",	STM,	C_VS | OP_STM | PREINDEX | INDEXUP	},
	{"stmvsea",	STM,	C_VS | OP_STM | INDEXUP			},
	{"stmvsfd",	STM,	C_VS | OP_STM | PREINDEX		},
	{"stmvsed",	STM,	C_VS | OP_STM 				},
	{"stmvsib",	STM,	C_VS | OP_STM | PREINDEX | INDEXUP	},
	{"stmvsia",	STM,	C_VS | OP_STM | INDEXUP			},
	{"stmvsdb",	STM,	C_VS | OP_STM | PREINDEX		},
	{"stmvsda",	STM,	C_VS | OP_STM				},

	{"stmvcfa",	STM,	C_VC | OP_STM | PREINDEX | INDEXUP	},
	{"stmvcea",	STM,	C_VC | OP_STM | INDEXUP			},
	{"stmvcfd",	STM,	C_VC | OP_STM | PREINDEX		},
	{"stmvced",	STM,	C_VC | OP_STM 				},
	{"stmvcib",	STM,	C_VC | OP_STM | PREINDEX | INDEXUP	},
	{"stmvcia",	STM,	C_VC | OP_STM | INDEXUP			},
	{"stmvcdb",	STM,	C_VC | OP_STM | PREINDEX		},
	{"stmvcda",	STM,	C_VC | OP_STM				},

	{"stmhifa",	STM,	C_HI | OP_STM | PREINDEX | INDEXUP	},
	{"stmhiea",	STM,	C_HI | OP_STM | INDEXUP			},
	{"stmhifd",	STM,	C_HI | OP_STM | PREINDEX		},
	{"stmhied",	STM,	C_HI | OP_STM 				},
	{"stmhiib",	STM,	C_HI | OP_STM | PREINDEX | INDEXUP	},
	{"stmhiia",	STM,	C_HI | OP_STM | INDEXUP			},
	{"stmhidb",	STM,	C_HI | OP_STM | PREINDEX		},
	{"stmhida",	STM,	C_HI | OP_STM				},

	{"stmlsfa",	STM,	C_LS | OP_STM | PREINDEX | INDEXUP	},
	{"stmlsea",	STM,	C_LS | OP_STM | INDEXUP			},
	{"stmlsfd",	STM,	C_LS | OP_STM | PREINDEX		},
	{"stmlsed",	STM,	C_LS | OP_STM 				},
	{"stmlsib",	STM,	C_LS | OP_STM | PREINDEX | INDEXUP	},
	{"stmlsia",	STM,	C_LS | OP_STM | INDEXUP			},
	{"stmlsdb",	STM,	C_LS | OP_STM | PREINDEX		},
	{"stmlsda",	STM,	C_LS | OP_STM				},

	{"stmgefa",	STM,	C_GE | OP_STM | PREINDEX | INDEXUP	},
	{"stmgeea",	STM,	C_GE | OP_STM | INDEXUP			},
	{"stmgefd",	STM,	C_GE | OP_STM | PREINDEX		},
	{"stmgeed",	STM,	C_GE | OP_STM 				},
	{"stmgeib",	STM,	C_GE | OP_STM | PREINDEX | INDEXUP	},
	{"stmgeia",	STM,	C_GE | OP_STM | INDEXUP			},
	{"stmgedb",	STM,	C_GE | OP_STM | PREINDEX		},
	{"stmgeda",	STM,	C_GE | OP_STM				},

	{"stmltfa",	STM,	C_LT | OP_STM | PREINDEX | INDEXUP	},
	{"stmltea",	STM,	C_LT | OP_STM | INDEXUP			},
	{"stmltfd",	STM,	C_LT | OP_STM | PREINDEX		},
	{"stmlted",	STM,	C_LT | OP_STM 				},
	{"stmltib",	STM,	C_LT | OP_STM | PREINDEX | INDEXUP	},
	{"stmltia",	STM,	C_LT | OP_STM | INDEXUP			},
	{"stmltdb",	STM,	C_LT | OP_STM | PREINDEX		},
	{"stmltda",	STM,	C_LT | OP_STM				},

	{"stmgtfa",	STM,	C_GT | OP_STM | PREINDEX | INDEXUP	},
	{"stmgtea",	STM,	C_GT | OP_STM | INDEXUP			},
	{"stmgtfd",	STM,	C_GT | OP_STM | PREINDEX		},
	{"stmgted",	STM,	C_GT | OP_STM 				},
	{"stmgtib",	STM,	C_GT | OP_STM | PREINDEX | INDEXUP	},
	{"stmgtia",	STM,	C_GT | OP_STM | INDEXUP			},
	{"stmgtdb",	STM,	C_GT | OP_STM | PREINDEX		},
	{"stmgtda",	STM,	C_GT | OP_STM				},

	{"stmlefa",	STM,	C_LE | OP_STM | PREINDEX | INDEXUP	},
	{"stmleea",	STM,	C_LE | OP_STM | INDEXUP			},
	{"stmlefd",	STM,	C_LE | OP_STM | PREINDEX		},
	{"stmleed",	STM,	C_LE | OP_STM 				},
	{"stmleib",	STM,	C_LE | OP_STM | PREINDEX | INDEXUP	},
	{"stmleia",	STM,	C_LE | OP_STM | INDEXUP			},
	{"stmledb",	STM,	C_LE | OP_STM | PREINDEX		},
	{"stmleda",	STM,	C_LE | OP_STM				},

	{"stmalfa",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"stmalea",	STM,	C_AL | OP_STM | INDEXUP			},
	{"stmalfd",	STM,	C_AL | OP_STM | PREINDEX		},
	{"stmaled",	STM,	C_AL | OP_STM 				},
	{"stmalib",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"stmalia",	STM,	C_AL | OP_STM | INDEXUP			},
	{"stmaldb",	STM,	C_AL | OP_STM | PREINDEX		},
	{"stmalda",	STM,	C_AL | OP_STM				},

	{"stmnvfa",	STM,	C_NV | OP_STM | PREINDEX | INDEXUP	},
	{"stmnvea",	STM,	C_NV | OP_STM | INDEXUP			},
	{"stmnvfd",	STM,	C_NV | OP_STM | PREINDEX		},
	{"stmnved",	STM,	C_NV | OP_STM 				},
	{"stmnvib",	STM,	C_NV | OP_STM | PREINDEX | INDEXUP	},
	{"stmnvia",	STM,	C_NV | OP_STM | INDEXUP			},
	{"stmnvdb",	STM,	C_NV | OP_STM | PREINDEX		},
	{"stmnvda",	STM,	C_NV | OP_STM				},

/* LDM */
	{"ldm",		LDM,	BDT_ERROR				},
	{"ldmfa",	LDM,	C_AL | OP_LDM 				},
	{"ldmea",	LDM,	C_AL | OP_LDM | PREINDEX		},
	{"ldmfd",	LDM,	C_AL | OP_LDM | INDEXUP			},
	{"ldmed",	LDM,	C_AL | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmib",	LDM,	C_AL | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmia",	LDM,	C_AL | OP_LDM | INDEXUP			},
	{"ldmdb",	LDM,	C_AL | OP_LDM | PREINDEX		},
	{"ldmda",	LDM,	C_AL | OP_LDM				},

	{"ldmeqfa",	LDM,	C_EQ | OP_LDM 				},
	{"ldmeqea",	LDM,	C_EQ | OP_LDM | PREINDEX		},
	{"ldmeqfd",	LDM,	C_EQ | OP_LDM | INDEXUP			},
	{"ldmeqed",	LDM,	C_EQ | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmeqib",	LDM,	C_EQ | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmeqia",	LDM,	C_EQ | OP_LDM | INDEXUP			},
	{"ldmeqdb",	LDM,	C_EQ | OP_LDM | PREINDEX		},
	{"ldmeqda",	LDM,	C_EQ | OP_LDM				},

	{"ldmnefa",	LDM,	C_NE | OP_LDM 				},
	{"ldmneea",	LDM,	C_NE | OP_LDM | PREINDEX		},
	{"ldmnefd",	LDM,	C_NE | OP_LDM | INDEXUP			},
	{"ldmneed",	LDM,	C_NE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmneib",	LDM,	C_NE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmneia",	LDM,	C_NE | OP_LDM | INDEXUP			},
	{"ldmnedb",	LDM,	C_NE | OP_LDM | PREINDEX		},
	{"ldmneda",	LDM,	C_NE | OP_LDM				},

	{"ldmnefa",	LDM,	C_NE | OP_LDM 				},
	{"ldmneea",	LDM,	C_NE | OP_LDM | PREINDEX		},
	{"ldmnefd",	LDM,	C_NE | OP_LDM | INDEXUP			},
	{"ldmneed",	LDM,	C_NE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmneib",	LDM,	C_NE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmneia",	LDM,	C_NE | OP_LDM | INDEXUP			},
	{"ldmnedb",	LDM,	C_NE | OP_LDM | PREINDEX		},
	{"ldmneda",	LDM,	C_NE | OP_LDM				},

	{"ldmccfa",	LDM,	C_CC | OP_LDM 				},
	{"ldmccea",	LDM,	C_CC | OP_LDM | PREINDEX		},
	{"ldmccfd",	LDM,	C_CC | OP_LDM | INDEXUP			},
	{"ldmcced",	LDM,	C_CC | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmccib",	LDM,	C_CC | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmccia",	LDM,	C_CC | OP_LDM | INDEXUP			},
	{"ldmccdb",	LDM,	C_CC | OP_LDM | PREINDEX		},
	{"ldmccda",	LDM,	C_CC | OP_LDM				},

	{"ldmcsfa",	LDM,	C_CS | OP_LDM 				},
	{"ldmcsea",	LDM,	C_CS | OP_LDM | PREINDEX		},
	{"ldmcsfd",	LDM,	C_CS | OP_LDM | INDEXUP			},
	{"ldmcsed",	LDM,	C_CS | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmcsib",	LDM,	C_CS | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmcsia",	LDM,	C_CS | OP_LDM | INDEXUP			},
	{"ldmcsdb",	LDM,	C_CS | OP_LDM | PREINDEX		},
	{"ldmcsda",	LDM,	C_CS | OP_LDM				},

	{"ldmmifa",	LDM,	C_MI | OP_LDM 				},
	{"ldmmiea",	LDM,	C_MI | OP_LDM | PREINDEX		},
	{"ldmmifd",	LDM,	C_MI | OP_LDM | INDEXUP			},
	{"ldmmied",	LDM,	C_MI | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmmiib",	LDM,	C_MI | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmmiia",	LDM,	C_MI | OP_LDM | INDEXUP			},
	{"ldmmidb",	LDM,	C_MI | OP_LDM | PREINDEX		},
	{"ldmmida",	LDM,	C_MI | OP_LDM				},

	{"ldmplfa",	LDM,	C_PL | OP_LDM 				},
	{"ldmplea",	LDM,	C_PL | OP_LDM | PREINDEX		},
	{"ldmplfd",	LDM,	C_PL | OP_LDM | INDEXUP			},
	{"ldmpled",	LDM,	C_PL | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmplib",	LDM,	C_PL | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmplia",	LDM,	C_PL | OP_LDM | INDEXUP			},
	{"ldmpldb",	LDM,	C_PL | OP_LDM | PREINDEX		},
	{"ldmplda",	LDM,	C_PL | OP_LDM				},

	{"ldmvsfa",	LDM,	C_VS | OP_LDM 				},
	{"ldmvsea",	LDM,	C_VS | OP_LDM | PREINDEX		},
	{"ldmvsfd",	LDM,	C_VS | OP_LDM | INDEXUP			},
	{"ldmvsed",	LDM,	C_VS | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmvsib",	LDM,	C_VS | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmvsia",	LDM,	C_VS | OP_LDM | INDEXUP			},
	{"ldmvsdb",	LDM,	C_VS | OP_LDM | PREINDEX		},
	{"ldmvsda",	LDM,	C_VS | OP_LDM				},

	{"ldmvcfa",	LDM,	C_VC | OP_LDM 				},
	{"ldmvcea",	LDM,	C_VC | OP_LDM | PREINDEX		},
	{"ldmvcfd",	LDM,	C_VC | OP_LDM | INDEXUP			},
	{"ldmvced",	LDM,	C_VC | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmvcib",	LDM,	C_VC | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmvcia",	LDM,	C_VC | OP_LDM | INDEXUP			},
	{"ldmvcdb",	LDM,	C_VC | OP_LDM | PREINDEX		},
	{"ldmvcda",	LDM,	C_VC | OP_LDM				},

	{"ldmhifa",	LDM,	C_HI | OP_LDM 				},
	{"ldmhiea",	LDM,	C_HI | OP_LDM | PREINDEX		},
	{"ldmhifd",	LDM,	C_HI | OP_LDM | INDEXUP			},
	{"ldmhied",	LDM,	C_HI | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmhiib",	LDM,	C_HI | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmhiia",	LDM,	C_HI | OP_LDM | INDEXUP			},
	{"ldmhidb",	LDM,	C_HI | OP_LDM | PREINDEX		},
	{"ldmhida",	LDM,	C_HI | OP_LDM				},

	{"ldmlsfa",	LDM,	C_LS | OP_LDM 				},
	{"ldmlsea",	LDM,	C_LS | OP_LDM | PREINDEX		},
	{"ldmlsfd",	LDM,	C_LS | OP_LDM | INDEXUP			},
	{"ldmlsed",	LDM,	C_LS | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmlsib",	LDM,	C_LS | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmlsia",	LDM,	C_LS | OP_LDM | INDEXUP			},
	{"ldmlsdb",	LDM,	C_LS | OP_LDM | PREINDEX		},
	{"ldmlsda",	LDM,	C_LS | OP_LDM				},

	{"ldmgefa",	LDM,	C_GE | OP_LDM 				},
	{"ldmgeea",	LDM,	C_GE | OP_LDM | PREINDEX		},
	{"ldmgefd",	LDM,	C_GE | OP_LDM | INDEXUP			},
	{"ldmgeed",	LDM,	C_GE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmgeib",	LDM,	C_GE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmgeia",	LDM,	C_GE | OP_LDM | INDEXUP			},
	{"ldmgedb",	LDM,	C_GE | OP_LDM | PREINDEX		},
	{"ldmgeda",	LDM,	C_GE | OP_LDM				},

	{"ldmltfa",	LDM,	C_LT | OP_LDM 				},
	{"ldmltea",	LDM,	C_LT | OP_LDM | PREINDEX		},
	{"ldmltfd",	LDM,	C_LT | OP_LDM | INDEXUP			},
	{"ldmlted",	LDM,	C_LT | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmltib",	LDM,	C_LT | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmltia",	LDM,	C_LT | OP_LDM | INDEXUP			},
	{"ldmltdb",	LDM,	C_LT | OP_LDM | PREINDEX		},
	{"ldmltda",	LDM,	C_LT | OP_LDM				},

	{"ldmgtfa",	LDM,	C_GT | OP_LDM 				},
	{"ldmgtea",	LDM,	C_GT | OP_LDM | PREINDEX		},
	{"ldmgtfd",	LDM,	C_GT | OP_LDM | INDEXUP			},
	{"ldmgted",	LDM,	C_GT | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmgtib",	LDM,	C_GT | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmgtia",	LDM,	C_GT | OP_LDM | INDEXUP			},
	{"ldmgtdb",	LDM,	C_GT | OP_LDM | PREINDEX		},
	{"ldmgtda",	LDM,	C_GT | OP_LDM				},

	{"ldmlefa",	LDM,	C_LE | OP_LDM 				},
	{"ldmleea",	LDM,	C_LE | OP_LDM | PREINDEX		},
	{"ldmlefd",	LDM,	C_LE | OP_LDM | INDEXUP			},
	{"ldmleed",	LDM,	C_LE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmleib",	LDM,	C_LE | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmleia",	LDM,	C_LE | OP_LDM | INDEXUP			},
	{"ldmledb",	LDM,	C_LE | OP_LDM | PREINDEX		},
	{"ldmleda",	LDM,	C_LE | OP_LDM				},

	{"ldmalfa",	LDM,	C_AL | OP_LDM 				},
	{"ldmalea",	LDM,	C_AL | OP_LDM | PREINDEX		},
	{"ldmalfd",	LDM,	C_AL | OP_LDM | INDEXUP			},
	{"ldmaled",	LDM,	C_AL | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmalib",	LDM,	C_AL | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmalia",	LDM,	C_AL | OP_LDM | INDEXUP			},
	{"ldmaldb",	LDM,	C_AL | OP_LDM | PREINDEX		},
	{"ldmalda",	LDM,	C_AL | OP_LDM				},

	{"ldmnvfa",	LDM,	C_NV | OP_LDM 				},
	{"ldmnvea",	LDM,	C_NV | OP_LDM | PREINDEX		},
	{"ldmnvfd",	LDM,	C_NV | OP_LDM | INDEXUP			},
	{"ldmnved",	LDM,	C_NV | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmnvib",	LDM,	C_NV | OP_LDM | PREINDEX | INDEXUP	},
	{"ldmnvia",	LDM,	C_NV | OP_LDM | INDEXUP			},
	{"ldmnvdb",	LDM,	C_NV | OP_LDM | PREINDEX		},
	{"ldmnvda",	LDM,	C_NV | OP_LDM				},


	/* Software interrupt (TRAP) op-codes 	*/

/* SWI */
	{"swi",		SWI,	C_AL | OP_SWI	},
	{"swieq",	SWI,	C_EQ | OP_SWI	},
	{"swine",	SWI,	C_NE | OP_SWI	},
	{"swics",	SWI,	C_CS | OP_SWI	},
	{"swicc",	SWI,	C_CC | OP_SWI	},
	{"swimi",	SWI,	C_MI | OP_SWI	},
	{"swipl",	SWI,	C_PL | OP_SWI	},
	{"swivs",	SWI,	C_VS | OP_SWI	},
	{"swivc",	SWI,	C_VC | OP_SWI	},
	{"swihi",	SWI,	C_HI | OP_SWI	},
	{"swils",	SWI,	C_LS | OP_SWI	},
	{"swige",	SWI,	C_GE | OP_SWI	},
	{"swilt",	SWI,	C_LT | OP_SWI	},
	{"swigt",	SWI,	C_GT | OP_SWI	},
	{"swile",	SWI,	C_LE | OP_SWI	},
	{"swial",	SWI,	C_AL | OP_SWI	},
	{"swinv",	SWI,	C_NV | OP_SWI	},


	/* Single Data Swap instruction (ARM3) */

/* SWP */
	{"swp",		SWP,	C_AL | OP_SWP	},
	{"swpb",	SWP,	SWP_B | OP_SWP	},

	{"swpeq",	SWP,	C_EQ | OP_SWP	},
	{"swpeqb",	SWP,	C_EQ | SWP_B | OP_SWP	},
	{"swpne",	SWP,	C_NE | OP_SWP	},
	{"swpneb",	SWP,	C_NE | SWP_B | OP_SWP	},
	{"swpcs",	SWP,	C_CS | OP_SWP	},
	{"swpcsb",	SWP,	C_CS | SWP_B | OP_SWP	},
	{"swpcc",	SWP,	C_CC | OP_SWP	},
	{"swpccb",	SWP,	C_CC | SWP_B | OP_SWP	},
	{"swpmi",	SWP,	C_MI | OP_SWP	},
	{"swpmib",	SWP,	C_MI | SWP_B | OP_SWP	},
	{"swppl",	SWP,	C_PL | OP_SWP	},
	{"swpplb",	SWP,	C_PL | SWP_B | OP_SWP	},
	{"swpvs",	SWP,	C_VS | OP_SWP	},
	{"swpvsb",	SWP,	C_VS | SWP_B | OP_SWP	},
	{"swpvc",	SWP,	C_VC | OP_SWP	},
	{"swpvcb",	SWP,	C_VC | SWP_B | OP_SWP	},
	{"swphi",	SWP,	C_HI | OP_SWP	},
	{"swphib",	SWP,	C_HI | SWP_B | OP_SWP	},
	{"swpsb",	SWP,	C_LS | OP_SWP	},
	{"swplsb",	SWP,	C_LS | SWP_B | OP_SWP	},
	{"swpge",	SWP,	C_GE | OP_SWP	},
	{"swpgeb",	SWP,	C_GE | SWP_B | OP_SWP	},
	{"swptb",	SWP,	C_LT | OP_SWP	},
	{"swpltb",	SWP,	C_LT | SWP_B | OP_SWP	},
	{"swpgt",	SWP,	C_GT | OP_SWP	},
	{"swpgtb",	SWP,	C_GT | SWP_B | OP_SWP	},
	{"swpeb",	SWP,	C_LE | OP_SWP	},
	{"swpleb",	SWP,	C_LE | SWP_B | OP_SWP	},
	{"swpal",	SWP,	C_AL | OP_SWP	},
	{"swpalb",	SWP,	C_AL | SWP_B | OP_SWP	},
	{"swpnv",	SWP,	C_NV | OP_SWP	},
	{"swpnvb",	SWP,	C_NV | SWP_B | OP_SWP	},


	/* coprocessor data operations instruction */

/* CDO */
	{"cdo",		CDO,	C_AL | OP_CDO	},

	{"cdoeq",	CDO,	C_EQ | OP_CDO	},
	{"cdone",	CDO,	C_NE | OP_CDO	},
	{"cdocs",	CDO,	C_CS | OP_CDO	},
	{"cdocc",	CDO,	C_CC | OP_CDO	},
	{"cdomi",	CDO,	C_MI | OP_CDO	},
	{"cdopl",	CDO,	C_PL | OP_CDO	},
	{"cdovs",	CDO,	C_VS | OP_CDO	},
	{"cdovc",	CDO,	C_VC | OP_CDO	},
	{"cdohi",	CDO,	C_HI | OP_CDO	},
	{"cdosb",	CDO,	C_LS | OP_CDO	},
	{"cdoge",	CDO,	C_GE | OP_CDO	},
	{"cdotb",	CDO,	C_LT | OP_CDO	},
	{"cdogt",	CDO,	C_GT | OP_CDO	},
	{"cdoeb",	CDO,	C_LE | OP_CDO	},
	{"cdoal",	CDO,	C_AL | OP_CDO	},
	{"cdonv",	CDO,	C_NV | OP_CDO	},


	/* coprocessor data transfer instructions */

/* LDC */
	{"ldc",		LDC,	C_AL | OP_LDC		},
	{"ldcl",	LDC,	C_AL | CDT_N | OP_LDC	},
	{"ldct",	LDC,	C_AL | WTRANS | OP_LDC	},
	{"ldcn",	LDC,	C_AL | CDT_N | OP_LDC	},

	{"ldceq",	LDC,	C_EQ | OP_LDC	},
	{"ldceql",	LDC,	C_EQ | CDT_N | OP_LDC	},
	{"ldceqt",	LDC,	C_EQ | WTRANS | OP_LDC	},
	{"ldceqn",	LDC,	C_EQ | CDT_N | OP_LDC	},
	{"ldcne",	LDC,	C_NE | OP_LDC	},
	{"ldcnel",	LDC,	C_NE | CDT_N | OP_LDC	},
	{"ldcnet",	LDC,	C_NE | WTRANS | OP_LDC	},
	{"ldcnen",	LDC,	C_NE | CDT_N | OP_LDC	},
	{"ldccs",	LDC,	C_CS | OP_LDC	},
	{"ldccsl",	LDC,	C_CS | CDT_N | OP_LDC	},
	{"ldccst",	LDC,	C_CS | WTRANS | OP_LDC	},
	{"ldccsn",	LDC,	C_CS | CDT_N | OP_LDC	},
	{"ldccc",	LDC,	C_CC | OP_LDC	},
	{"ldcccl",	LDC,	C_CC | CDT_N | OP_LDC	},
	{"ldccct",	LDC,	C_CC | WTRANS | OP_LDC	},
	{"ldcccn",	LDC,	C_CC | CDT_N | OP_LDC	},
	{"ldcmi",	LDC,	C_MI | OP_LDC	},
	{"ldcmil",	LDC,	C_MI | CDT_N | OP_LDC	},
	{"ldcmit",	LDC,	C_MI | WTRANS | OP_LDC	},
	{"ldcmin",	LDC,	C_MI | CDT_N | OP_LDC	},
	{"ldcpl",	LDC,	C_PL | OP_LDC	},
	{"ldcpll",	LDC,	C_PL | CDT_N | OP_LDC	},
	{"ldcplt",	LDC,	C_PL | WTRANS | OP_LDC	},
	{"ldcpln",	LDC,	C_PL | CDT_N | OP_LDC	},
	{"ldcvs",	LDC,	C_VS | OP_LDC	},
	{"ldcvsl",	LDC,	C_VS | CDT_N | OP_LDC	},
	{"ldcvst",	LDC,	C_VS | WTRANS | OP_LDC	},
	{"ldcvsn",	LDC,	C_VS | CDT_N | OP_LDC	},
	{"ldcvc",	LDC,	C_VC | OP_LDC	},
	{"ldcvcl",	LDC,	C_VC | CDT_N | OP_LDC	},
	{"ldcvct",	LDC,	C_VC | WTRANS | OP_LDC	},
	{"ldcvcn",	LDC,	C_VC | CDT_N | OP_LDC	},
	{"ldchi",	LDC,	C_HI | OP_LDC	},
	{"ldchil",	LDC,	C_HI | CDT_N | OP_LDC	},
	{"ldchit",	LDC,	C_HI | WTRANS | OP_LDC	},
	{"ldchin",	LDC,	C_HI | CDT_N | OP_LDC	},
	{"ldcsb",	LDC,	C_LS | OP_LDC	},
	{"ldcsbl",	LDC,	C_LS | CDT_N | OP_LDC	},
	{"ldcsbt",	LDC,	C_LS | WTRANS | OP_LDC	},
	{"ldcsbn",	LDC,	C_LS | CDT_N | OP_LDC	},
	{"ldcge",	LDC,	C_GE | OP_LDC	},
	{"ldcgel",	LDC,	C_GE | CDT_N | OP_LDC	},
	{"ldcget",	LDC,	C_GE | WTRANS | OP_LDC	},
	{"ldcgen",	LDC,	C_GE | CDT_N | OP_LDC	},
	{"ldctb",	LDC,	C_LT | OP_LDC	},
	{"ldctbl",	LDC,	C_LT | CDT_N | OP_LDC	},
	{"ldctbt",	LDC,	C_LT | WTRANS | OP_LDC	},
	{"ldctbn",	LDC,	C_LT | CDT_N | OP_LDC	},
	{"ldcgt",	LDC,	C_GT | OP_LDC	},
	{"ldcgtl",	LDC,	C_GT | CDT_N | OP_LDC	},
	{"ldcgtt",	LDC,	C_GT | WTRANS | OP_LDC	},
	{"ldcgtn",	LDC,	C_GT | CDT_N | OP_LDC	},
	{"ldceb",	LDC,	C_LE | OP_LDC	},
	{"ldcebl",	LDC,	C_LE | CDT_N | OP_LDC	},
	{"ldcebt",	LDC,	C_LE | WTRANS | OP_LDC	},
	{"ldcebn",	LDC,	C_LE | CDT_N | OP_LDC	},
	{"ldcal",	LDC,	C_AL | OP_LDC	},
	{"ldcall",	LDC,	C_AL | CDT_N | OP_LDC	},
	{"ldcalt",	LDC,	C_AL | WTRANS | OP_LDC	},
	{"ldcaln",	LDC,	C_AL | CDT_N | OP_LDC	},
	{"ldcnv",	LDC,	C_NV | OP_LDC	},
	{"ldcnvl",	LDC,	C_NV | CDT_N | OP_LDC	},
	{"ldcnvt",	LDC,	C_NV | WTRANS | OP_LDC	},
	{"ldcnvn",	LDC,	C_NV | CDT_N | OP_LDC	},

/* STC */
	{"stc",		STC,	C_AL | OP_STC	},
	{"stcl",	STC,	CDT_N | OP_STC	},
	{"stct",	STC,	WTRANS | OP_STC	},
	{"stcn",	STC,	CDT_N | OP_STC	},

	{"stceq",	STC,	C_EQ | OP_STC	},
	{"stceql",	STC,	C_EQ | CDT_N | OP_STC	},
	{"stceqt",	STC,	C_EQ | WTRANS | OP_STC	},
	{"stceqn",	STC,	C_EQ | CDT_N | OP_STC	},
	{"stcne",	STC,	C_NE | OP_STC	},
	{"stcnel",	STC,	C_NE | CDT_N | OP_STC	},
	{"stcnet",	STC,	C_NE | WTRANS | OP_STC	},
	{"stcnen",	STC,	C_NE | CDT_N | OP_STC	},
	{"stccs",	STC,	C_CS | OP_STC	},
	{"stccsl",	STC,	C_CS | CDT_N | OP_STC	},
	{"stccst",	STC,	C_CS | WTRANS | OP_STC	},
	{"stccsn",	STC,	C_CS | CDT_N | OP_STC	},
	{"stccc",	STC,	C_CC | OP_STC	},
	{"stcccl",	STC,	C_CC | CDT_N | OP_STC	},
	{"stccct",	STC,	C_CC | WTRANS | OP_STC	},
	{"stcccn",	STC,	C_CC | CDT_N | OP_STC	},
	{"stcmi",	STC,	C_MI | OP_STC	},
	{"stcmil",	STC,	C_MI | CDT_N | OP_STC	},
	{"stcmit",	STC,	C_MI | WTRANS | OP_STC	},
	{"stcmin",	STC,	C_MI | CDT_N | OP_STC	},
	{"stcpl",	STC,	C_PL | OP_STC	},
	{"stcpll",	STC,	C_PL | CDT_N | OP_STC	},
	{"stcplt",	STC,	C_PL | WTRANS | OP_STC	},
	{"stcpln",	STC,	C_PL | CDT_N | OP_STC	},
	{"stcvs",	STC,	C_VS | OP_STC	},
	{"stcvsl",	STC,	C_VS | CDT_N | OP_STC	},
	{"stcvst",	STC,	C_VS | WTRANS | OP_STC	},
	{"stcvsn",	STC,	C_VS | CDT_N | OP_STC	},
	{"stcvc",	STC,	C_VC | OP_STC	},
	{"stcvcl",	STC,	C_VC | CDT_N | OP_STC	},
	{"stcvct",	STC,	C_VC | WTRANS | OP_STC	},
	{"stcvcn",	STC,	C_VC | CDT_N | OP_STC	},
	{"stchi",	STC,	C_HI | OP_STC	},
	{"stchil",	STC,	C_HI | CDT_N | OP_STC	},
	{"stchit",	STC,	C_HI | WTRANS | OP_STC	},
	{"stchin",	STC,	C_HI | CDT_N | OP_STC	},
	{"stcsb",	STC,	C_LS | OP_STC	},
	{"stcsbl",	STC,	C_LS | CDT_N | OP_STC	},
	{"stcsbt",	STC,	C_LS | WTRANS | OP_STC	},
	{"stcsbn",	STC,	C_LS | CDT_N | OP_STC	},
	{"stcge",	STC,	C_GE | OP_STC	},
	{"stcgel",	STC,	C_GE | CDT_N | OP_STC	},
	{"stcget",	STC,	C_GE | WTRANS | OP_STC	},
	{"stcgen",	STC,	C_GE | CDT_N | OP_STC	},
	{"stctb",	STC,	C_LT | OP_STC	},
	{"stctbl",	STC,	C_LT | CDT_N | OP_STC	},
	{"stctbt",	STC,	C_LT | WTRANS | OP_STC	},
	{"stctbn",	STC,	C_LT | CDT_N | OP_STC	},
	{"stcgt",	STC,	C_GT | OP_STC	},
	{"stcgtl",	STC,	C_GT | CDT_N | OP_STC	},
	{"stcgtt",	STC,	C_GT | WTRANS | OP_STC	},
	{"stcgtn",	STC,	C_GT | CDT_N | OP_STC	},
	{"stceb",	STC,	C_LE | OP_STC	},
	{"stcebl",	STC,	C_LE | CDT_N | OP_STC	},
	{"stcebt",	STC,	C_LE | WTRANS | OP_STC	},
	{"stcebn",	STC,	C_LE | CDT_N | OP_STC	},
	{"stcal",	STC,	C_AL | OP_STC	},
	{"stcall",	STC,	C_AL | CDT_N | OP_STC	},
	{"stcalt",	STC,	C_AL | WTRANS | OP_STC	},
	{"stcaln",	STC,	C_AL | CDT_N | OP_STC	},
	{"stcnv",	STC,	C_NV | OP_STC	},
	{"stcnvl",	STC,	C_NV | CDT_N | OP_STC	},
	{"stcnvt",	STC,	C_NV | WTRANS | OP_STC	},
	{"stcnvn",	STC,	C_NV | CDT_N | OP_STC	},


	/* coprocessor register transfer instructions */

/* MRC */
	{"mrc",		MRC,	C_AL | OP_MRC	},

	{"mrceq",	MRC,	C_EQ | OP_MRC	},
	{"mrcne",	MRC,	C_NE | OP_MRC	},
	{"mrccs",	MRC,	C_CS | OP_MRC	},
	{"mrccc",	MRC,	C_CC | OP_MRC	},
	{"mrcmi",	MRC,	C_MI | OP_MRC	},
	{"mrcpl",	MRC,	C_PL | OP_MRC	},
	{"mrcvs",	MRC,	C_VS | OP_MRC	},
	{"mrcvc",	MRC,	C_VC | OP_MRC	},
	{"mrchi",	MRC,	C_HI | OP_MRC	},
	{"mrcsb",	MRC,	C_LS | OP_MRC	},
	{"mrcge",	MRC,	C_GE | OP_MRC	},
	{"mrctb",	MRC,	C_LT | OP_MRC	},
	{"mrcgt",	MRC,	C_GT | OP_MRC	},
	{"mrceb",	MRC,	C_LE | OP_MRC	},
	{"mrcal",	MRC,	C_AL | OP_MRC	},
	{"mrcnv",	MRC,	C_NV | OP_MRC	},

/* MCR */
	{"mcr",		MCR,	C_AL | OP_MCR	},

	{"mcreq",	MCR,	C_EQ | OP_MCR	},
	{"mcrne",	MCR,	C_NE | OP_MCR	},
	{"mcrcs",	MCR,	C_CS | OP_MCR	},
	{"mcrcc",	MCR,	C_CC | OP_MCR	},
	{"mcrmi",	MCR,	C_MI | OP_MCR	},
	{"mcrpl",	MCR,	C_PL | OP_MCR	},
	{"mcrvs",	MCR,	C_VS | OP_MCR	},
	{"mcrvc",	MCR,	C_VC | OP_MCR	},
	{"mcrhi",	MCR,	C_HI | OP_MCR	},
	{"mcrsb",	MCR,	C_LS | OP_MCR	},
	{"mcrge",	MCR,	C_GE | OP_MCR	},
	{"mcrtb",	MCR,	C_LT | OP_MCR	},
	{"mcrgt",	MCR,	C_GT | OP_MCR	},
	{"mcreb",	MCR,	C_LE | OP_MCR	},
	{"mcral",	MCR,	C_AL | OP_MCR	},
	{"mcrnv",	MCR,	C_NV | OP_MCR	},

/* LEA */
	{"lea",		LEA,	C_AL | OP_LEA	},

	{"leaeq",	LEA,	C_EQ | OP_LEA	},
	{"leane",	LEA,	C_NE | OP_LEA	},
	{"leacs",	LEA,	C_CS | OP_LEA	},
	{"leacc",	LEA,	C_CC | OP_LEA	},
	{"leami",	LEA,	C_MI | OP_LEA	},
	{"leapl",	LEA,	C_PL | OP_LEA	},
	{"leavs",	LEA,	C_VS | OP_LEA	},
	{"leavc",	LEA,	C_VC | OP_LEA	},
	{"leahi",	LEA,	C_HI | OP_LEA	},
	{"leasb",	LEA,	C_LS | OP_LEA	},
	{"leage",	LEA,	C_GE | OP_LEA	},
	{"leatb",	LEA,	C_LT | OP_LEA	},
	{"leagt",	LEA,	C_GT | OP_LEA	},
	{"leaeb",	LEA,	C_LE | OP_LEA	},
	{"leaal",	LEA,	C_AL | OP_LEA	},
	{"leanv",	LEA,	C_NV | OP_LEA	},

/* NOP - mov r0, r0 */
	{"nop",		NOP,	C_AL | OP_MOV	},

/* ARM6 instructions */
	{"mrs",		MRS,	C_AL | OP_MRS	},
	{"mrseq",	MRS,	C_EQ | OP_MRS	},
	{"mrsne",	MRS,	C_NE | OP_MRS	},
	{"mrscs",	MRS,	C_CS | OP_MRS	},
	{"mrscc",	MRS,	C_CC | OP_MRS	},
	{"mrsmi",	MRS,	C_MI | OP_MRS	},
	{"mrspl",	MRS,	C_PL | OP_MRS	},
	{"mrsvs",	MRS,	C_VS | OP_MRS	},
	{"mrsvc",	MRS,	C_VC | OP_MRS	},
	{"mrshi",	MRS,	C_HI | OP_MRS	},
	{"mrssb",	MRS,	C_LS | OP_MRS	},
	{"mrsge",	MRS,	C_GE | OP_MRS	},
	{"mrstb",	MRS,	C_LT | OP_MRS	},
	{"mrsgt",	MRS,	C_GT | OP_MRS	},
	{"mrseb",	MRS,	C_LE | OP_MRS	},
	{"mrsal",	MRS,	C_AL | OP_MRS	},
	{"mrsnv",	MRS,	C_NV | OP_MRS	},

	{"msr",		MSR,	C_AL | OP_MSR	},
	{"msreq",	MSR,	C_EQ | OP_MSR	},
	{"msrne",	MSR,	C_NE | OP_MSR	},
	{"msrcs",	MSR,	C_CS | OP_MSR	},
	{"msrcc",	MSR,	C_CC | OP_MSR	},
	{"msrmi",	MSR,	C_MI | OP_MSR	},
	{"msrpl",	MSR,	C_PL | OP_MSR	},
	{"msrvs",	MSR,	C_VS | OP_MSR	},
	{"msrvc",	MSR,	C_VC | OP_MSR	},
	{"msrhi",	MSR,	C_HI | OP_MSR	},
	{"msrsb",	MSR,	C_LS | OP_MSR	},
	{"msrge",	MSR,	C_GE | OP_MSR	},
	{"msrtb",	MSR,	C_LT | OP_MSR	},
	{"msrgt",	MSR,	C_GT | OP_MSR	},
	{"msreb",	MSR,	C_LE | OP_MSR	},
	{"msral",	MSR,	C_AL | OP_MSR	},
	{"msrnv",	MSR,	C_NV | OP_MSR	},

	{NULL, 0, 0}	/* **** END MARKER **** */
} ;



	/* ************************************************************ */
	/* ARM Register Tokens						*/
	/* ************************************************************ */

static Common TheRegs[] =  {
	/* TEXT		TOKEN		VALUE	*/

	/* standard register names (user mode) */
	{"r0",		R0,		R_R0	},
	{"r1",		R1,		R_R1	},
	{"r2",		R2,		R_R2	},
	{"r3",		R3,		R_R3	},
	{"r4",		R4,		R_R4	},
	{"r5",		R5,		R_R5	},
	{"r6",		R6,		R_R6	},
	{"r7",		R7,		R_R7	},
	{"r8",		R8,		R_R8	},
	{"r9",		R9,		R_R9	},
	{"r10",		R10,		R_R10	},
	{"r11",		R11,		R_R11	},
	{"r12",		R12,		R_R12	},
	{"r13",		R13,		R_R13	},
	{"r14",		R14,		R_R14	},
	{"r15",		R15,		R_R15	},

	/* FIQ mode aliases */
	{"r8_fiq",	R8,		R_R8	},
	{"r9_fiq",	R9,		R_R9	},
	{"r10_fiq",	R10,		R_R10	},
	{"r11_fiq",	R11,		R_R11	},
	{"r12_fiq",	R12,		R_R12	},
	{"r13_fiq",	R13,		R_R13	},
	{"r14_fiq",	R14,		R_R14	},
	{"r15_fiq",	R15,		R_R15	},

	/* IRQ mode aliases */
	{"r13_irq",	R13,		R_R13	},
	{"r14_irq",	R14,		R_R14	},
	{"r15_irq",	R15,		R_R15	},

	/* SVC mode aliases */
	{"r13_svc",	R13,		R_R13	},
	{"r14_svc",	R14,		R_R14	},
	{"r15_svc",	R15,		R_R15	},

	/* Abort mode aliases (ARM6 only) */
	{"r13_abt",	R13,		R_R13	},
	{"r14_abt",	R14,		R_R14	},
	{"r15_abt",	R15,		R_R15	},

	/* Undefined mode aliases (ARM6 only) */
	{"r13_undef",	R13,		R_R13	},
	{"r14_undef",	R14,		R_R14	},
	{"r15_undef",	R15,		R_R15	},

	/* Std Helios-ARM PCS register aliases */
	{"a1",		R0,		R_R0	},
	{"a2",		R1,		R_R1	},
	{"a3",		R2,		R_R2	},
	{"a4",		R3,		R_R3	},

	{"v1",		R4,		R_R4	},
	{"v2",		R5,		R_R5	},
	{"v3",		R6,		R_R6	},
	{"v4",		R7,		R_R7	},
	{"v5",		R8,		R_R8	},

	{"mt",		R9,		R_R9	},
	{"dp",		R9,		R_R9	}, /* old synonym */
	{"use",		R10,		R_R10	},
	{"sl",		R10,		R_R10	}, /* old synonym */
	{"fp",		R11,		R_R11	},
	{"tmp",		R12,		R_R12	},
	{"ip",		R12,		R_R12	}, /* old synonym */
	{"usp",		R13,		R_R13	}, 
	{"sp",		R13,		R_R13	}, /* old synonym */
	{"lr",		R14,		R_R14	},
	{"lk",		R14,		R_R14	}, /* old synonym */
	{"pc",		R15,		R_R15	},
/* too confusing an alias with new ARM psr registers */
/*	{"psr",		R15,		R_R15	}, */

	/* coprocessor register names */
	{"cr0",		CR0,		R_CR0	},
	{"cr1",		CR1,		R_CR1	},
	{"cr2",		CR2,		R_CR2	},
	{"cr3",		CR3,		R_CR3	},
	{"cr4",		CR4,		R_CR4	},
	{"cr5",		CR5,		R_CR5	},
	{"cr6",		CR6,		R_CR6	},
	{"cr7",		CR7,		R_CR7	},
	{"cr8",		CR8,		R_CR8	},
	{"cr9",		CR9,		R_CR9	},
	{"cr10",	CR10,		R_CR10	},
	{"cr11",	CR11,		R_CR11	},
	{"cr12",	CR12,		R_CR12	},
	{"cr13",	CR13,		R_CR13	},
	{"cr14",	CR14,		R_CR14	},
	{"cr15",	CR15,		R_CR15	},

	{NULL, 0, 0}	/* **** END MARKER **** */
} ;



	/* ************************************************************ */
	/* ARM specific linker instruction patch tokens			*/
	/* ************************************************************ */

static Common ThePatches[] =  {
	/* TEXT			TOKEN		VALUE	*/

	{"patcharmdt",		PATCHARMDT,	PATCH_ARM_DT	},
	{"patcharmdp",		PATCHARMDP,	PATCH_ARM_DP	},
	{"patcharmjp",		PATCHARMJP,	PATCH_ARM_JP	},
	{"patcharmdplsb",	PATCHARMDPLSB,	PATCH_ARM_DPLSB },
	{"patcharmdpmid",	PATCHARMDPMID,	PATCH_ARM_DPMID	},
	{"patcharmdprest",	PATCHARMDPREST,	PATCH_ARM_DPREST},

	{NULL, 0, 0}	/* **** END MARKER **** */
} ;



	/* ************************************************************ */
	/* Extra ARM tokens to recognise				*/
	/* ************************************************************ */

static Common TheExtras[] =  {
	/* TEXT		TOKEN		VALUE	*/

	{"lsl",		LSL,		OP_LSL},
	{"asl",		LSL,		OP_LSL},	/* synoym for LSL */
	{"lsr",		LSR,		OP_LSR},
	{"asr",		ASR,		OP_ASR},
	{"ror",		ROR,		OP_ROR},
	{"rrx",		RRX,		OP_RRX},

	{"cpsr",	CPSR,		A6PSR(A6CPSR) | MSR_ALLPSR},
	{"cpsr_all",	CPSR,		A6PSR(A6CPSR) | MSR_ALLPSR},
	{"cpsr_flg",	CPSR_FLG,	A6PSR(A6CPSR)		},
	{"spsr",	SPSR,		A6PSR(A6SPSR) | MSR_ALLPSR},
	{"spsr_all",	SPSR,		A6PSR(A6SPSR) | MSR_ALLPSR},
	{"spsr_flg",	SPSR_FLG,	A6PSR(A6SPSR)		},

	{NULL, 0, 0}	/* **** END MARKER **** */
} ;



/************************************************************************/
/* InitMnemonicKeywords							*/
/*									*/
/* Add a set of target CPU specific mnemonic keywords to the hash table */
/*									*/
/************************************************************************/

void InitMnemonicKeywords(void)
{
	struct Mnemonic		*cm = TheMnemonics;
	struct Common		*regs = TheRegs;
	struct Common		*ip = ThePatches;
	struct Common		*xtras = TheExtras;

	/* install mneumonics in hash table */
	while (cm->name != NULL) {
		NewSymbStruct(cm->name, HT_MNEMONIC, cm);
		cm++;
	}

	/* install registers in hash table */
	while (regs->name != NULL) {
		NewSymbStruct(regs->name, HT_TOKENVAL, regs);
		regs++;
	}

	/* install instruction patches in hash table */
	while (ip->name != NULL) {
		NewSymbStruct(ip->name, HT_TOKENVAL, ip);
		ip++;
	}

	/* install extra tokens in hash table */
	while (xtras->name != NULL) {
		NewSymbStruct(xtras->name, HT_TOKENVAL, xtras);
		xtras++;
	}
}



/* end of lex_ARM.c */
@


1.5
log
@updated for arm6 and Helios-ARM PCS register aliases
@
text
@d16 1
a16 1
 * RcsId: $Id: lex_ARM.c,v 1.4 1992/09/04 13:22:55 paul Exp paul $
d928 9
d1092 9
d1235 1
a1235 1
	{"swp",		SWP,	OP_SWP	},
d1275 1
a1275 1
	{"cdo",		CDO,	OP_CDO	},
d1298 4
a1301 4
	{"ldc",		LDC,	OP_LDC	},
	{"ldcl",	LDC,	CDT_N | OP_LDC	},
	{"ldct",	LDC,	WTRANS | OP_LDC	},
	{"ldcn",	LDC,	CDT_N | OP_LDC	},
d1369 1
a1369 1
	{"stc",		STC,	OP_STC	},
d1443 1
a1443 1
	{"mrc",		MRC,	OP_MRC	},
d1463 1
a1463 1
	{"mcr",		MRC,	OP_MRC	},
d1482 59
d1572 9
a1580 9
	/* firq mode aliases */
	{"r8_firq",	R8,		R_R8	},
	{"r9_firq",	R9,		R_R9	},
	{"r10_firq",	R10,		R_R10	},
	{"r11_firq",	R11,		R_R11	},
	{"r12_firq",	R12,		R_R12	},
	{"r13_firq",	R13,		R_R13	},
	{"r14_firq",	R14,		R_R14	},
	{"r15_firq",	R15,		R_R15	},
d1582 1
a1582 1
	/* irq mode aliases */
d1587 1
a1587 1
	/* svc mode aliases */
d1592 1
a1592 1
	/* abort mode aliases (ARM6 only) */
d1597 1
a1597 1
	/* undefined mode aliases (ARM6 only) */
d1602 1
a1602 1
	/* std Helios-ARM PCS register aliases */
d1614 4
a1617 2
	{"dp",		R9,		R_R9	},
	{"sl",		R10,		R_R10	},
d1619 4
a1622 2
	{"ip",		R12,		R_R12	},
	{"sp",		R13,		R_R13	},
d1626 2
a1627 1
	{"psr",		R15,		R_R15	},
a1646 2
	/* @@@@@@ Add in ARM600 names? CPCR SPSR_xxx */

d1684 7
@


1.4
log
@fixed for comparison setting psr flags
@
text
@d16 1
a16 1
 * RcsId: $Id: lex_ARM.c,v 1.3 1992/09/02 18:23:53 paul Exp $
d1477 1
d1495 1
a1495 1
	/* firq aliases */
d1505 1
a1505 1
	/* irq aliases */
d1510 1
a1510 1
	/* svc aliases */
d1515 26
a1540 1
	/* std aliases */
d1543 1
a1543 1
	{"lk",		R14,		R_R14	},
d1565 1
a1565 2
	/* @@@@@@ Add in std ARM PCS reg names? */
	/* @@@@@@ Add in ARM600 names? */
d1651 1
a1651 2
/* lex_ARM.c */

@


1.3
log
@fixed ldm to its own opcode not stm!
@
text
@d16 1
a16 1
 * RcsId: $Id: lex_ARM.c,v 1.2 1992/09/01 17:19:50 paul Exp $
d378 1
a378 1
	{"tstp",	TST,	C_AL | OP_TST | DP_S	},
d380 1
a380 1
	{"tsteqp",	TST,	C_EQ | OP_TST | DP_S	},
d382 1
a382 1
	{"tstnep",	TST,	C_NE | OP_TST | DP_S	},
d384 1
a384 1
	{"tstcsp",	TST,	C_CS | OP_TST | DP_S	},
d386 1
a386 1
	{"tstccp",	TST,	C_CC | OP_TST | DP_S	},
d388 1
a388 1
	{"tstmip",	TST,	C_MI | OP_TST | DP_S	},
d390 1
a390 1
	{"tstplp",	TST,	C_PL | OP_TST | DP_S	},
d392 1
a392 1
	{"tstvsp",	TST,	C_VS | OP_TST | DP_S	},
d394 1
a394 1
	{"tstvcp",	TST,	C_VC | OP_TST | DP_S	},
d396 1
a396 1
	{"tsthip",	TST,	C_HI | OP_TST | DP_S	},
d398 1
a398 1
	{"tstlsp",	TST,	C_LS | OP_TST | DP_S	},
d400 1
a400 1
	{"tstgep",	TST,	C_GE | OP_TST | DP_S	},
d402 1
a402 1
	{"tstltp",	TST,	C_LT | OP_TST | DP_S	},
d404 1
a404 1
	{"tstgtp",	TST,	C_GT | OP_TST | DP_S	},
d406 1
a406 1
	{"tstlep",	TST,	C_LE | OP_TST | DP_S	},
d408 1
a408 1
	{"tstalp",	TST,	C_AL | OP_TST | DP_S	},
d410 1
a410 1
	{"tstnvp",	TST,	C_NV | OP_TST | DP_S	},
d414 1
a414 1
	{"teqp",	TEQ,	C_AL | OP_TEQ | DP_S	},
d416 1
a416 1
	{"teqeqp",	TEQ,	C_EQ | OP_TEQ | DP_S	},
d418 1
a418 1
	{"teqnep",	TEQ,	C_NE | OP_TEQ | DP_S	},
d420 1
a420 1
	{"teqcsp",	TEQ,	C_CS | OP_TEQ | DP_S	},
d422 1
a422 1
	{"teqccp",	TEQ,	C_CC | OP_TEQ | DP_S	},
d424 1
a424 1
	{"teqmip",	TEQ,	C_MI | OP_TEQ | DP_S	},
d426 1
a426 1
	{"teqplp",	TEQ,	C_PL | OP_TEQ | DP_S	},
d428 1
a428 1
	{"teqvsp",	TEQ,	C_VS | OP_TEQ | DP_S	},
d430 1
a430 1
	{"teqvcp",	TEQ,	C_VC | OP_TEQ | DP_S	},
d432 1
a432 1
	{"teqhip",	TEQ,	C_HI | OP_TEQ | DP_S	},
d434 1
a434 1
	{"teqlsp",	TEQ,	C_LS | OP_TEQ | DP_S	},
d436 1
a436 1
	{"teqgep",	TEQ,	C_GE | OP_TEQ | DP_S	},
d438 1
a438 1
	{"teqltp",	TEQ,	C_LT | OP_TEQ | DP_S	},
d440 1
a440 1
	{"teqgtp",	TEQ,	C_GT | OP_TEQ | DP_S	},
d442 1
a442 1
	{"teqlep",	TEQ,	C_LE | OP_TEQ | DP_S	},
d444 1
a444 1
	{"teqalp",	TEQ,	C_AL | OP_TEQ | DP_S	},
d446 1
a446 1
	{"teqnvp",	TEQ,	C_NV | OP_TEQ | DP_S	},
d450 1
a450 1
	{"cmpp",	CMP,	C_AL | OP_CMP | DP_S	},
d452 1
a452 1
	{"cmpeqp",	CMP,	C_EQ | OP_CMP | DP_S	},
d454 1
a454 1
	{"cmpnep",	CMP,	C_NE | OP_CMP | DP_S	},
d456 1
a456 1
	{"cmpcsp",	CMP,	C_CS | OP_CMP | DP_S	},
d458 1
a458 1
	{"cmpccp",	CMP,	C_CC | OP_CMP | DP_S	},
d460 1
a460 1
	{"cmpmip",	CMP,	C_MI | OP_CMP | DP_S	},
d462 1
a462 1
	{"cmpplp",	CMP,	C_PL | OP_CMP | DP_S	},
d464 1
a464 1
	{"cmpvsp",	CMP,	C_VS | OP_CMP | DP_S	},
d466 1
a466 1
	{"cmpvcp",	CMP,	C_VC | OP_CMP | DP_S	},
d468 1
a468 1
	{"cmphip",	CMP,	C_HI | OP_CMP | DP_S	},
d470 1
a470 1
	{"cmplsp",	CMP,	C_LS | OP_CMP | DP_S	},
d472 1
a472 1
	{"cmpgep",	CMP,	C_GE | OP_CMP | DP_S	},
d474 1
a474 1
	{"cmpltp",	CMP,	C_LT | OP_CMP | DP_S	},
d476 1
a476 1
	{"cmpgtp",	CMP,	C_GT | OP_CMP | DP_S	},
d478 1
a478 1
	{"cmplep",	CMP,	C_LE | OP_CMP | DP_S	},
d480 1
a480 1
	{"cmpalp",	CMP,	C_AL | OP_CMP | DP_S	},
d482 1
a482 1
	{"cmpnvp",	CMP,	C_NV | OP_CMP | DP_S	},
d486 1
a486 1
	{"cmnp",	CMN,	C_AL | OP_CMN | DP_S	},
d488 1
a488 1
	{"cmneqp",	CMN,	C_EQ | OP_CMN | DP_S	},
d490 1
a490 1
	{"cmnnep",	CMN,	C_NE | OP_CMN | DP_S	},
d492 1
a492 1
	{"cmncsp",	CMN,	C_CS | OP_CMN | DP_S	},
d494 1
a494 1
	{"cmnccp",	CMN,	C_CC | OP_CMN | DP_S	},
d496 1
a496 1
	{"cmnmip",	CMN,	C_MI | OP_CMN | DP_S	},
d498 1
a498 1
	{"cmnplp",	CMN,	C_PL | OP_CMN | DP_S	},
d500 1
a500 1
	{"cmnvsp",	CMN,	C_VS | OP_CMN | DP_S	},
d502 1
a502 1
	{"cmnvcp",	CMN,	C_VC | OP_CMN | DP_S	},
d504 1
a504 1
	{"cmnhip",	CMN,	C_HI | OP_CMN | DP_S	},
d506 1
a506 1
	{"cmnlsp",	CMN,	C_LS | OP_CMN | DP_S	},
d508 1
a508 1
	{"cmngep",	CMN,	C_GE | OP_CMN | DP_S	},
d510 1
a510 1
	{"cmnltp",	CMN,	C_LT | OP_CMN | DP_S	},
d512 1
a512 1
	{"cmngtp",	CMN,	C_GT | OP_CMN | DP_S	},
d514 1
a514 1
	{"cmnlep",	CMN,	C_LE | OP_CMN | DP_S	},
d516 1
a516 1
	{"cmnalp",	CMN,	C_AL | OP_CMN | DP_S	},
d518 1
a518 1
	{"cmnnvp",	CMN,	C_NV | OP_CMN | DP_S	},
@


1.2
log
@added co-processor and swp intr., cleaned up common opcode flag uses
@
text
@d16 1
a16 1
 * RcsId: $Id: lex_ARM.c,v 1.1 1992/03/12 21:16:01 paul Exp $
d375 1
a375 1
/* TST */
d411 1
a411 1
/* TEQ */
d447 1
a447 1
/* CMP */
d483 1
a483 1
/* CMN */
d882 1
d1037 153
a1189 152
	{"ldmfa",	STM,	C_AL | OP_STM 				},
	{"ldmea",	STM,	C_AL | OP_STM | PREINDEX		},
	{"ldmfd",	STM,	C_AL | OP_STM | INDEXUP			},
	{"ldmed",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"ldmib",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"ldmia",	STM,	C_AL | OP_STM | INDEXUP			},
	{"ldmdb",	STM,	C_AL | OP_STM | PREINDEX		},
	{"ldmda",	STM,	C_AL | OP_STM				},

	{"ldmeqfa",	STM,	C_EQ | OP_STM 				},
	{"ldmeqea",	STM,	C_EQ | OP_STM | PREINDEX		},
	{"ldmeqfd",	STM,	C_EQ | OP_STM | INDEXUP			},
	{"ldmeqed",	STM,	C_EQ | OP_STM | PREINDEX | INDEXUP	},
	{"ldmeqib",	STM,	C_EQ | OP_STM | PREINDEX | INDEXUP	},
	{"ldmeqia",	STM,	C_EQ | OP_STM | INDEXUP			},
	{"ldmeqdb",	STM,	C_EQ | OP_STM | PREINDEX		},
	{"ldmeqda",	STM,	C_EQ | OP_STM				},

	{"ldmnefa",	STM,	C_NE | OP_STM 				},
	{"ldmneea",	STM,	C_NE | OP_STM | PREINDEX		},
	{"ldmnefd",	STM,	C_NE | OP_STM | INDEXUP			},
	{"ldmneed",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmneib",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmneia",	STM,	C_NE | OP_STM | INDEXUP			},
	{"ldmnedb",	STM,	C_NE | OP_STM | PREINDEX		},
	{"ldmneda",	STM,	C_NE | OP_STM				},

	{"ldmnefa",	STM,	C_NE | OP_STM 				},
	{"ldmneea",	STM,	C_NE | OP_STM | PREINDEX		},
	{"ldmnefd",	STM,	C_NE | OP_STM | INDEXUP			},
	{"ldmneed",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmneib",	STM,	C_NE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmneia",	STM,	C_NE | OP_STM | INDEXUP			},
	{"ldmnedb",	STM,	C_NE | OP_STM | PREINDEX		},
	{"ldmneda",	STM,	C_NE | OP_STM				},

	{"ldmccfa",	STM,	C_CC | OP_STM 				},
	{"ldmccea",	STM,	C_CC | OP_STM | PREINDEX		},
	{"ldmccfd",	STM,	C_CC | OP_STM | INDEXUP			},
	{"ldmcced",	STM,	C_CC | OP_STM | PREINDEX | INDEXUP	},
	{"ldmccib",	STM,	C_CC | OP_STM | PREINDEX | INDEXUP	},
	{"ldmccia",	STM,	C_CC | OP_STM | INDEXUP			},
	{"ldmccdb",	STM,	C_CC | OP_STM | PREINDEX		},
	{"ldmccda",	STM,	C_CC | OP_STM				},

	{"ldmmifa",	STM,	C_MI | OP_STM 				},
	{"ldmmiea",	STM,	C_MI | OP_STM | PREINDEX		},
	{"ldmmifd",	STM,	C_MI | OP_STM | INDEXUP			},
	{"ldmmied",	STM,	C_MI | OP_STM | PREINDEX | INDEXUP	},
	{"ldmmiib",	STM,	C_MI | OP_STM | PREINDEX | INDEXUP	},
	{"ldmmiia",	STM,	C_MI | OP_STM | INDEXUP			},
	{"ldmmidb",	STM,	C_MI | OP_STM | PREINDEX		},
	{"ldmmida",	STM,	C_MI | OP_STM				},

	{"ldmplfa",	STM,	C_PL | OP_STM 				},
	{"ldmplea",	STM,	C_PL | OP_STM | PREINDEX		},
	{"ldmplfd",	STM,	C_PL | OP_STM | INDEXUP			},
	{"ldmpled",	STM,	C_PL | OP_STM | PREINDEX | INDEXUP	},
	{"ldmplib",	STM,	C_PL | OP_STM | PREINDEX | INDEXUP	},
	{"ldmplia",	STM,	C_PL | OP_STM | INDEXUP			},
	{"ldmpldb",	STM,	C_PL | OP_STM | PREINDEX		},
	{"ldmplda",	STM,	C_PL | OP_STM				},

	{"ldmvsfa",	STM,	C_VS | OP_STM 				},
	{"ldmvsea",	STM,	C_VS | OP_STM | PREINDEX		},
	{"ldmvsfd",	STM,	C_VS | OP_STM | INDEXUP			},
	{"ldmvsed",	STM,	C_VS | OP_STM | PREINDEX | INDEXUP	},
	{"ldmvsib",	STM,	C_VS | OP_STM | PREINDEX | INDEXUP	},
	{"ldmvsia",	STM,	C_VS | OP_STM | INDEXUP			},
	{"ldmvsdb",	STM,	C_VS | OP_STM | PREINDEX		},
	{"ldmvsda",	STM,	C_VS | OP_STM				},

	{"ldmvcfa",	STM,	C_VC | OP_STM 				},
	{"ldmvcea",	STM,	C_VC | OP_STM | PREINDEX		},
	{"ldmvcfd",	STM,	C_VC | OP_STM | INDEXUP			},
	{"ldmvced",	STM,	C_VC | OP_STM | PREINDEX | INDEXUP	},
	{"ldmvcib",	STM,	C_VC | OP_STM | PREINDEX | INDEXUP	},
	{"ldmvcia",	STM,	C_VC | OP_STM | INDEXUP			},
	{"ldmvcdb",	STM,	C_VC | OP_STM | PREINDEX		},
	{"ldmvcda",	STM,	C_VC | OP_STM				},

	{"ldmhifa",	STM,	C_HI | OP_STM 				},
	{"ldmhiea",	STM,	C_HI | OP_STM | PREINDEX		},
	{"ldmhifd",	STM,	C_HI | OP_STM | INDEXUP			},
	{"ldmhied",	STM,	C_HI | OP_STM | PREINDEX | INDEXUP	},
	{"ldmhiib",	STM,	C_HI | OP_STM | PREINDEX | INDEXUP	},
	{"ldmhiia",	STM,	C_HI | OP_STM | INDEXUP			},
	{"ldmhidb",	STM,	C_HI | OP_STM | PREINDEX		},
	{"ldmhida",	STM,	C_HI | OP_STM				},

	{"ldmlsfa",	STM,	C_LS | OP_STM 				},
	{"ldmlsea",	STM,	C_LS | OP_STM | PREINDEX		},
	{"ldmlsfd",	STM,	C_LS | OP_STM | INDEXUP			},
	{"ldmlsed",	STM,	C_LS | OP_STM | PREINDEX | INDEXUP	},
	{"ldmlsib",	STM,	C_LS | OP_STM | PREINDEX | INDEXUP	},
	{"ldmlsia",	STM,	C_LS | OP_STM | INDEXUP			},
	{"ldmlsdb",	STM,	C_LS | OP_STM | PREINDEX		},
	{"ldmlsda",	STM,	C_LS | OP_STM				},

	{"ldmgefa",	STM,	C_GE | OP_STM 				},
	{"ldmgeea",	STM,	C_GE | OP_STM | PREINDEX		},
	{"ldmgefd",	STM,	C_GE | OP_STM | INDEXUP			},
	{"ldmgeed",	STM,	C_GE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmgeib",	STM,	C_GE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmgeia",	STM,	C_GE | OP_STM | INDEXUP			},
	{"ldmgedb",	STM,	C_GE | OP_STM | PREINDEX		},
	{"ldmgeda",	STM,	C_GE | OP_STM				},

	{"ldmltfa",	STM,	C_LT | OP_STM 				},
	{"ldmltea",	STM,	C_LT | OP_STM | PREINDEX		},
	{"ldmltfd",	STM,	C_LT | OP_STM | INDEXUP			},
	{"ldmlted",	STM,	C_LT | OP_STM | PREINDEX | INDEXUP	},
	{"ldmltib",	STM,	C_LT | OP_STM | PREINDEX | INDEXUP	},
	{"ldmltia",	STM,	C_LT | OP_STM | INDEXUP			},
	{"ldmltdb",	STM,	C_LT | OP_STM | PREINDEX		},
	{"ldmltda",	STM,	C_LT | OP_STM				},

	{"ldmgtfa",	STM,	C_GT | OP_STM 				},
	{"ldmgtea",	STM,	C_GT | OP_STM | PREINDEX		},
	{"ldmgtfd",	STM,	C_GT | OP_STM | INDEXUP			},
	{"ldmgted",	STM,	C_GT | OP_STM | PREINDEX | INDEXUP	},
	{"ldmgtib",	STM,	C_GT | OP_STM | PREINDEX | INDEXUP	},
	{"ldmgtia",	STM,	C_GT | OP_STM | INDEXUP			},
	{"ldmgtdb",	STM,	C_GT | OP_STM | PREINDEX		},
	{"ldmgtda",	STM,	C_GT | OP_STM				},

	{"ldmlefa",	STM,	C_LE | OP_STM 				},
	{"ldmleea",	STM,	C_LE | OP_STM | PREINDEX		},
	{"ldmlefd",	STM,	C_LE | OP_STM | INDEXUP			},
	{"ldmleed",	STM,	C_LE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmleib",	STM,	C_LE | OP_STM | PREINDEX | INDEXUP	},
	{"ldmleia",	STM,	C_LE | OP_STM | INDEXUP			},
	{"ldmledb",	STM,	C_LE | OP_STM | PREINDEX		},
	{"ldmleda",	STM,	C_LE | OP_STM				},

	{"ldmalfa",	STM,	C_AL | OP_STM 				},
	{"ldmalea",	STM,	C_AL | OP_STM | PREINDEX		},
	{"ldmalfd",	STM,	C_AL | OP_STM | INDEXUP			},
	{"ldmaled",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"ldmalib",	STM,	C_AL | OP_STM | PREINDEX | INDEXUP	},
	{"ldmalia",	STM,	C_AL | OP_STM | INDEXUP			},
	{"ldmaldb",	STM,	C_AL | OP_STM | PREINDEX		},
	{"ldmalda",	STM,	C_AL | OP_STM				},

	{"ldmnvfa",	STM,	C_NV | OP_STM 				},
	{"ldmnvea",	STM,	C_NV | OP_STM | PREINDEX		},
	{"ldmnvfd",	STM,	C_NV | OP_STM | INDEXUP			},
	{"ldmnved",	STM,	C_NV | OP_STM | PREINDEX | INDEXUP	},
	{"ldmnvib",	STM,	C_NV | OP_STM | PREINDEX | INDEXUP	},
	{"ldmnvia",	STM,	C_NV | OP_STM | INDEXUP			},
	{"ldmnvdb",	STM,	C_NV | OP_STM | PREINDEX		},
	{"ldmnvda",	STM,	C_NV | OP_STM				},
d1517 1
@


1.1
log
@Initial revision
@
text
@d9 6
a14 1
 * RcsId: $Id$
d16 2
d663 1
d739 2
a740 2
	{"strt",	STR,	C_AL | OP_STR | SDT_W		},
	{"strbt",	STR,	C_AL | OP_STR | SDT_W | SDT_B	},
d743 2
a744 2
	{"streqt",	STR,	C_EQ | OP_STR | SDT_W		},
	{"streqbt",	STR,	C_EQ | OP_STR | SDT_W | SDT_B	},
d747 2
a748 2
	{"strnet",	STR,	C_NE | OP_STR | SDT_W		},
	{"strnebt",	STR,	C_NE | OP_STR | SDT_W | SDT_B	},
d751 2
a752 2
	{"strcst",	STR,	C_CS | OP_STR | SDT_W		},
	{"strcsbt",	STR,	C_CS | OP_STR | SDT_W | SDT_B	},
d755 2
a756 2
	{"strcct",	STR,	C_CC | OP_STR | SDT_W		},
	{"strccbt",	STR,	C_CC | OP_STR | SDT_W | SDT_B	},
d759 2
a760 2
	{"strmit",	STR,	C_MI | OP_STR | SDT_W		},
	{"strmibt",	STR,	C_MI | OP_STR | SDT_W | SDT_B	},
d763 2
a764 2
	{"strplt",	STR,	C_PL | OP_STR | SDT_W		},
	{"strplbt",	STR,	C_PL | OP_STR | SDT_W | SDT_B	},
d767 2
a768 2
	{"strvst",	STR,	C_VS | OP_STR | SDT_W		},
	{"strvsbt",	STR,	C_VS | OP_STR | SDT_W | SDT_B	},
d771 2
a772 2
	{"strvct",	STR,	C_VC | OP_STR | SDT_W		},
	{"strvcbt",	STR,	C_VC | OP_STR | SDT_W | SDT_B	},
d775 2
a776 2
	{"strhit",	STR,	C_HI | OP_STR | SDT_W		},
	{"strhibt",	STR,	C_HI | OP_STR | SDT_W | SDT_B	},
d779 2
a780 2
	{"strlst",	STR,	C_LS | OP_STR | SDT_W		},
	{"strlsbt",	STR,	C_LS | OP_STR | SDT_W | SDT_B	},
d783 2
a784 2
	{"strget",	STR,	C_GE | OP_STR | SDT_W		},
	{"strgebt",	STR,	C_GE | OP_STR | SDT_W | SDT_B	},
d787 2
a788 2
	{"strltt",	STR,	C_LT | OP_STR | SDT_W		},
	{"strltbt",	STR,	C_LT | OP_STR | SDT_W | SDT_B	},
d791 2
a792 2
	{"strgtt",	STR,	C_GT | OP_STR | SDT_W		},
	{"strgtbt",	STR,	C_GT | OP_STR | SDT_W | SDT_B	},
d795 2
a796 2
	{"strlet",	STR,	C_LE | OP_STR | SDT_W		},
	{"strlebt",	STR,	C_LE | OP_STR | SDT_W | SDT_B	},
d799 2
a800 2
	{"stralt",	STR,	C_AL | OP_STR | SDT_W		},
	{"stralbt",	STR,	C_AL | OP_STR | SDT_W | SDT_B	},
d803 2
a804 2
	{"strnvt",	STR,	C_NV | OP_STR | SDT_W		},
	{"strnvbt",	STR,	C_NV | OP_STR | SDT_W | SDT_B	},
d810 2
a811 2
	{"ldrt",	LDR,	C_AL | OP_LDR | SDT_W		},
	{"ldrbt",	LDR,	C_AL | OP_LDR | SDT_W | SDT_B	},
d814 2
a815 2
	{"ldreqt",	LDR,	C_EQ | OP_LDR | SDT_W		},
	{"ldreqbt",	LDR,	C_EQ | OP_LDR | SDT_W | SDT_B	},
d818 2
a819 2
	{"ldrnet",	LDR,	C_NE | OP_LDR | SDT_W		},
	{"ldrnebt",	LDR,	C_NE | OP_LDR | SDT_W | SDT_B	},
d822 2
a823 2
	{"ldrcst",	LDR,	C_CS | OP_LDR | SDT_W		},
	{"ldrcsbt",	LDR,	C_CS | OP_LDR | SDT_W | SDT_B	},
d826 2
a827 2
	{"ldrcct",	LDR,	C_CC | OP_LDR | SDT_W		},
	{"ldrccbt",	LDR,	C_CC | OP_LDR | SDT_W | SDT_B	},
d830 2
a831 2
	{"ldrmit",	LDR,	C_MI | OP_LDR | SDT_W		},
	{"ldrmibt",	LDR,	C_MI | OP_LDR | SDT_W | SDT_B	},
d834 2
a835 2
	{"ldrplt",	LDR,	C_PL | OP_LDR | SDT_W		},
	{"ldrplbt",	LDR,	C_PL | OP_LDR | SDT_W | SDT_B	},
d838 2
a839 2
	{"ldrvst",	LDR,	C_VS | OP_LDR | SDT_W		},
	{"ldrvsbt",	LDR,	C_VS | OP_LDR | SDT_W | SDT_B	},
d842 2
a843 2
	{"ldrvct",	LDR,	C_VC | OP_LDR | SDT_W		},
	{"ldrvcbt",	LDR,	C_VC | OP_LDR | SDT_W | SDT_B	},
d846 2
a847 2
	{"ldrhit",	LDR,	C_HI | OP_LDR | SDT_W		},
	{"ldrhibt",	LDR,	C_HI | OP_LDR | SDT_W | SDT_B	},
d850 2
a851 2
	{"ldrlst",	LDR,	C_LS | OP_LDR | SDT_W		},
	{"ldrlsbt",	LDR,	C_LS | OP_LDR | SDT_W | SDT_B	},
d854 2
a855 2
	{"ldrget",	LDR,	C_GE | OP_LDR | SDT_W		},
	{"ldrgebt",	LDR,	C_GE | OP_LDR | SDT_W | SDT_B	},
d858 2
a859 2
	{"ldrltt",	LDR,	C_LT | OP_LDR | SDT_W		},
	{"ldrltbt",	LDR,	C_LT | OP_LDR | SDT_W | SDT_B	},
d862 2
a863 2
	{"ldrgtt",	LDR,	C_GT | OP_LDR | SDT_W		},
	{"ldrgtbt",	LDR,	C_GT | OP_LDR | SDT_W | SDT_B	},
d866 2
a867 2
	{"ldrlet",	LDR,	C_LE | OP_LDR | SDT_W		},
	{"ldrlebt",	LDR,	C_LE | OP_LDR | SDT_W | SDT_B	},
d870 2
a871 2
	{"ldralt",	LDR,	C_AL | OP_LDR | SDT_W		},
	{"ldralbt",	LDR,	C_AL | OP_LDR | SDT_W | SDT_B	},
d874 2
a875 2
	{"ldrnvt",	LDR,	C_NV | OP_LDR | SDT_W		},
	{"ldrnvbt",	LDR,	C_NV | OP_LDR | SDT_W | SDT_B	},
d882 152
a1033 152
	{"stmfa",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"stmea",	STM,	C_AL | OP_STM | BDT_U		},
	{"stmfd",	STM,	C_AL | OP_STM | BDT_P		},
	{"stmed",	STM,	C_AL | OP_STM 			},
	{"stmib",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"stmia",	STM,	C_AL | OP_STM | BDT_U		},
	{"stmdb",	STM,	C_AL | OP_STM | BDT_P		},
	{"stmda",	STM,	C_AL | OP_STM			},

	{"stmeqfa",	STM,	C_EQ | OP_STM | BDT_P | BDT_U	},
	{"stmeqea",	STM,	C_EQ | OP_STM | BDT_U		},
	{"stmeqfd",	STM,	C_EQ | OP_STM | BDT_P		},
	{"stmeqed",	STM,	C_EQ | OP_STM 			},
	{"stmeqib",	STM,	C_EQ | OP_STM | BDT_P | BDT_U	},
	{"stmeqia",	STM,	C_EQ | OP_STM | BDT_U		},
	{"stmeqdb",	STM,	C_EQ | OP_STM | BDT_P		},
	{"stmeqda",	STM,	C_EQ | OP_STM			},

	{"stmnefa",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"stmneea",	STM,	C_NE | OP_STM | BDT_U		},
	{"stmnefd",	STM,	C_NE | OP_STM | BDT_P		},
	{"stmneed",	STM,	C_NE | OP_STM 			},
	{"stmneib",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"stmneia",	STM,	C_NE | OP_STM | BDT_U		},
	{"stmnedb",	STM,	C_NE | OP_STM | BDT_P		},
	{"stmneda",	STM,	C_NE | OP_STM			},

	{"stmnefa",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"stmneea",	STM,	C_NE | OP_STM | BDT_U		},
	{"stmnefd",	STM,	C_NE | OP_STM | BDT_P		},
	{"stmneed",	STM,	C_NE | OP_STM 			},
	{"stmneib",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"stmneia",	STM,	C_NE | OP_STM | BDT_U		},
	{"stmnedb",	STM,	C_NE | OP_STM | BDT_P		},
	{"stmneda",	STM,	C_NE | OP_STM			},

	{"stmccfa",	STM,	C_CC | OP_STM | BDT_P | BDT_U	},
	{"stmccea",	STM,	C_CC | OP_STM | BDT_U		},
	{"stmccfd",	STM,	C_CC | OP_STM | BDT_P		},
	{"stmcced",	STM,	C_CC | OP_STM 			},
	{"stmccib",	STM,	C_CC | OP_STM | BDT_P | BDT_U	},
	{"stmccia",	STM,	C_CC | OP_STM | BDT_U		},
	{"stmccdb",	STM,	C_CC | OP_STM | BDT_P		},
	{"stmccda",	STM,	C_CC | OP_STM			},

	{"stmmifa",	STM,	C_MI | OP_STM | BDT_P | BDT_U	},
	{"stmmiea",	STM,	C_MI | OP_STM | BDT_U		},
	{"stmmifd",	STM,	C_MI | OP_STM | BDT_P		},
	{"stmmied",	STM,	C_MI | OP_STM 			},
	{"stmmiib",	STM,	C_MI | OP_STM | BDT_P | BDT_U	},
	{"stmmiia",	STM,	C_MI | OP_STM | BDT_U		},
	{"stmmidb",	STM,	C_MI | OP_STM | BDT_P		},
	{"stmmida",	STM,	C_MI | OP_STM			},

	{"stmplfa",	STM,	C_PL | OP_STM | BDT_P | BDT_U	},
	{"stmplea",	STM,	C_PL | OP_STM | BDT_U		},
	{"stmplfd",	STM,	C_PL | OP_STM | BDT_P		},
	{"stmpled",	STM,	C_PL | OP_STM 			},
	{"stmplib",	STM,	C_PL | OP_STM | BDT_P | BDT_U	},
	{"stmplia",	STM,	C_PL | OP_STM | BDT_U		},
	{"stmpldb",	STM,	C_PL | OP_STM | BDT_P		},
	{"stmplda",	STM,	C_PL | OP_STM			},

	{"stmvsfa",	STM,	C_VS | OP_STM | BDT_P | BDT_U	},
	{"stmvsea",	STM,	C_VS | OP_STM | BDT_U		},
	{"stmvsfd",	STM,	C_VS | OP_STM | BDT_P		},
	{"stmvsed",	STM,	C_VS | OP_STM 			},
	{"stmvsib",	STM,	C_VS | OP_STM | BDT_P | BDT_U	},
	{"stmvsia",	STM,	C_VS | OP_STM | BDT_U		},
	{"stmvsdb",	STM,	C_VS | OP_STM | BDT_P		},
	{"stmvsda",	STM,	C_VS | OP_STM			},

	{"stmvcfa",	STM,	C_VC | OP_STM | BDT_P | BDT_U	},
	{"stmvcea",	STM,	C_VC | OP_STM | BDT_U		},
	{"stmvcfd",	STM,	C_VC | OP_STM | BDT_P		},
	{"stmvced",	STM,	C_VC | OP_STM 			},
	{"stmvcib",	STM,	C_VC | OP_STM | BDT_P | BDT_U	},
	{"stmvcia",	STM,	C_VC | OP_STM | BDT_U		},
	{"stmvcdb",	STM,	C_VC | OP_STM | BDT_P		},
	{"stmvcda",	STM,	C_VC | OP_STM			},

	{"stmhifa",	STM,	C_HI | OP_STM | BDT_P | BDT_U	},
	{"stmhiea",	STM,	C_HI | OP_STM | BDT_U		},
	{"stmhifd",	STM,	C_HI | OP_STM | BDT_P		},
	{"stmhied",	STM,	C_HI | OP_STM 			},
	{"stmhiib",	STM,	C_HI | OP_STM | BDT_P | BDT_U	},
	{"stmhiia",	STM,	C_HI | OP_STM | BDT_U		},
	{"stmhidb",	STM,	C_HI | OP_STM | BDT_P		},
	{"stmhida",	STM,	C_HI | OP_STM			},

	{"stmlsfa",	STM,	C_LS | OP_STM | BDT_P | BDT_U	},
	{"stmlsea",	STM,	C_LS | OP_STM | BDT_U		},
	{"stmlsfd",	STM,	C_LS | OP_STM | BDT_P		},
	{"stmlsed",	STM,	C_LS | OP_STM 			},
	{"stmlsib",	STM,	C_LS | OP_STM | BDT_P | BDT_U	},
	{"stmlsia",	STM,	C_LS | OP_STM | BDT_U		},
	{"stmlsdb",	STM,	C_LS | OP_STM | BDT_P		},
	{"stmlsda",	STM,	C_LS | OP_STM			},

	{"stmgefa",	STM,	C_GE | OP_STM | BDT_P | BDT_U	},
	{"stmgeea",	STM,	C_GE | OP_STM | BDT_U		},
	{"stmgefd",	STM,	C_GE | OP_STM | BDT_P		},
	{"stmgeed",	STM,	C_GE | OP_STM 			},
	{"stmgeib",	STM,	C_GE | OP_STM | BDT_P | BDT_U	},
	{"stmgeia",	STM,	C_GE | OP_STM | BDT_U		},
	{"stmgedb",	STM,	C_GE | OP_STM | BDT_P		},
	{"stmgeda",	STM,	C_GE | OP_STM			},

	{"stmltfa",	STM,	C_LT | OP_STM | BDT_P | BDT_U	},
	{"stmltea",	STM,	C_LT | OP_STM | BDT_U		},
	{"stmltfd",	STM,	C_LT | OP_STM | BDT_P		},
	{"stmlted",	STM,	C_LT | OP_STM 			},
	{"stmltib",	STM,	C_LT | OP_STM | BDT_P | BDT_U	},
	{"stmltia",	STM,	C_LT | OP_STM | BDT_U		},
	{"stmltdb",	STM,	C_LT | OP_STM | BDT_P		},
	{"stmltda",	STM,	C_LT | OP_STM			},

	{"stmgtfa",	STM,	C_GT | OP_STM | BDT_P | BDT_U	},
	{"stmgtea",	STM,	C_GT | OP_STM | BDT_U		},
	{"stmgtfd",	STM,	C_GT | OP_STM | BDT_P		},
	{"stmgted",	STM,	C_GT | OP_STM 			},
	{"stmgtib",	STM,	C_GT | OP_STM | BDT_P | BDT_U	},
	{"stmgtia",	STM,	C_GT | OP_STM | BDT_U		},
	{"stmgtdb",	STM,	C_GT | OP_STM | BDT_P		},
	{"stmgtda",	STM,	C_GT | OP_STM			},

	{"stmlefa",	STM,	C_LE | OP_STM | BDT_P | BDT_U	},
	{"stmleea",	STM,	C_LE | OP_STM | BDT_U		},
	{"stmlefd",	STM,	C_LE | OP_STM | BDT_P		},
	{"stmleed",	STM,	C_LE | OP_STM 			},
	{"stmleib",	STM,	C_LE | OP_STM | BDT_P | BDT_U	},
	{"stmleia",	STM,	C_LE | OP_STM | BDT_U		},
	{"stmledb",	STM,	C_LE | OP_STM | BDT_P		},
	{"stmleda",	STM,	C_LE | OP_STM			},

	{"stmalfa",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"stmalea",	STM,	C_AL | OP_STM | BDT_U		},
	{"stmalfd",	STM,	C_AL | OP_STM | BDT_P		},
	{"stmaled",	STM,	C_AL | OP_STM 			},
	{"stmalib",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"stmalia",	STM,	C_AL | OP_STM | BDT_U		},
	{"stmaldb",	STM,	C_AL | OP_STM | BDT_P		},
	{"stmalda",	STM,	C_AL | OP_STM			},

	{"stmnvfa",	STM,	C_NV | OP_STM | BDT_P | BDT_U	},
	{"stmnvea",	STM,	C_NV | OP_STM | BDT_U		},
	{"stmnvfd",	STM,	C_NV | OP_STM | BDT_P		},
	{"stmnved",	STM,	C_NV | OP_STM 			},
	{"stmnvib",	STM,	C_NV | OP_STM | BDT_P | BDT_U	},
	{"stmnvia",	STM,	C_NV | OP_STM | BDT_U		},
	{"stmnvdb",	STM,	C_NV | OP_STM | BDT_P		},
	{"stmnvda",	STM,	C_NV | OP_STM			},
d1036 152
a1187 152
	{"ldmfa",	STM,	C_AL | OP_STM 			},
	{"ldmea",	STM,	C_AL | OP_STM | BDT_P		},
	{"ldmfd",	STM,	C_AL | OP_STM | BDT_U		},
	{"ldmed",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"ldmib",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"ldmia",	STM,	C_AL | OP_STM | BDT_U		},
	{"ldmdb",	STM,	C_AL | OP_STM | BDT_P		},
	{"ldmda",	STM,	C_AL | OP_STM			},

	{"ldmeqfa",	STM,	C_EQ | OP_STM 			},
	{"ldmeqea",	STM,	C_EQ | OP_STM | BDT_P		},
	{"ldmeqfd",	STM,	C_EQ | OP_STM | BDT_U		},
	{"ldmeqed",	STM,	C_EQ | OP_STM | BDT_P | BDT_U	},
	{"ldmeqib",	STM,	C_EQ | OP_STM | BDT_P | BDT_U	},
	{"ldmeqia",	STM,	C_EQ | OP_STM | BDT_U		},
	{"ldmeqdb",	STM,	C_EQ | OP_STM | BDT_P		},
	{"ldmeqda",	STM,	C_EQ | OP_STM			},

	{"ldmnefa",	STM,	C_NE | OP_STM 			},
	{"ldmneea",	STM,	C_NE | OP_STM | BDT_P		},
	{"ldmnefd",	STM,	C_NE | OP_STM | BDT_U		},
	{"ldmneed",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"ldmneib",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"ldmneia",	STM,	C_NE | OP_STM | BDT_U		},
	{"ldmnedb",	STM,	C_NE | OP_STM | BDT_P		},
	{"ldmneda",	STM,	C_NE | OP_STM			},

	{"ldmnefa",	STM,	C_NE | OP_STM 			},
	{"ldmneea",	STM,	C_NE | OP_STM | BDT_P		},
	{"ldmnefd",	STM,	C_NE | OP_STM | BDT_U		},
	{"ldmneed",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"ldmneib",	STM,	C_NE | OP_STM | BDT_P | BDT_U	},
	{"ldmneia",	STM,	C_NE | OP_STM | BDT_U		},
	{"ldmnedb",	STM,	C_NE | OP_STM | BDT_P		},
	{"ldmneda",	STM,	C_NE | OP_STM			},

	{"ldmccfa",	STM,	C_CC | OP_STM 			},
	{"ldmccea",	STM,	C_CC | OP_STM | BDT_P		},
	{"ldmccfd",	STM,	C_CC | OP_STM | BDT_U		},
	{"ldmcced",	STM,	C_CC | OP_STM | BDT_P | BDT_U	},
	{"ldmccib",	STM,	C_CC | OP_STM | BDT_P | BDT_U	},
	{"ldmccia",	STM,	C_CC | OP_STM | BDT_U		},
	{"ldmccdb",	STM,	C_CC | OP_STM | BDT_P		},
	{"ldmccda",	STM,	C_CC | OP_STM			},

	{"ldmmifa",	STM,	C_MI | OP_STM 			},
	{"ldmmiea",	STM,	C_MI | OP_STM | BDT_P		},
	{"ldmmifd",	STM,	C_MI | OP_STM | BDT_U		},
	{"ldmmied",	STM,	C_MI | OP_STM | BDT_P | BDT_U	},
	{"ldmmiib",	STM,	C_MI | OP_STM | BDT_P | BDT_U	},
	{"ldmmiia",	STM,	C_MI | OP_STM | BDT_U		},
	{"ldmmidb",	STM,	C_MI | OP_STM | BDT_P		},
	{"ldmmida",	STM,	C_MI | OP_STM			},

	{"ldmplfa",	STM,	C_PL | OP_STM 			},
	{"ldmplea",	STM,	C_PL | OP_STM | BDT_P		},
	{"ldmplfd",	STM,	C_PL | OP_STM | BDT_U		},
	{"ldmpled",	STM,	C_PL | OP_STM | BDT_P | BDT_U	},
	{"ldmplib",	STM,	C_PL | OP_STM | BDT_P | BDT_U	},
	{"ldmplia",	STM,	C_PL | OP_STM | BDT_U		},
	{"ldmpldb",	STM,	C_PL | OP_STM | BDT_P		},
	{"ldmplda",	STM,	C_PL | OP_STM			},

	{"ldmvsfa",	STM,	C_VS | OP_STM 			},
	{"ldmvsea",	STM,	C_VS | OP_STM | BDT_P		},
	{"ldmvsfd",	STM,	C_VS | OP_STM | BDT_U		},
	{"ldmvsed",	STM,	C_VS | OP_STM | BDT_P | BDT_U	},
	{"ldmvsib",	STM,	C_VS | OP_STM | BDT_P | BDT_U	},
	{"ldmvsia",	STM,	C_VS | OP_STM | BDT_U		},
	{"ldmvsdb",	STM,	C_VS | OP_STM | BDT_P		},
	{"ldmvsda",	STM,	C_VS | OP_STM			},

	{"ldmvcfa",	STM,	C_VC | OP_STM 			},
	{"ldmvcea",	STM,	C_VC | OP_STM | BDT_P		},
	{"ldmvcfd",	STM,	C_VC | OP_STM | BDT_U		},
	{"ldmvced",	STM,	C_VC | OP_STM | BDT_P | BDT_U	},
	{"ldmvcib",	STM,	C_VC | OP_STM | BDT_P | BDT_U	},
	{"ldmvcia",	STM,	C_VC | OP_STM | BDT_U		},
	{"ldmvcdb",	STM,	C_VC | OP_STM | BDT_P		},
	{"ldmvcda",	STM,	C_VC | OP_STM			},

	{"ldmhifa",	STM,	C_HI | OP_STM 			},
	{"ldmhiea",	STM,	C_HI | OP_STM | BDT_P		},
	{"ldmhifd",	STM,	C_HI | OP_STM | BDT_U		},
	{"ldmhied",	STM,	C_HI | OP_STM | BDT_P | BDT_U	},
	{"ldmhiib",	STM,	C_HI | OP_STM | BDT_P | BDT_U	},
	{"ldmhiia",	STM,	C_HI | OP_STM | BDT_U		},
	{"ldmhidb",	STM,	C_HI | OP_STM | BDT_P		},
	{"ldmhida",	STM,	C_HI | OP_STM			},

	{"ldmlsfa",	STM,	C_LS | OP_STM 			},
	{"ldmlsea",	STM,	C_LS | OP_STM | BDT_P		},
	{"ldmlsfd",	STM,	C_LS | OP_STM | BDT_U		},
	{"ldmlsed",	STM,	C_LS | OP_STM | BDT_P | BDT_U	},
	{"ldmlsib",	STM,	C_LS | OP_STM | BDT_P | BDT_U	},
	{"ldmlsia",	STM,	C_LS | OP_STM | BDT_U		},
	{"ldmlsdb",	STM,	C_LS | OP_STM | BDT_P		},
	{"ldmlsda",	STM,	C_LS | OP_STM			},

	{"ldmgefa",	STM,	C_GE | OP_STM 			},
	{"ldmgeea",	STM,	C_GE | OP_STM | BDT_P		},
	{"ldmgefd",	STM,	C_GE | OP_STM | BDT_U		},
	{"ldmgeed",	STM,	C_GE | OP_STM | BDT_P | BDT_U	},
	{"ldmgeib",	STM,	C_GE | OP_STM | BDT_P | BDT_U	},
	{"ldmgeia",	STM,	C_GE | OP_STM | BDT_U		},
	{"ldmgedb",	STM,	C_GE | OP_STM | BDT_P		},
	{"ldmgeda",	STM,	C_GE | OP_STM			},

	{"ldmltfa",	STM,	C_LT | OP_STM 			},
	{"ldmltea",	STM,	C_LT | OP_STM | BDT_P		},
	{"ldmltfd",	STM,	C_LT | OP_STM | BDT_U		},
	{"ldmlted",	STM,	C_LT | OP_STM | BDT_P | BDT_U	},
	{"ldmltib",	STM,	C_LT | OP_STM | BDT_P | BDT_U	},
	{"ldmltia",	STM,	C_LT | OP_STM | BDT_U		},
	{"ldmltdb",	STM,	C_LT | OP_STM | BDT_P		},
	{"ldmltda",	STM,	C_LT | OP_STM			},

	{"ldmgtfa",	STM,	C_GT | OP_STM 			},
	{"ldmgtea",	STM,	C_GT | OP_STM | BDT_P		},
	{"ldmgtfd",	STM,	C_GT | OP_STM | BDT_U		},
	{"ldmgted",	STM,	C_GT | OP_STM | BDT_P | BDT_U	},
	{"ldmgtib",	STM,	C_GT | OP_STM | BDT_P | BDT_U	},
	{"ldmgtia",	STM,	C_GT | OP_STM | BDT_U		},
	{"ldmgtdb",	STM,	C_GT | OP_STM | BDT_P		},
	{"ldmgtda",	STM,	C_GT | OP_STM			},

	{"ldmlefa",	STM,	C_LE | OP_STM 			},
	{"ldmleea",	STM,	C_LE | OP_STM | BDT_P		},
	{"ldmlefd",	STM,	C_LE | OP_STM | BDT_U		},
	{"ldmleed",	STM,	C_LE | OP_STM | BDT_P | BDT_U	},
	{"ldmleib",	STM,	C_LE | OP_STM | BDT_P | BDT_U	},
	{"ldmleia",	STM,	C_LE | OP_STM | BDT_U		},
	{"ldmledb",	STM,	C_LE | OP_STM | BDT_P		},
	{"ldmleda",	STM,	C_LE | OP_STM			},

	{"ldmalfa",	STM,	C_AL | OP_STM 			},
	{"ldmalea",	STM,	C_AL | OP_STM | BDT_P		},
	{"ldmalfd",	STM,	C_AL | OP_STM | BDT_U		},
	{"ldmaled",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"ldmalib",	STM,	C_AL | OP_STM | BDT_P | BDT_U	},
	{"ldmalia",	STM,	C_AL | OP_STM | BDT_U		},
	{"ldmaldb",	STM,	C_AL | OP_STM | BDT_P		},
	{"ldmalda",	STM,	C_AL | OP_STM			},

	{"ldmnvfa",	STM,	C_NV | OP_STM 			},
	{"ldmnvea",	STM,	C_NV | OP_STM | BDT_P		},
	{"ldmnvfd",	STM,	C_NV | OP_STM | BDT_U		},
	{"ldmnved",	STM,	C_NV | OP_STM | BDT_P | BDT_U	},
	{"ldmnvib",	STM,	C_NV | OP_STM | BDT_P | BDT_U	},
	{"ldmnvia",	STM,	C_NV | OP_STM | BDT_U		},
	{"ldmnvdb",	STM,	C_NV | OP_STM | BDT_P		},
	{"ldmnvda",	STM,	C_NV | OP_STM			},
d1192 1
d1212 251
d1518 18
d1537 1
a1537 1
	/* Add in ARM600 names? */
d1560 1
@
