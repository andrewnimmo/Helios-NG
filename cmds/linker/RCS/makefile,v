head	1.18;
access;
symbols
	Helios_1_3_1:1.12
	Helios_C40_1_3_Official_Release:1.10
	Alenia_release:1.10
	C40_Field_Test_2:1.10
	C40_Field_Test_R1:1.8;
locks; strict;
comment	@# @;


1.18
date	94.01.13.16.00.00;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	93.12.20.11.01.57;	author nickc;	state Exp;
branches;
next	1.16;

1.16
date	93.12.20.10.59.28;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	93.11.18.16.36.32;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	93.11.18.14.48.19;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	93.11.17.17.19.11;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	93.06.23.09.58.39;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	93.06.21.08.41.00;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	92.09.16.11.19.28;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	92.07.13.09.00.23;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.06.29.17.09.22;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	92.01.28.13.11.49;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	91.12.02.15.26.33;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.10.09.11.13.25;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.03.03.23.50.59;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.10.22.18.48.46;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.10.22.16.39.31;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.10.22.15.43.49;	author paul;	state Exp;
branches;
next	;


desc
@linker makefile
@


1.18
log
@Added paths for externally sourced objects.
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Generic Helios linker
#
# File: /HSRC/cmds/linker/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.17 1993/12/20 11:01:57 nickc Exp nickc $
#		(C) Copyright 1990 - 1994 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = SUN4
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

.PHONEY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/linker

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONEY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HVPATH):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
ifeq ($(HPROC),ARM)
  TARGETS = ld imdump objdump disas
  NCFLAGS := $(NCFLAGS) -I$(EXTINCLUDE)
else
  ifeq ($(HPROC),C40)
    TARGETS = ld imdump objdump disas
  else
    ifeq ($(HPROC),M68K)
      TARGETS = ld imdump objdump disas
    else
      TARGETS = ld imdump objdump
    endif
  endif
endif

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(BIN)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

OBJECTS		= sym.o objed.o module.o mem.o scancode.o link.o readfile.o \
		vm.o genimage.o imdump.o objdump.o stubs.o \
		armdisas.o ARMshape.o 68kdisas.o \
		c40disas.o c40objdis.o 

# C source files
SOURCES.c	= sym.c objed.c module.c mem.c scancode.c link.c readfile.c \
		vm.c genimage.c hash.c objdump.c imdump.c stubs.c \
		armdisas.c ARMshape.c 68kdisas.c \
		c40disas.c c40objdis.c converter.c 

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= link.h vm.h ARMshape.h c40target.h c40ops.h converter.h \
		endian.h

# AMPP macro files
HEADERS.m	=

# Any other source files - is the queue stuff still required?
SOURCES.odd	= makefile queue.c queue.nonansi.h


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
else
  NCFLAGS := $(NCFLAGS)
endif

#-----------------------------------------------------------------------------
# Linker

LINK.OBJECTS	= sym.o objed.o module.o mem.o scancode.o link.o readfile.o \
		vm.o genimage.o stubs.o 

$(LINK.OBJECTS) : link.h vm.h 
vm.o : vm.h
link.o  : hash.c

# native linker
ld :  $(CSTART) $(LINK.OBJECTS)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h8000 $^

#-----------------------------------------------------------------------------
# Linker utility programs

ifeq ($(HPROC),ARM)	# should be moved to ARM directory
  # Object dump utility
  objdump : $(CSTART) objdump.o ARMshape.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

  # ARM disassembler
  disas : $(CSTART) armdisas.o ARMshape.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
else
  ifeq ($(HPROC),C40)	# should be moved to C40 directory
    # Object dump utility
    objdump : $(CSTART) objdump.o c40objdis.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

    # 'C40 disassembler
    c40disas.o : c40target.h c40ops.h

    disas : $(CSTART) c40disas.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
  else
    ifeq ($(HPROC),M68K)	# should be moved to M68K directory
      # Object dump utility
      objdump : $(CSTART) objdump.o 68kobjdis.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

      # 68K disassembler
      68kdisas.o : 68ktarget.h 68kops.h

      disas : $(CSTART) 68kdisas.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
    else
      # Object dump utility
      objdump : $(CSTART) objdump.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
    endif
  endif
endif


# Image dump utility
imdump : $(CSTART) imdump.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.17
log
@added ARM source files
@
text
@d13 1
a13 1
# RcsId: $Id: makefile,v 1.16 1993/12/20 10:59:28 nickc Exp nickc $
d84 1
d132 2
a133 2
HEADERS.c	= link.h vm.h ARMshape.h c40target.h c40ops.h converter.h aof.h \
		endian.h chunkfmt.h chunkfls.h
@


1.16
log
@minor cosmetic changes
@
text
@d13 1
a13 1
# RcsId: $Id: makefile,v 1.15 1993/11/18 16:36:32 nickc Exp nickc $
d119 1
a119 1
		c40disas.o c40objdis.o
d125 1
a125 1
		c40disas.c c40objdis.c 
d131 2
a132 1
HEADERS.c	= link.h vm.h ARMshape.h c40target.h c40ops.h 
@


1.15
log
@oops - fixed typo in previous delta
@
text
@d13 2
a14 3
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.14 1993/11/18 14:48:19 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
d154 1
a154 1
		vm.o genimage.o stubs.o
@


1.14
log
@fixed SOURCES declarations
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.13 1993/11/17 17:19:11 nickc Exp nickc $
d126 1
a126 1
		c40disas.c c40objdis.c queue.c
d132 1
a132 1
HEADERS.c	= link.h vm.h ARMshape.h c40target.h c40ops.h queue.nonansi.h
@


1.13
log
@updated SOURCES declarations to match real world
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.12 1993/06/23 09:58:39 paul Exp nickc $
d126 1
a126 1
		c40disas.c c40objdis.c
d132 1
a132 1
HEADERS.c	= link.h vm.h vm.h ARMshape.h c40target.h c40ops.h 
@


1.12
log
@standardised 68k name
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 1993/06/21 08:41:00 nickc Exp paul $
d119 1
a119 1
		armdisas.o ARMshape.o 68kdisas.o 68kobjdis.o \
d125 1
a125 1
		armdisas.c ARMshape.c 68kdisas.c 68kobjdis.c \
d132 1
a132 1
HEADERS.c	= link.h vm.h vm.h ARMshape.h c40target.h c40ops.h 68ktarget.h 68kops.h
@


1.11
log
@added support for biulding 68K versions of the programs
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1992/09/16 11:19:28 paul Exp nickc $
d89 1
a89 1
    ifeq ($(HPROC),68K)
d188 1
a188 1
    ifeq ($(HPROC),68K)	# should be moved to 68K directory
@


1.10
log
@fixed for std name
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 1992/07/13 09:00:23 nickc Exp paul $
d89 5
a93 1
    TARGETS = ld imdump objdump
d119 1
a119 1
		armdisas.o ARMshape.o \
d125 1
a125 1
		armdisas.c ARMshape.c \
d132 1
a132 1
HEADERS.c	= link.h vm.h vm.h ARMshape.h c40target.h c40ops.h
d188 15
a202 3
    # Object dump utility
    objdump : $(CSTART) objdump.o
  	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
@


1.9
log
@added stubs.c, the source file for creating new style stubs
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1992/06/29 17:09:22 nickc Exp nickc $
d84 1
a84 1
  TARGETS = ld imdump objdump armdisas
d87 1
a87 1
    TARGETS = ld imdump objdump c40disas
d170 1
a170 1
  armdisas : $(CSTART) armdisas.o ARMshape.o
d181 1
a181 1
    c40disas : $(CSTART) c40disas.o
@


1.8
log
@fixed for remote source compilation
,
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/01/28 13:11:49 nickc Exp $
d114 1
a114 1
		vm.o genimage.o imdump.o objdump.o \
d120 1
a120 1
		vm.c genimage.c hash.c objdump.c imdump.c \
d151 1
a151 1
		vm.o genimage.o
@


1.7
log
@fixed bug in target for c40disas
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1991/12/02 15:26:33 martyn Exp nickc $
d69 9
a77 1
VPATH := $(HSRC)/$(COMPONENT)
@


1.6
log
@finally removed ORION
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1991/10/09 11:13:25 paul Exp martyn $
d173 1
a173 1
    c40disas : $(CSTART) C40disas.o
@


1.5
log
@added 'C40 support and changed the names of executables armlink ->armld
std native name is now ld
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/03 23:50:59 paul Exp $
d29 1
a29 1
    HHOST = ORION
@


1.4
log
@changed linker directory to "linker" from "link"
@
text
@a0 1
#@@@@@@ move armdis.c into ARM directory
d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 90/10/22 18:48:46 paul Exp Locker: paul $
d76 1
a76 1
TARGETS = armlink imdump objdump armdisa
d78 5
a82 1
TARGETS = link imdump objdump
d106 3
a108 1
		vm.o genimage.o imdump.o objdump.o disass.o ARMshape.o
d112 3
a114 1
		vm.c genimage.c hash.c objdump.c imdump.c disass.c ARMshape.c
d120 1
a120 1
HEADERS.c	= link.h vm.h vm.h disass.h ARMshape.h
d149 2
a150 2
# Helios/ARM linker
armlink :  $(CSTART) $(LINK.OBJECTS)
d157 2
a158 2
# Object dump utility
objdump : $(CSTART) objdump.o ARMshape.o
d161 2
a162 2
# ARM disassembler
armdisa : $(CSTART) disass.o ARMshape.o
d165 9
a173 2
# Object dump utility
objdump : $(CSTART) objdump.o
d175 5
a189 1

@


1.3
log
@corrected $HEADERS.c
@
text
@d7 1
a7 1
# File: /HSRC/cmds/link/makefile
d15 1
a15 1
# RcsId: $Id: makefile,v 1.2 90/10/22 16:39:31 paul Exp $
d54 1
a54 1
COMPONENT = cmds/link
@


1.2
log
@corrected sources./c/h/odd
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.1 90/10/22 15:43:49 paul Exp Locker: paul $
d113 1
a113 1
HEADERS.c	= link.h vm.h vm.h
@


1.1
log
@Initial revision
@
text
@d15 1
a15 1
# RcsId: $Id$
d119 1
a119 1
SOURCES.odd	= makefile queue.c queue.h queue.nonansi.h
@
