head	1.13;
access;
symbols;
locks; strict;
comment	@# @;


1.13
date	94.04.07.10.56.37;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	94.01.26.15.04.25;	author vlsi;	state Exp;
branches;
next	1.11;

1.11
date	94.01.13.15.59.33;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	94.01.05.10.59.13;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	93.12.20.11.00.04;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	93.09.13.08.51.40;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	93.08.18.18.18.09;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	93.07.08.11.57.56;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	93.06.23.09.58.21;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	93.06.22.08.50.58;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	93.06.21.08.40.33;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	93.01.15.15.50.39;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	93.01.15.14.24.42;	author nick;	state Exp;
branches;
next	;


desc
@Makefile for RS6000 version
@


1.13
log
@added -g for (hosted) ARM builds
@
text
@#------------------------------------------------------------------------------
# Helios generic make system - NATIVE HOST MAKEFILE -
#-----------------------------------------------------------------------------
# RS6000 Host specific make rules to make NATIVE HOST version of Generic Linker
#
# File: /HSRC/cmds/linker/RS6000/makefile
#
# This file contains ALL the definitions and rules that are
# required to make a NATIVE HOST version of this component.
# IT IS NOT COMPLIMENTARY TO THE GENERIC VERSION.
#
# This makefile is always executed within this host specific subdir.
# All host specific source files should be kept here.
# All intermediate, object and binary files should be made in here.
#
# RcsId: $Id: makefile,v 1.12 1994/01/26 15:04:25 vlsi Exp nickc $
#		(C) Copyright 1990 - 1994 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------
# Manditory variables for a component:
# name of COMPONENT directory relative to $(HSRC)
COMPONENT = cmds/linker

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables

# Manditory phoney targets
.PHONY: default clean
# "default" - should make this component in its proc subdir
# "install" - copy the new component to $(HHOSTBIN) directory
# "clean"   - remove all intermediate and executable files from host subdir

VPATH := $(HSRC)/$(COMPONENT)

#-----------------------------------------------------------------------------
# Note all final targets here

# Note all target CPUs that are built on this host (prefixed with 'build_')
POSSIBLECPUTARGETS = build_ARM build_C40 build_M68K

ifeq ($(HPROC),C40)
  TARGETS = ldc40 objdumpc40 imdump disasc40
  XTARGETS = build_C40 $(TARGETS) 
else
  ifeq ($(HPROC),ARM)
    TARGETS = ldarm objdumparm imdump disasarm
    XTARGETS = build_ARM $(TARGETS) 
  else
    ifeq ($(HPROC),M68K)
      TARGETS = ldm68k objdumpm68k imdump disasm68k
      XTARGETS = build_M68K $(TARGETS) 
    endif
  endif
endif

default : $(XTARGETS)

install	: $(XTARGETS)
	$(CP) $(TARGETS) $(HHOSTBIN)
	$(TOUCH) install

clean	:
	-$(RM)	$(L.OBJECTS) $(TARGETS) mkout core ../mkout install \
	$(POSSIBLECPUTARGETS)

# If we build for a new processor target clean out the old target proc. objects
build_$(HPROC):
	$(MAKE) clean
	touch	build_$(HPROC)

# Note all sources
SOURCES		= $(SOURCES.c) $(HEADERS.c) $(SOURCES.odd)

# Object files
L.OBJECTS	= sym.o objed.o module.o mem.o scancode.o link.o readfile.o \
		vm.o genimage.o queue.o stubs.o objdump.o imdump.o

ifeq ($(HPROC),M68K)
  OBJECTS		= $(L.OBJECTS) 68kdisas.o 
else
  ifeq ($(HPROC),C40)
    OBJECTS		= $(L.OBJECTS) c40disas.o c40objdis.o
  endif
endif

# C source files
SOURCES.c	= sym.c objed.c module.c mem.c scancode.c link.c readfile.c \
		vm.c genimage.c queue.c hash.c stubs.c

# C header files
ifeq ($(HPROC),M68K)
  HEADERS.c	= vm.h link.h 
else
  HEADERS.c	= vm.h link.h c40ops.h c40target.h
endif

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Native Host targets and their dependencies:

ifeq ($(HPROC),C40)
  HOSTCFLAGS	:= $(HOSTCFLAGS) -I/usr/include -I$(INCLUDE)
else
  ifeq ($(HPROC),ARM)
    HOSTCFLAGS	:= $(HOSTCFLAGS) -g -I/usr/include -I$(INCLUDE) -I$(EXTINCLUDE)
  else
    ifeq ($(HPROC),M68K)
      HOSTCFLAGS := $(HOSTCFLAGS) -I/usr/include -I$(INCLUDE)
    endif
  endif
endif


$(L.OBJECTS) : link.h 
vm.o : vm.h
link.o : hash.c
convert.o: convert.h endian.h

ldc40: $(L.OBJECTS)
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^
ldarm: $(L.OBJECTS) convert.o
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^ $(EXTLIB)/clxlib.a
ldm68k: $(L.OBJECTS)
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^

# C40 version (includes disassembler)
objdumpc40 : objdump.c c40objdis.c
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^

# ARM version (includes disassembler)
objdumparm : objdump.c
	$(HOSTCC) $(HOSTCFLAGS) -c $<
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ objdump.o $(EXTLIB)/clxlib.a

# M68K version
objdumpm68k : objdump.c 
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^

imdump : imdump.c
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $<

disasc40 : c40disas.c
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $<

disasarm : armdisas.c
	$(HOSTCC) $(HOSTCFLAGS) -c $<
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ armdisas.o $(EXTLIB)/clxlib.a

disasm68k : 68kdisas.c
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $<

#-----------------------------------------------------------------------------
@


1.12
log
@Add clxlib.a for objdumparm and diasarm builds.
@
text
@d16 1
a16 1
# RcsId: $Id: makefile,v 1.11 1994/01/13 15:59:33 nickc Exp $
d109 1
a109 1
    HOSTCFLAGS	:= $(HOSTCFLAGS) -I/usr/include -I$(INCLUDE) -I$(EXTINCLUDE)
@


1.11
log
@Added paths for externally sourced objects.
@
text
@d16 1
a16 1
# RcsId: $Id: makefile,v 1.10 1994/01/05 10:59:13 nickc Exp nickc $
d135 1
a135 1
objdumparm : objdump.c ARMshape.o
d137 1
a137 1
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ ARMshape.o objdump.o 
d149 1
a149 1
disasarm : armdisas.c ARMshape.o
d151 1
a151 1
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ armdisas.o ARMshape.o
@


1.10
log
@fixed clean target
@
text
@d16 1
a16 1
# RcsId: $Id: makefile,v 1.9 1993/12/20 11:00:04 nickc Exp nickc $
d109 1
a109 1
    HOSTCFLAGS	:= $(HOSTCFLAGS) -I/usr/include -I$(INCLUDE)
d126 1
a126 1
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^ clxlib.a
@


1.9
log
@added convert.c for ARM linker
@
text
@d16 1
a16 1
# RcsId: $Id: makefile,v 1.8 1993/09/13 08:51:40 nickc Exp nickc $
d64 1
a64 1
	-$(RM)	$(OBJECTS) $(TARGETS) mkout core ../mkout install \
d109 1
a109 1
    HOSTCFLAGS	:= $(HOSTCFLAGS) -D__ARM -D__HELIOSARM -I/usr/include -I$(INCLUDE)
@


1.8
log
@removed spurious defines
@
text
@d16 2
a17 3
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.7 1993/08/18 18:18:09 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
d77 1
a77 1
		vm.o genimage.o queue.o stubs.o
d80 1
a80 1
  OBJECTS		= $(L.OBJECTS) 68kdisas.o imdump.o objdump.o stubs.o
d82 3
a84 1
  OBJECTS		= $(L.OBJECTS) c40disas.o c40objdis.o imdump.o objdump.o stubs.o
d121 1
d125 2
a126 2
ldarm: $(L.OBJECTS)
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^
@


1.7
log
@stopped make install copying build_$(HPROC) to the target directory.
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.6 1993/07/08 11:57:56 nickc Exp paul $
d105 1
a105 1
  HOSTCFLAGS	:= $(HOSTCFLAGS) -D__C40 -D__HELIOSC40 -I/usr/include -I$(INCLUDE)
@


1.6
log
@oops fixed missing link rule for ldc40 and ldarm
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.5 1993/06/23 09:58:21 paul Exp nickc $
d44 2
a45 1
  TARGETS = build_C40 ldc40 objdumpc40 imdump disasc40
d48 2
a49 1
    TARGETS = build_ARM ldarm objdumparm imdump disasarm
d52 2
a53 1
      TARGETS = build_M68K ldm68k objdumpm68k imdump disasm68k
d58 1
a58 1
default : $(TARGETS)
d60 1
a60 1
install	: $(TARGETS)
@


1.5
log
@made all 68k names standard.
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.4 1993/06/22 08:50:58 nickc Exp paul $
d119 1
d121 1
@


1.4
log
@fixed build of objdump for 68K
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.3 1993/06/21 08:40:33 nickc Exp nickc $
d41 1
a41 1
POSSIBLECPUTARGETS = build_ARM build_C40 build_68K
d49 2
a50 2
    ifeq ($(HPROC),68K)
      TARGETS = build_68K ld68k objdump68k imdump disas68k
d77 2
a78 2
ifeq ($(HPROC),68K)
  OBJECTS		= $(L.OBJECTS) 68kidsas.o imdump.o objdump.o stubs.o
d88 1
a88 1
ifeq ($(HPROC),68K)
d107 1
a107 1
    ifeq ($(HPROC),68K)
d120 1
a120 1
ld68k: $(L.OBJECTS)
d132 2
a133 2
# 68K version
objdump68k : objdump.c 
d146 1
a146 1
disas68k : 68kdisas.c
@


1.3
log
@added support for building a 68K version of the linker, disassembler, etc
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.2 1993/01/15 15:50:39 paul Exp nickc $
d78 1
a78 1
  OBJECTS		= $(L.OBJECTS) 68kidsas.o 68kobjdis.o imdump.o objdump.o stubs.o
d89 1
a89 1
  HEADERS.c	= vm.h link.h 68kops.h 68ktarget.h
d132 2
a133 2
# 68K version (includes disassembler)
objdump68k : objdump.c 68kobjdis.c
@


1.2
log
@fixed for multiple cpu target on single host and fixed cyclic dependency
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.1 1993/01/15 14:24:42 nick Exp paul $
d41 1
a41 1
POSSIBLECPUTARGETS = build_ARM build_C40
d44 1
a44 1
TARGETS = build_C40 ldc40 objdumpc40 imdump disasc40
d46 7
a52 3
 ifeq ($(HPROC),ARM)
 TARGETS = build_ARM ldarm objdumparm imdump disasarm
 endif
d77 5
a81 1
OBJECTS		= $(L.OBJECTS) c40disas.o c40objdis.o imdump.o objdump.o stubs.o
d88 5
a92 1
HEADERS.c	= vm.h link.h c40ops.h c40target.h
d102 1
a102 1
HOSTCFLAGS	:= $(HOSTCFLAGS) -D__C40 -D__HELIOSC40 -I/usr/include -I$(INCLUDE)
d105 5
a109 1
  HOSTCFLAGS	:= $(HOSTCFLAGS) -D__ARM -D__HELIOSARM -I/usr/include -I$(INCLUDE)
d113 1
d118 1
a118 3
ldc40 : $(L.OBJECTS)
	$(HOSTCC) $(HOSTCFLAGS) -o$@@ $^

d120 1
d132 4
d145 3
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
# RcsId: $Id: makefile,v 1.6 1992/08/20 08:55:35 paul Exp $
d40 3
d58 2
a59 1
	-$(RM)	$(OBJECTS) $(TARGETS) mkout core ../mkout install
d62 1
a62 1
build_$(HPROC): build_C40 	# add any new processor names here
@
