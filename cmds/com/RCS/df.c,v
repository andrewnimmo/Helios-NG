head	1.5;
access;
symbols
	Helios_1_3_1:1.5
	Helios_C40_1_3_Official_Release:1.5
	Alenia_release:1.5
	Helios1_3:1.5
	C40_Field_Test_2:1.5
	C40_Field_Test_R1:1.5
	Helios13_beta:1.5
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.3
	Helios1_2_1:1.3
	Helios1_2:1.2;
locks; strict;
comment	@ * @;


1.5
date	92.06.27.11.47.13;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.06.15.09.20.37;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	91.01.31.13.34.45;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.08.23.10.06.23;	author james;	state Exp;
branches;
next	1.1;

1.1
date	90.08.22.16.17.26;	author james;	state Exp;
branches;
next	;


desc
@reports upon disk space usage and free space available
@


1.5
log
@Changed on-stack buffer from 2K to 512 bytes
@
text
@
static char *rcsid = "$Header: /m/giga/HeliosRoot/Helios/cmds/com/RCS/df.c,v 1.4 1992/06/15 09:20:37 paul Exp $";

#include <stdio.h>
#include <stdlib.h>
#include <syslib.h>
#include <servlib.h>

int main(int argc, char **argv)
{ WORD buffer[IOCDataMax/sizeof(word)], result;
  Object *drive;
  int i;

  printf("          Size(Kb)      Used(Kb)     Available(Kb)\n");

  if (argc == 1)
    { if ((result = ServerInfo(cdobj(), (BYTE *) buffer)) < 0)
	{ printf("ServerInfo failed : %lx\n", result);
	  exit(1);
        }    
      printf("      %10ld    %10ld      %10ld\n", buffer[1] / 1024, 
             (buffer[1] - buffer[2]) / 1024, buffer[2] / 1024);
    }

  for (i = 1; i < argc; i++)
    { if ((drive = Locate(cdobj(), argv[i])) == (Object *) NULL)
        { printf("Unable to locate %s.\n", argv[i]);
          continue;
        }
      if ((result = ServerInfo(drive, (BYTE *) buffer)) < 0)
        { printf("ServerInfo failed : %lx\n", result);
          continue;
        }

      printf("      %10ld    %10ld      %10ld\n", buffer[1] / 1024, 
             (buffer[1] - buffer[2]) / 1024, buffer[2] / 1024);
    }
return 0;
}

        
       
 
@


1.4
log
@increased buffer size and cleaned up
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /giga/Helios/cmds/com/RCS/df.c,v 1.3 91/01/31 13:34:45 paul Exp $";
d10 1
a10 1
{ WORD buffer[IOCDataMax], result;
@


1.3
log
@no change
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/com/RCS/df.c,v 1.2 90/08/23 10:06:23 james Exp $";
d5 1
d7 1
d10 1
a10 2
{ WORD buffer[10], result;
  extern Object *CurrentDir;
d17 1
a17 1
    { if ((result = ServerInfo(CurrentDir, (BYTE *) buffer)) < 0)
d21 1
a21 1
      printf("      %10d    %10d      %10d\n", buffer[1] / 1024, 
d26 1
a26 1
    { if ((drive = Locate(CurrentDir, argv[i])) == (Object *) NULL)
d35 1
a35 1
      printf("      %10d    %10d      %10d\n", buffer[1] / 1024, 
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/com/RCS/df.c,v 1.1 90/08/22 16:17:26 james Exp Locker: james $";
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
static char rcsid = "$Header$";
@
