head	1.4;
access;
symbols
	Helios_1_3_1:1.4
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2
	Helios1_2:1.2;
locks; strict;
comment	@ * @;


1.4
date	93.07.12.11.31.52;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	92.10.19.10.29.42;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	90.08.23.10.36.20;	author james;	state Exp;
branches;
next	1.1;

1.1
date	90.08.22.16.39.17;	author james;	state Exp;
branches;
next	;


desc
@splits the output stream into two directions
@


1.4
log
@fixed compile time warnings
@
text
@/**
*
* Title:  tee
*
* Author: Andy England
*
* Date:   29th April 1988
*
**/

static char *rcsid = "$Header: /hsrc/cmds/com/RCS/tee.c,v 1.3 1992/10/19 10:29:42 martyn Exp nickc $";

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#define unless(c) if(!(c))
#define until(c)  while(!(c))
#define strequ(s,t) (strcmp(s,t) == 0)

typedef enum
{
  FALSE,
  TRUE
} BOOLEAN;

#define MAX_FILES 20

FILE *Files[MAX_FILES];
int FileCount = 0;

void Tidyup()
{
  int Count;

  for (Count = 0; Count < MAX_FILES; Count++)
  {
    unless (Files[Count] == NULL) fclose(Files[Count]);
  }
}

void Initialise(
int argc,
char *argv[] )
{
  char *Command = *argv++;
  BOOLEAN Append = FALSE;
  int Count;

  for (Count = 0; Count < MAX_FILES; Count++) Files[Count] = NULL;
  if(argc > 1)
     if (strequ(*argv, "-a"))
     {
       Append = TRUE;
       argv++; argc--;
     }
  while (--argc > 0)
  {
    char *FileName = *argv++;

    if (FileCount == MAX_FILES)
    {
      fprintf(stderr, "%s: Too many files\n", Command);
      Tidyup();
      exit(1);
    }
    if ((Files[FileCount++] = fopen(FileName, (Append ? "a" : "w"))) == NULL)
    {
      fprintf(stderr, "%s: Can't open %s\n", Command, FileName);
      Tidyup();
      exit(1);
    }
  }
}

void Tee()
{
  int Count;
  int c;

  until ((c = fgetc(stdin)) == EOF)
  {
    fputc(c, stdout);
    for (Count = 0; Count < FileCount; Count++) fputc(c, Files[Count]);
  }
}

int
main(
int argc,
char *argv[] )
{
  Initialise(argc, argv);
  Tee();
  Tidyup();
  return 0;
}

@


1.3
log
@check argc before accessing argv[1] !!
@
text
@d11 1
a11 1
static char *rcsid = "$Header: /hsrc/cmds/com/RCS/tee.c,v 1.2 1990/08/23 10:36:20 james Exp martyn $";
d14 2
d32 1
a32 7
void Initialise();
void Tee();
void Tidyup();

main(argc, argv)
int argc;
char *argv[];
d34 6
a39 4
  Initialise(argc, argv);
  Tee();
  Tidyup();
  return 0;
d42 3
a44 3
void Initialise(argc, argv)
int argc;
char *argv[];
d88 4
a91 1
void Tidyup()
d93 4
a96 6
  int Count;

  for (Count = 0; Count < MAX_FILES; Count++)
  {
    unless (Files[Count] == NULL) fclose(Files[Count]);
  }
@


1.2
log
@*** empty log message ***
@
text
@d11 1
a11 1
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/com/RCS/tee.c,v 1.1 90/08/22 16:39:17 james Exp Locker: james $";
d53 6
a58 5
  if (strequ(*argv, "-a"))
  {
    Append = TRUE;
    argv++; argc--;
  }
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
static char rcsid[] = "$Header$";
@
