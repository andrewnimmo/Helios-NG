head	1.13;
access;
symbols
	Helios_1_3_1:1.11
	Helios_C40_1_3_Official_Release:1.10
	Alenia_release:1.9
	Helios1_3:1.9
	C40_Field_Test_2:1.9
	C40_Field_Test_R1:1.7
	Helios13_beta:1.7
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.5
	Helios1_2:1.2;
locks; strict;
comment	@ * @;


1.13
date	94.08.10.09.14.39;	author al;	state Exp;
branches;
next	1.12;

1.12
date	94.06.16.09.44.00;	author tony;	state Exp;
branches;
next	1.11;

1.11
date	93.07.12.11.55.36;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	93.01.15.16.51.00;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	92.09.24.11.37.12;	author bart;	state Exp;
branches;
next	1.8;

1.8
date	92.07.08.16.03.47;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.03.31.15.50.10;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	91.12.02.14.55.05;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.03.04.11.23.09;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.03.03.23.07.07;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.12.19.14.52.30;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	90.08.23.10.34.27;	author james;	state Exp;
branches;
next	1.1;

1.1
date	90.08.22.16.38.39;	author james;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Ported to MS-DOS and added @@argfile support.  It was quite a hack to add
@@argfile support, let me tell you.
@
text
@
static char *rcsid = "$Header: /dsl/HeliosRoot/Helios/cmds/com/RCS/sysbuild.c,v 1.12 1994/06/16 09:44:00 tony Exp $";

#include <stdio.h>
#include <module.h>
#include <stdlib.h>
#include <string.h>
#include <stdarg.h>
#include "getargs.h"

#ifndef WORD
typedef long WORD;
typedef char *STRING;
typedef unsigned char UBYTE;
#endif

/*
 * Helios system builder
 *
 * Takes as input a set of image files generated by the assembler and
 * combines them into a single image suitable for booting into a transputer.
 * The file consists of an initial size word (in little-endian order), followed
 * by a sequence of self-relative pointers to the start of each image, followed
 * by the images themselves.
 *
 * Author: NHG   Changes Feb 88: TJK
 */

#if defined(IBMPC) || defined(__HELIOS)
# define MEMSIZE 500000L	/* 500k max nucleus size */
#else
# define MEMSIZE 1000000L	/* 1Mb max nucleus */
#endif

UBYTE *image;
UBYTE *iptr;
WORD isize;
WORD ptabsize;
FILE* infd;
FILE* outfd;

#ifdef IBMPC
UBYTE *lmalloc();
extern unsigned fread();
#endif


WORD swap(WORD x )
#ifdef BYTE_SEX_ODD
{
        WORD r = 0;
        r |= ((x>>24)&0xff)<< 0;
        r |= ((x>>16)&0xff)<< 8;
        r |= ((x>> 8)&0xff)<<16;
        r |= ((x>> 0)&0xff)<<24;
	return r;
}
#else
{ return(x); }
#endif

void
tidyup(WORD rc )
{
	if ( infd  != 0 ) fclose(infd);
	if ( outfd != 0 ) fclose(outfd);
	if ( image != 0 ) free(image);
	exit( (int) rc);
}

void
error(
      STRING str,
      ... )
{
  va_list	args;
  
  va_start( args, str );  
  vprintf(str,args);
  va_end(args);
  
  putchar('\n');
  tidyup(20L);
}

int
main(
int argc,
STRING *argv )
{
	WORD 		p, pp;
	WORD 		*iwd;
	WORD 		sz;
	STRING		dstname;
	ArgStack	*argstack = NULL;

	argc -= 2;
	argv++;
	dstname = argv[0];
	infd  = outfd = NULL;
	image = NULL;

	if( argc <= 0 ) error("Usage: sysbuild systemfile imagefile...");

	/* Find out the table size */
	{
		int 	keepargc = argc;
		STRING 	*keepargv = argv;
		int	cnt = 0;

		/* Skip nucleus */		
		argv++;

		/* Count the real arguments */
		while ( (*argv != NULL) || (argstack != NULL) ) {
			if (*argv == NULL) {
				popargs(&argstack, &argc, &argv);
				continue;
			}

			if ( **argv == '@@') {
				char **argfile;

				argfile = getargs((*argv)+1, &argc);
				if (argfile == NULL) { 
					error("Unable to open or create arguments from %s\n", (*argv)+1);
				} else {
					/* argv+1 is pushed so we return to the next argv */
					pushargs(&argstack, argc-1, argv+1);
					argv = argfile;
				}

				continue;
			}

			argv++;
			cnt++;
		}

		/* Restore settings */
		argc = keepargc;
		argv = keepargv;

		/* Free memory */
		freeargs();

		ptabsize = cnt;
	}

#if defined (IBMPC) || defined (MWC)
	image = lmalloc(MEMSIZE);
#else
	image = (UBYTE *)malloc((int) MEMSIZE);
#endif

	if( image == 0 ) error("Cannot allocate memory");

	/* The marker for SCCS: @@(#) */
	printf("Helios System Builder V1.7 21/6/90\n");
	printf("(C) 1990-1993 Copyright Perihelion Distributed Software");
	printf(" All Rights Reserved.\n");

	iptr = image + (8 + ptabsize*4);
	iwd  = (WORD *)image;
	isize = iptr - image;

	p = 0;
	pp = 0;

	while( (pp++ != argc) || (argstack != NULL)  )
	{
		WORD hdr[3];
		WORD fsize;
		int s;

#if 0
		WORD mn;
#endif
		char *nptr = argv[pp];

		if (pp > argc) {
			popargs(&argstack, &argc, &argv);
			pp = -1;
			continue;
		}

		if ( *nptr == '@@') {
			char **argfile;
			int c;

			argfile = getargs(nptr+1, &c);
			if (argfile == NULL) { 
				error("Unable to open or create arguments from %s\n", nptr+1);
			} else {
				/* argv+1 is pushed so we return to the next argv */
				pushargs(&argstack, argc-pp-1, argv+pp+1);
				argv = argfile;
				argc = c - 1;
				pp = -1;
			}

			continue;
		}

		/* Next image file */
		p++;

#if defined(SUN4) || defined(R140)
		infd = fopen(nptr,"r");
#else
		infd = fopen(nptr,"rb");
#endif
		if( infd == NULL ) 
			error("Cannot open %s for input",nptr);

		if((s=fread(hdr,1,12,infd)) != 12 )
			error("Cannot read image file header: %s %ld",nptr,s);

		/* Extract final part of name */
		nptr = nptr + strlen(nptr);
		while (*nptr != '/' && *nptr != '\\' && nptr >= argv[pp])
		  nptr--;

		nptr++;

#if 0
		/* cut this check out as we wish to use one version of */
		/* sysbuild on a host for multiple cpu targets */
		mn = swap(hdr[0]);

		if(mn != Image_Magic )
			error("Bad magic number in file %s",argv[pp]);
#endif
		
		fsize = swap(hdr[2]);

		if (((isize + fsize + 3) & ~3) > MEMSIZE)
			error("Image size too large\n");

#if defined (IBMPC) || defined (MWC)
	{
		WORD s = fsize;
		UBYTE *b = iptr;
		while( s > 0 )
		{
			int tfr = s > 30000L ? 30000 : s;
			if(fread(b,1,tfr,infd) != tfr )
				error("Bad header in file %s %ld %ld",argv[pp],sz,fsize);
			s = s-tfr;
			b = (UBYTE *)((WORD)b + tfr);
		}
	}
#else
		if((sz=fread(iptr,1,(int)fsize,infd)) != fsize)
			error("Bad header in file %s %ld %ld",argv[pp],sz,fsize);
#endif
		printf("%20s: offset %#8lx size %#8lx\n", nptr, isize, fsize );

		/* align to next word boundary */
		fsize = (fsize+3) & (~3);

		isize += fsize;

		if (isize > MEMSIZE ) error("Run out of memory\n");

		{

#if defined (IBMPC) || defined (MWC)
			WORD ip = (WORD)iptr - ((WORD)image + 4*p);
			iptr = (UBYTE *)((WORD)iptr + fsize);
#else
			WORD ip = iptr - image - 4*p;
			iptr += fsize;
#endif
			iwd[p] = swap(ip);
		}
		

		fclose(infd); infd = 0;
	}
	p++;

	iwd[0] = swap(isize);
	iwd[p] = 0L;

#if defined(MWC) || defined(IBMPC)
	/* Messing around here because of MWC restrictions */
	outfd = fopen(dstname,"wb");
	if( outfd == NULL ) 
		error("Cannot open %s for output",dstname);

	{
		WORD s = isize;
		UBYTE *b = image;
		while( s > 0 )
		{
			int tfr = s > 30000L ? 30000 : s;
			fwrite(b,1,tfr,outfd);
			s = s-tfr;
			b = (UBYTE *)((WORD)b + tfr);
		}
	}
#else
#if defined(SUN4) || defined(R140)
	outfd = fopen(dstname,"w");
#else
	outfd = fopen(dstname,"wb");
#endif
	if( outfd == NULL ) 
		error("Cannot open %s for output",dstname);
	if (fwrite(image,1,(int)isize,outfd) != isize) printf("Write failed\n");
#endif

	fclose(outfd); outfd = NULL;
	
	printf("System size = %#lx (%ld)\n",isize, isize);

	tidyup(0L);
	freeargs();
}
@


1.12
log
@updated copyright string
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /dsl/HeliosRoot/Helios/cmds/com/RCS/sysbuild.c,v 1.11 1993/07/12 11:55:36 nickc Exp tony $";
d9 1
d91 5
a95 3
	WORD p;
	WORD *iwd;
	WORD sz;
d99 1
d105 44
a148 1
	ptabsize = argc;
d168 1
d170 1
a170 1
	while( p++ != argc  )
d175 1
d179 22
a200 1
		char *nptr = argv[p];
d202 6
d221 1
a221 1
		while (*nptr != '/' && *nptr != '\\' && nptr >= argv[p])
d232 1
a232 1
			error("Bad magic number in file %s",argv[p]);
d248 1
a248 1
				error("Bad header in file %s %ld %ld",argv[p],sz,fsize);
d255 1
a255 1
			error("Bad header in file %s %ld %ld",argv[p],sz,fsize);
d281 1
d288 1
a288 1
	outfd = fopen(argv[0],"wb");
d290 1
a290 1
		error("Cannot open %s for output",argv[0]);
d305 1
a305 1
	outfd = fopen(argv[0],"w");
d307 1
a307 1
	outfd = fopen(argv[0],"wb");
d310 1
a310 1
		error("Cannot open %s for output",argv[0]);
d315 1
a315 1

d319 1
@


1.11
log
@fixed compile time warnings
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /hsrc/cmds/com/RCS/sysbuild.c,v 1.10 1993/01/15 16:51:00 paul Exp nickc $";
d113 1
a113 1
	printf("(C) 1990-1993 Copyright Perihelion Software Ltd.");
d145 3
a147 1
		while (*nptr != '/' && *nptr != '\\' && nptr >= argv[p]) nptr--;
@


1.10
log
@removed Image_Magic check as this gets in the way of building
multiple CPU versions on a single host
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /m/giga/HeliosRoot/Helios/cmds/com/RCS/sysbuild.c,v 1.9 1992/09/24 11:37:12 bart Exp paul $";
d6 3
a40 2
WORD swap();

d44 13
d58 1
a58 1
UBYTE *malloc();
d61 23
d85 4
a88 3
main(argc,argv)
int argc;
STRING *argv;
d96 2
a97 2
	infd = outfd = 0;	
	image = 0;
d106 1
a106 1
	image = malloc(MEMSIZE);
d113 1
a113 1
	printf("(C) 1990 Copyright Perihelion Software Ltd.");
d232 1
a232 1
	if (fwrite(image,1,isize,outfd) != isize) printf("Write failed\n");
d235 1
a235 1
	fclose(outfd); outfd = 0;
d237 1
a237 1
	printf("System size = %#lx (%d)\n",isize, isize);
a239 34
}

WORD swap(x)
WORD x;

#ifdef BYTE_SEX_ODD
{
        WORD r = 0;
        r |= ((x>>24)&0xff)<< 0;
        r |= ((x>>16)&0xff)<< 8;
        r |= ((x>> 8)&0xff)<<16;
        r |= ((x>> 0)&0xff)<<24;
	return r;
}
#else
{ return(x); }
#endif

error(str,a,b,c,d,e,f)
STRING str;
WORD a,b,c,d,e,f;
{
	printf(str,a,b,c,d,e,f);
	putchar('\n');
	tidyup(20L);
}

tidyup(rc)
WORD rc;
{
	if( infd != 0 ) close(infd);
	if( outfd != 0 ) close(outfd);
	if( image != 0 ) free(image);
	exit(rc);
@


1.9
log
@Upped the image limit to 500K for now, to cope with debugging versions
of the C40 nucleus. Also, it now checks for buffer overflow before
performing the read and crashing the system.
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /m/giga/HeliosRoot/Helios/cmds/com/RCS/sysbuild.c,v 1.8 1992/07/08 16:03:47 paul Exp $";
d89 1
d91 1
d110 3
d117 1
@


1.8
log
@fixed for generic Image_Magic
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /m/giga/HeliosRoot/Helios/cmds/com/RCS/sysbuild.c,v 1.7 1992/03/31 15:50:10 paul Exp paul $";
d26 1
a26 1
# define MEMSIZE 300000L	/* 300k max nucleus size */
d114 3
@


1.7
log
@extended the size of nucleus that sysbuild can construct as this was too
small for the C40
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /hsrc/cmds/com/RCS/sysbuild.c,v 1.6 1991/12/02 14:55:05 martyn Exp $";
d5 1
d7 1
d11 1
a24 1
#define MagicNumber 0x12345678L
d110 1
a110 1
		if(mn != MagicNumber )
@


1.6
log
@finally removed ORION
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /hsrc/cmds/com/RCS/sysbuild.c,v 1.5 1991/03/04 11:23:09 martyn Exp martyn $";
d23 5
a27 1
#define MEMSIZE 300000L
d188 1
a188 1
	printf("System size = %#lx\n",isize);
@


1.5
log
@changed SPARKY to SUN4
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /giga/HeliosRoot/Helios/cmds/com/RCS/sysbuild.c,v 1.4 91/03/03 23:07:07 paul Exp Locker: martyn $";
d86 1
a86 1
#if defined(ORION) || defined(SUN4) || defined(R140)
d172 1
a172 1
#if defined(ORION) || defined(SUN4) || defined(R140)
@


1.4
log
@fixed to make work with -Dr140
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /giga/Helios/cmds/com/RCS/sysbuild.c,v 1.3 90/12/19 14:52:30 martyn Exp $";
d86 1
a86 1
#if defined(ORION) || defined(SPARKY) || defined(R140)
d172 1
a172 1
#if defined(ORION) || defined(SPARKY) || defined(R140)
@


1.3
log
@added sparky stuff
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /giga/Helios/cmds/com/RCS/sysbuild.c,v 1.2 90/08/23 10:34:27 james Exp Locker: martyn $";
d86 1
a86 1
#if defined(ORION) || defined(SPARKY)
d172 1
a172 1
#if defined(ORION) || defined(SPARKY)
@


1.2
log
@*** empty log message ***
@
text
@d2 1
a2 1
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/com/RCS/sysbuild.c,v 1.1 90/08/22 16:38:39 james Exp Locker: james $";
d86 1
a86 1
#ifdef ORION
d172 1
a172 1
#ifdef ORION
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
static char rcsid[] = "$Header$";
@
