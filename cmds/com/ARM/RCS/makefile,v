head	1.18;
access;
symbols;
locks; strict;
comment	@# @;


1.18
date	93.12.09.23.38.28;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	93.09.03.18.04.03;	author paul;	state Exp;
branches;
next	1.16;

1.16
date	93.07.19.13.52.43;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	91.10.10.07.37.06;	author paul;	state Exp;
branches;
next	1.14;

1.14
date	91.05.31.13.44.45;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	91.05.23.10.35.48;	author paul;	state Exp;
branches;
next	1.12;

1.12
date	91.04.12.15.05.13;	author ben;	state Exp;
branches;
next	1.11;

1.11
date	91.03.27.00.50.39;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	91.03.14.18.29.28;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	91.03.04.00.33.38;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	91.02.14.21.53.56;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	91.02.14.21.39.50;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	91.01.22.13.25.01;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	90.11.19.20.45.09;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	90.11.09.19.18.34;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.11.07.01.34.31;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.10.19.16.47.48;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.10.02.11.41.21;	author paul;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Build with NC and NCFLAGS for the ARM
@
text
@#------------------------------------------------------------------------------
# Helios generic make system - PROCESSOR SPECIFIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# ARM processor specific make rules for the General Commands component.
#
# File: /HSRC/cmds/com/ARM/makefile
#
# This file contains the extra definitions of variables and rules that are
# required to make a processor specific version of this component.
#
# If you wish to overide a targets rule that has been defined in the generic
# part of the makefile, you should bracket it with "ifneq ($(HPROC),YYY)" and
# supply the new rule in this makefile.
#
# This makefile is always executed within this processor specific subdir.
# All processor specific source files should be kept here.
# All intermediate, object and binary files should be made in here.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.17 1993/09/03 18:04:03 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

InProcMake = TRUE

# Get generic component makefile
include ../makefile

#-----------------------------------------------------------------------------
# Add processor specific targets:

FP_TARGETS = whetstone testFPoverflow testFP testFPdivzero enquire43

ifeq ($(HLICENSEE),ABC)
XTARGETS = showmi sigtest testexecerr \
	sleeper whatpri testport testlowalloc testrealloc mex mwr \
	flashwrite testrmm tst resetCPU testdivzero \
	shorttest forcegc alarmtst sysstrip mltest bash bashverify
else
XTARGETS = sigtest testexecerr \
	sleeper whatpri testport testlowalloc mex mwr \
	testdivzero shorttest alarmtst pidpanic
endif


Xdefault: $(XTARGETS)


# Install the extra targets:
Xinstall: $(XTARGETS)
	$(CP) $(XTARGETS) $(BIN)/private
	$(TOUCH) Xinstall

# Remove any processor specific files other than targets and objects here:
Xclean:
	-$(RM) Xinstall


#-----------------------------------------------------------------------------
# Add to lists of files, used for archive, backup and cleaning purposes.

# All extra processor specific sources
XSOURCES	= $(XSOURCES.c) $(XSOURCES.a) $(XSOURCES.s) \
		   $(XHEADERS.c) $(XHEADERS.m) \
		   $(XSOURCES.odd)

XOBJECTS	= $(XROBJS) $(XSOBJS)

XROBJS 		= $(XRSRCS.c:.c=.o)
XSOBJS		= $(XSSRCS.c:.c=.o)
XRBINS		= $(XROBJS:.o=)

XSOURCES.c	= $(XRSRCS.c) $(XSSRCS.c)

XRSRCS.c	= showroot.c sigtest.c testexecerr.c sleeper.c whatpri.c \
		testport.c testlowalloc.c testrealloc.c mex.c mwr.c \
		testrmm.c tst.c shorttest.c showmi.c forcegc.c alarmtst.c \
		sysstrip.c

XSSRCS.c	= whetstone.c testFPoverflow.c testFP.c flash.c showprocs.c \
		resetCPU.c testFPdivzero.c testdivzero.c enquire43.c mltest.c \
		bash.c bashverify.c bashcommon.c pidpanic.c

XSOURCES.a	= pidapanic.a

XSOURCES.s	=

XHEADERS.c	= bash.h

XHEADERS.m	=

XSOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Any additional processor specific rules and generic rule overides go here:

$(XROBJS):

$(XRBINS): $(CSTART)

#-----------------------------------------------------------------------
# Private specials

tps: $(CSTART) tps.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 $^

pidpanic: $(CSTART) pidapanic.o pidpanic.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 $^

testFP: testFP.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 \
		$(CSTART) $(LIB)/fplib.def $<

testFPoverflow: testFPoverflow.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 \
		$(CSTART) $(LIB)/fplib.def $<

testFPdivzero: testFPdivzero.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 \
		$(CSTART) $(LIB)/fplib.def $<

testdivzero: testdivzero.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 \
		$(CSTART) $<

whetstone: whetstone.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s4000 -h2000 \
		$(CSTART) $(LIB)/fplib.def $<

resetCPU: resetCPU.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h2000 \
		$(CSTART) $(LIB)/abclib.def $<

# FlashEPROM update program (could probably drop stack more)
flashwrite: $(CSTART) $(LIB)/abclib.def flash.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h1000 $^

mltest: $(CSTART) $(LIB)/abclib.def mltest.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h1000 $^

# C Library and Compiler environment information display utility
enquire43: enquire43.o $(CSTART)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h2000 $(CSTART) $<

bash.c bashcomon.c bashverify.c: bash.h
bash.o: bash.c
ifeq ($(HPROC),ARM)
	$(NC) -c $(NCFLAGS) -D_BSD -I$(INCLUDE) $<
else
	$(CC) -c -D_BSD -I$(INCLUDE) $<
endif

bashcommon.o: bashcommon.c
ifeq ($(HPROC),ARM)
	$(NC) -c $(NCFLAGS) -D_BSD -I$(INCLUDE) $<
else
	$(CC) -c -D_BSD -I$(INCLUDE) $<
endif

bashverify.o: bashverify.c
ifeq ($(HPROC),ARM)
	$(NC) -c $(NCFLAGS) -D_BSD -I$(INCLUDE) $<
else
	$(CC) -c -D_BSD -I$(INCLUDE) $<
endif

# File system test programs
bash:	$(CSTART) bash.o bashcommon.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h2000 $^ -l$(LIB)/bsd.lib

bashverify: $(CSTART) bashverify.o bashcommon.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h2000 $^ -l$(LIB)/bsd.lib

C_CFLAGS := $(NCFLAGS) -DC_COMPILER=\"ncc\" \
	-DASSEMBLER=\"as\" \
	-DLINKER=\"ld\" \
	-DAMPP=\"ampp\" \
	-DREMOVER=\"rm\" \
	-DC_INCDIR=\"/helios/include/\" \
	-DC_LIBDIR=\"/helios/lib/\" \
	-DMACDIR=\"/helios/include/ampp/\" 

NCFLAGS := $(NCFLAGS)

c.o: c.c
	$(NC) $(NCFLAGS) $(C_CFLAGS) -c $<

c: c.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h2000 $(CSTART) $<


#-----------------------------------------------------------------------------
@


1.17
log
@added pidpanic and tps
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.3 1993/07/19 16:20:31 nickc Exp nickc $
d42 1
a42 1
XTARGETS = tps sigtest testexecerr \
d150 3
d154 1
d157 3
d161 1
d164 3
d168 1
@


1.16
log
@fixed so that options for c (the wonder program) are only specified for c (the wonder program)
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.15 1991/10/10 07:37:06 paul Exp nickc $
a32 4
XTARGETS = whetstone showroot showmi sigtest testFPoverflow testFP testexecerr \
	sleeper whatpri testport showprocs testlowalloc testrealloc mex \
	flashwrite testrmm tst resetCPU testFPdivzero testdivzero enquire43 \
	shorttest forcegc alarmtst sysstrip mltest buildkeymap bash bashverify
d34 1
d36 12
d78 1
a78 1
		testport.c testlowalloc.c testrealloc.c mex.c \
d80 1
a80 1
		sysstrip.c buildkeymap.c
d84 1
a84 1
		bash.c bashverify.c bashcommon.c
d86 1
a86 1
XSOURCES.a	=
d107 6
a140 3
showprocs: $(CSTART) $(LIB)/abclib.def showprocs.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h1000 $^

d165 3
a167 3
C_CFLAGS := -DC_COMPILER=\"ncc\" \
	-DASSEMBLER=\"hobjasm\" \
	-DLINKER=\"ldarm\" \
d173 2
@


1.15
log
@added bash rrd tester and changed name of armlink -> armld
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.14 1991/05/31 13:44:45 paul Exp $
d153 1
a153 1
NCFLAGS := $(NCFLAGS) -DC_COMPILER=\"ncc\" \
d155 1
a155 1
	-DLINKER=\"armld\" \
d161 3
@


1.14
log
@added disk bash programs and removed sctest
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.12 1991/04/12 15:05:13 ben Exp $
d136 1
d140 1
a140 1
common.o: common.c
d153 8
a160 7
NCFLAGS := $(NCFLAGS) -DC_COMPILER=\"$(HHOSTBIN)/ncc\" \
	-DASSEMBLER=\"$(HHOSTBIN)/hobjasm\" \
	-DLINKER=\"$(HHOSTBIN)/armlink\" \
	-DAMPP=\"$(HHOSTBIN)/ampp\" \
	-DC_INCDIR=\"$(HSRC)/include/\" \
	-DC_LIBDIR=\"$(HPROD)/lib/\" \
	-DMACDIR=\"$(HSRC)/include/ampp/\" 
@


1.13
log
@added sctest - screen test (simple)
@
text
@d36 1
a36 1
	shorttest forcegc alarmtst sysstrip mltest buildkeymap sctest
d75 1
a75 1
		sctest.c
d81 1
a81 1
XHEADERS.c	=
a131 3
sctest: $(CSTART) $(LIB)/abclib.def sctest.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h1000 $^

d135 16
@


1.12
log
@Moved proc. dependent defines to makefile from c.c
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.11 1991/03/27 00:50:39 paul Exp $
d36 1
a36 1
	shorttest forcegc alarmtst sysstrip mltest buildkeymap
d74 2
a75 1
		resetCPU.c testFPdivzero.c testdivzero.c enquire43.c mltest.c
d130 3
@


1.11
log
@added buildkeymap
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.10 1991/03/14 18:29:28 paul Exp paul $
d134 12
@


1.10
log
@added alarmtst.c
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.9 91/03/04 00:33:38 paul Exp Locker: paul $
d36 1
a36 1
	shorttest forcegc alarmtst
d49 1
a49 1
#	-$(RM) xxx
d70 2
a71 1
		testrmm.c tst.c shorttest.c showmi.c forcegc.c alarmtst.c
d74 1
a74 1
		resetCPU.c testFPdivzero.c testdivzero.c enquire43.c
d126 3
@


1.9
log
@added forcegc and showmi commands
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.8 91/02/14 21:53:56 paul Exp Locker: paul $
d36 1
a36 1
	shorttest forcegc
d70 1
a70 1
		testrmm.c tst.c shorttest.c showmi.c forcegc.c
@


1.8
log
@added shorttest.c
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.7 91/02/14 21:39:50 paul Exp Locker: paul $
d33 1
a33 1
XTARGETS = whetstone showroot sigtest testFPoverflow testFP testexecerr \
d36 1
a36 1
	shorttest
d70 1
a70 1
		testrmm.c tst.c shorttest.c
@


1.7
log
@abc
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.5 90/11/19 20:45:09 paul Exp $
d35 2
a36 1
	flashwrite testrmm tst resetCPU testFPdivzero testdivzero enquire43
d38 1
d70 1
a70 1
		testrmm.c tst.c
@


1.6
log
@tweeked!
@
text
@d35 1
a35 1
	flashwrite testrmm tst resetCPU
d71 1
a71 1
		resetCPU.c
d102 8
d124 4
@


1.5
log
@added testrmm
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.4 90/11/09 19:18:34 paul Exp Locker: paul $
d35 1
a35 1
	flashwrite testrmm
d67 2
a68 2
		testport.c showprocs.c testlowalloc.c testrealloc.c mex.c \
		testrmm.c
d70 2
a71 1
XSSRCS.c	= whetstone.c testFPoverflow.c testFP.c flash.c
d106 4
d112 3
@


1.4
log
@added mex and flash
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.3 90/11/07 01:34:31 paul Exp $
d35 1
a35 1
	flashwrite
d67 2
a68 1
		testport.c showprocs.c testlowalloc.c testrealloc.c mex.c
@


1.3
log
@added memory test programs
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.2 90/10/19 16:47:48 paul Exp $
d34 2
a35 1
	sleeper whatpri testport showprocs testlowalloc testrealloc
d54 1
a54 1
XSOURCES	= $(XSOURCES.c) $(XSOURCES.a) \
d67 1
a67 1
		testport.c showprocs.c testlowalloc.c testrealloc.c
d69 1
a69 1
XSSRCS.c	= whetstone.c testFPoverflow.c testFP.c
d73 2
d104 3
@


1.2
log
@fixed source variable to include all sources
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.1 90/10/02 11:41:21 paul Exp $
d34 1
a34 1
	sleeper whatpri testport showprocs
d66 1
a66 1
		testport.c showprocs.c
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
# RcsId: $Id$
d62 2
@
