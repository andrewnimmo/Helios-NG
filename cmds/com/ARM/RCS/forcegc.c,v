head     1.2;
branch   ;
access   ;
symbols  ;
locks    ;
comment  @ * @;


1.2
date     91.03.11.11.32.50;  author paul;  state Exp;
branches ;
next     1.1;

1.1
date     91.02.25.20.01.16;  author paul;  state Exp;
branches ;
next     ;


desc
@force a memory compaction to occur
@


1.2
log
@made to comply with new root.h structure.
@
text
@/* test memory relocation via kernel compaction fn */

#include <stdio.h>
#include <root.h>
#include <memory.h>

int main(int argc, char **argv)
{
	word totalsize, totalfree, largestfree, percfree;

	printf("Original Memory Statistics:\n");
	StatMem(&totalsize, &totalfree, &largestfree, &percfree);
	printf("total size %d, total used %d,\ntotal free %d, largest free block %d, %% free %d\n", totalsize, totalsize-totalfree, totalfree, largestfree, percfree);

	printf("\nForcing memory compaction..."); fflush(stdout);
	MICompact(GetRoot()->MISysMem);
	printf(" Completed.\n");

	printf("\nNew Memory Statistics:\n");
	StatMem(&totalsize, &totalfree, &largestfree, &percfree);
	printf("total size %d, total used %d,\ntotal free %d, largest free block %d, %% free %d\n", totalsize, totalsize-totalfree, totalfree, largestfree, percfree);
}
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
	MICompact(&(GetRoot()->MISysMem));
@
