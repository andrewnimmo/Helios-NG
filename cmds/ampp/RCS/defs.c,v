head	1.2;
access;
symbols
	Helios_1_3_1:1.2
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios1_3:1.1
	C40_Field_Test_2:1.1
	C40_Field_Test_R1:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.2
date	93.08.12.16.41.28;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	90.09.26.19.02.36;	author paul;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fixed compile time warnings (for C40)
@
text
@/****************************************************************/
/* File: defs.c                                                 */
/*                                                              */
/* Routines to manipulate object defintions                     */
/*                                                              */
/* Author: NHG 19-Feb-87                                        */
/****************************************************************/
#ifdef __TRAN
static char *RcsId = "$Id: defs.c,v 1.1 1990/09/26 19:02:36 paul Exp nickc $ Copyright (C) Perihelion Software Ltd.";
#endif
  
#include "ampp.h"

static struct Def *freedefs = NULL;

/********************************************************/
/* adddef                                               */
/*                                                      */
/* add a new defintion for the given symbol.            */
/*                                                      */
/********************************************************/

PUBLIC void adddef(
		   INT type,
		   struct Symbol *sym,
		   INT value )
{
        struct Def *def = freedefs;
        
        if( def == NULL ) def = New(struct Def); 
        else freedefs = def->prev;

        def->type = type;
        def->sym = sym;
        def->prev = sym->definition;
        def->Value.value = value;

        sym->definition = def;
}

/********************************************************/
/* unwind                                               */
/*                                                      */
/* Clear the last definition of the given symbol        */
/*                                                      */
/********************************************************/

PUBLIC void unwind(struct Symbol *sym)
{

        struct Def *def = sym->definition;

	if( def == NULL ) return;
        sym->definition = def->prev;
        if( def->type == s_macro ) freebuf(&(def->Value.macro->def));

	def->prev = freedefs;
	freedefs = def;

}

@


1.1
log
@Initial revision
@
text
@d8 4
a11 2
static char *RcsId = "$Id$ Copyright (C) Perihelion Software Ltd.";

d23 4
a26 4
PUBLIC void adddef(type,sym,value)
INT type;
struct Symbol *sym;
INT value;
d48 1
a48 2
PUBLIC void unwind(sym)
struct Symbol *sym;
@
