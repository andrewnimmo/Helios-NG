head	1.6;
access;
symbols
	Helios_1_3_1:1.6
	Helios_C40_1_3_Official_Release:1.6
	Alenia_release:1.6
	Helios1_3:1.6
	C40_Field_Test_2:1.6
	C40_Field_Test_R1:1.6
	Helios13_beta:1.5
	Helios1_2_2:1.4
	Helios1_2_2Beta:1.4
	Helios1_2_1:1.4;
locks; strict;
comment	@# @;


1.6
date	92.06.29.17.03.59;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	91.12.02.15.15.28;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.03.06.11.42.56;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	90.10.22.15.56.33;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.10.22.15.55.57;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.26.19.03.04;	author paul;	state Exp;
branches;
next	;


desc
@@


1.6
log
@fixed for remote source compilation
,
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Assembler Macro Pre-Processor (AMPP)
#
# File: /HSRC/cmds/ampp/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.5 1991/12/02 15:15:28 martyn Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = SUN4
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/ampp

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default" - should make this component in its proc subdir
# "install" - copy the new component to $(HPROD) production directory
# "clean"   - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HVPATH):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = ampp

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) ampp $(BIN)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

#Full set of library object files
#OBJECTS	= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o)

# C source files
SOURCES.c	= ampp.c macro.c lex.c sym.c builtin.c defs.c \
		putback.c charstack.c output.c

# AMPP source files
SOURCES.a	= #t.a			# test file

# C header files
HEADERS.c	= ampp.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile hash.c


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
else
  NCFLAGS := $(NCFLAGS) -wd
endif

# Note any library def files to be linked with
LIBDEFS	=


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

$(OBJECTS): ampp.h

ampp:	$(OBJECTS) 
	$(LINK) $(LINKFLAGS) -o$@@ -s30000 -h50000 -nampp $(LIB)/cstart.o $^



#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.5
log
@finally removed ORION
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/03/06 11:42:56 martyn Exp martyn $
d68 9
a76 1
VPATH := $(HSRC)/$(COMPONENT)
@


1.4
log
@removed t.a
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 90/10/22 15:56:33 paul Exp $
d29 1
a29 1
    HHOST = ORION
@


1.3
log
@correct SOURCES.c/h/odd
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/09/26 19:03:04 paul Exp Locker: nick $
d105 1
a105 1
SOURCES.a	= t.a			# test file
@


1.2
log
@nicks changes
@
text
@d114 1
a114 1
SOURCES.odd	= makefile
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
d124 1
a124 1
  NCFLAGS := $(NCFLAGS)
@
