head	1.1;
access;
symbols
	Helios_1_3_1:1.1
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios1_3:1.1
	C40_Field_Test_2:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1
	Helios1_2:1.1;
locks; strict;
comment	@ * @;


1.1
date	90.08.28.10.43.45;	author james;	state Exp;
branches;
next	;


desc
@@



1.1
log
@Initial revision
@
text
@/**
*
* Title:    Symbol Table Support.
*
* Author:   Andy England
*
* Date:     May 1988
*
* $Header$
*
**/

#include "list.h"

#define HASH_SIZE 20

typedef struct Symbol
{
  struct Symbol *Next;
  struct Symbol *Prev;
  char *Name;
} SYMBOL;

typedef struct Table
{
  LIST List[HASH_SIZE];
} TABLE;

#ifdef helios
TABLE *NewTable(void);
void FreeTable(TABLE *, void (*)());
void AddSymbol(TABLE *, SYMBOL *);
void RemSymbol(TABLE *, SYMBOL *);
SYMBOL *FindSymbol(TABLE *, char *);
int CountTable(TABLE *, int (*)());
void WalkTable(TABLE *, void (*)());
int HashFunction(char *);
#else
TABLE *NewTable();
void FreeTable();
void AddSymbol();
void RemSymbol();
SYMBOL *FindSymbol();
int CountTable();
void WalkTable();
int HashFunction();
#endif

@
