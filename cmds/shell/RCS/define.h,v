head	1.7;
access;
symbols
	Helios_1_3_1:1.7
	Helios_C40_1_3_Official_Release:1.6
	Alenia_release:1.6
	Helios1_3:1.6
	C40_Field_Test_2:1.6
	C40_Field_Test_R1:1.5
	Helios13_beta:1.5
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.4
	Helios1_2:1.3;
locks; strict;
comment	@ * @;


1.7
date	93.08.12.15.19.52;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.09.02.15.33.23;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.04.10.16.19.05;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.01.23.17.22.07;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	90.11.13.10.50.44;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	90.11.12.17.17.04;	author martyn;	state Exp;
branches;
next	1.1;

1.1
date	90.08.23.15.50.52;	author james;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fixed compile time warnings
@
text
@/**
*
* Title:  Helios Shell - Define header file
*
* Author: Andy England
*
* Date:   May 1988
*
*         (c) CopyRight 1988, Perihelion Software Ltd.
*
*         All Rights Reserved.
*
* $Header: /hsrc/cmds/shell/RCS/define.h,v 1.6 1992/09/02 15:33:23 martyn Exp nickc $
*
**/

#define ignore (void)
#define AND &&
#define OR  ||

#define new(type) (type *)newmemory(sizeof(type))
#define OK 0

#define WORD_MAX    1024
#define LINE_MAX    255
#define VARNAME_MAX 20
#define NUMSTR_MAX  10

#define READ       0
#define WRITE      1
#define DIAGNOSTIC 2

#define lowbyte(w) ((w) & 0377)
#define highbyte(w) lowbyte((w) >> 8)

#define PROMPT "% "

#define SCREEN_WIDTH 80

#define ERR_TOOFEWARGS   0
#define ERR_TOOMANYARGS  1
#define ERR_VARIABLE     2
#define ERR_BADNUMBER    3
#define ERR_NOTFOUND     4
#define ERR_VARSYNTAX    5
#define ERR_SUBSCRIPT    6
#define ERR_EVENT        7
#define ERR_NOTINLOOP    8
#define ERR_THEN         9
#define ERR_EMPTYIF     10
#define ERR_EXPSYNTAX   11
#define ERR_WORDLIST    12
#define ERR_LPAREN      13
#define ERR_RPAREN      14
#define ERR_INVALIDVAR  15
#define ERR_SYNTAX      16
#define ERR_DANGEROUS   17
#define ERR_NOENDIF     18
#define ERR_NOELSE      19
#define ERR_WORDTOOLONG 20
#define ERR_BADPARENS   21
#define ERR_REDIRECT    22
#define ERR_INPUT       23
#define ERR_OUTPUT      24
#define ERR_LIMIT       25
#define ERR_SCALEFACTOR 26
#define ERR_NULLCMD     27
#define ERR_NOMOREWORDS 28
#define ERR_MASK        29
#define ERR_ALIASLOOP   30
#define ERR_SQUOTE      31
#define ERR_BQUOTE      32
#define ERR_DQUOTE      33
#define ERR_USELOGOUT   34
#define ERR_NOFILENAME  35
#define ERR_NOMATCH     36
#define ERR_NOENDSW     37
#define ERR_NOLABEL     38
#define ERR_AUTOLOGOUT  39
#define ERR_NOTLOGIN    40
#define ERR_NOHOME      41
#define ERR_NOEND       42
#define ERR_USEEXIT     43
#define ERR_STACKEMPTY  44
#define ERR_BADDIR      45
#define ERR_NOTTHATDEEP 46
#define ERR_NOOTHERDIR  47
#define ERR_UNKNOWNUSER 48
#define ERR_NOTINCLUDED 49
#define ERR_TERMINATOR  50
#define ERR_NOMEMORY    51
#define ERR_AMBIGUOUS   52
#define ERR_MODIFIER    53
#define ERR_BADSUB      54
#define ERR_NOPREVLHS   55
#define ERR_BADAUX      56
#define ERR_NOCURJOB    57
#define ERR_NOPREVJOB   58
#define ERR_NOSUCHJOB   59
#define ERR_TERMINAL    60
#define ERR_DIAGNOSTIC	61
#define ERR_BADOPTION	62
#define ERR_BADSIGNAL	63

#define CTRL_D    0x04
#define BELL      0x07
#define BACKSPACE 0x08
#define SPACE     0x20
#define DELETE    0x7f
#define CSI       0x9b

#define ARGV_MAX 20
#define MAX_ARGV 230

#define MODE_EXECUTE 0x01
#define MODE_HISTORY 0x02
#define MODE_END     0x04
#define MODE_BREAK   0x08

#define FLAG_STDERR  0x01
#define FLAG_CLOBBER 0x02

#define setmode(f) (mode |= (f))
#define unsetmode(f) (mode &= ~(f))

#define alias(n, w)    setsubnode(&aliaslist, n, w)
#define findalias(n)   findsubnode(&aliaslist, n)
#define findvar(n)     findsubnode(&varlist, n)
#define getvar(n)      getsubnode(&varlist, n)
#define unalias(p)     patremsubnode(&aliaslist, p)
#define putalias()     fputsublist(stdout, &aliaslist, -1, (BOOL)0, (BOOL)0, (BOOL)0)
#define putvars()      fputsublist(stdout, &varlist,   -1, (BOOL)0, (BOOL)0, (BOOL)0)
#define putsublist(s, l, n, p, r) fputsublist(stdout, s, l, n, p, r)
#define putargv(a, n)  fputargv(stdout, a, n); fflush (stdout)

#define readoctal(a, p)   readnumber(a, p, 8)
#define readdecimal(a, p) readnumber(a, p, 10)
#define readhex(a, p)     readnumber(a, p, 16)

#define RESOURCE_MAX 6
#define JOBS_MAX 20
#define HASH_MAX 17

#define CHECKBUILTIN 1
#define NOBUILTIN    0

#ifdef HELIOS
#define MAX_BUILT 61
#else
#define MAX_BUILT 58
#endif
@


1.6
log
@change strequ and strnequ from amcros to subroutines, so that we can check
for NULL pointers.
@
text
@d13 1
a13 1
* $Header: /hsrc/cmds/shell/RCS/define.h,v 1.5 1991/04/10 16:19:05 martyn Exp martyn $
d131 2
a132 2
#define putalias()     fputsublist(stdout, &aliaslist, -1, 0, 0, 0)
#define putvars()      fputsublist(stdout, &varlist, -1, 0, 0, 0)
d146 6
@


1.5
log
@changed runsimplecmd to allow for ignoring of builtin commands
@
text
@d13 1
a13 1
* $Header: /hsrc/cmds/shell/RCS/define.h,v 1.4 1991/01/23 17:22:07 martyn Exp martyn $
a138 3

#define strequ(s, t)     (strcmp(s, t) == 0)
#define strnequ(s, t, n) (strncmp(s, t, n) == 0)
@


1.4
log
@added -[signame|signum] to kill. If task name is specified,
the Helios kill command is invoked.
@
text
@d13 1
a13 1
* $Header: /usr/perihelion/Helios/cmds/shell/RCS/define.h,v 1.3 90/11/13 10:50:44 martyn Exp $
d146 3
@


1.3
log
@re-define MAX_ARGV
@
text
@d13 1
a13 1
* $Header: /usr/perihelion/Helios/cmds/shell/RCS/define.h,v 1.2 90/11/12 17:17:04 martyn Exp Locker: martyn $
d103 1
@


1.2
log
@added define for maximum no of command args
@
text
@d13 1
a13 1
* $Header: /usr/perihelion/Helios/cmds/shell/RCS/define.h,v 1.1 90/08/23 15:50:52 james Exp $
d112 1
a112 1
#define MAX_ARGV 254
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
* $Header$
d112 1
@
