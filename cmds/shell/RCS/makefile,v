head	1.10;
access;
symbols
	Helios_1_3_1:1.9
	Helios_C40_1_3_Official_Release:1.8
	Alenia_release:1.8
	Helios1_3:1.8
	C40_Field_Test_2:1.8
	C40_Field_Test_R1:1.7
	Helios13_beta:1.6
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.5
	Helios1_2:1.2;
locks; strict;
comment	@# @;


1.10
date	94.01.13.17.23.37;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	93.08.04.15.19.58;	author bart;	state Exp;
branches;
next	1.8;

1.8
date	92.09.23.15.02.43;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	92.06.29.15.47.11;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.04.02.15.41.39;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.03.06.13.35.03;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.03.05.16.27.57;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	91.02.14.11.51.55;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.10.30.11.25.04;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.25.12.35.44;	author jon;	state Exp;
branches;
next	;


desc
@student work?
@


1.10
log
@objects reordered to allow ARM compiler to link
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Helios Shell
#
# File: /HSRC/cmds/shell/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.9 1993/08/04 15:19:58 bart Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONEY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/shell

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONEY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = shell

default: $(TARGETS) Xdefault

install: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(BIN)
	$(TOUCH) install

clean: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS		= job.o list.o shell.o builtin.o parse.o line.o sub.o \
	          hash.o error.o extra.o data.o signal.o helios.o

# C source files
SOURCES.c	= amiga.c atari.c builtin.c cdl.c data.c dodebug.c error.c \
		extra.c hash.c helios.c job.c line.c list.c parse.c shell.c \
		signal.c sub.c unix.c

# C header files
HEADERS.c  	= shell.h prototype.h define.h typedef.h cdl.h cdlobj.h \
	          unix.h _helios.h atari.h amiga.h dir.h dodebug.h _errno.h \
		  stat.h types.h csh.h

# AMPP source files
SOURCES.a	=

# AMPP macro files
HEADERS.m	=

# Any other source files + .c files are for other versions of shell
SOURCES.odd	= makefile # dodebug.c atari.c amiga.c


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
#	-DHELIOS, -DPOSIX	compulsory
#	-DCDL			interpret ^^, <|, <> and similar CDL funnies
#				N.B. "set cdl" still sends commands to the TFM
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -DHELIOS -DPOSIX
endif
ifeq ($(HPROC),C40)
  NCFLAGS := -Zps1 $(NCFLAGS) -DHELIOS -DPOSIX
endif
ifeq ($(HPROC),TRAN)
  NCFLAGS := $(NCFLAGS) -DHELIOS -DPOSIX -DCDL
endif

# Note any library def files to be linked with
LIBDEFS	= $(LIB)/fault.def


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

shell.o: shell.c dodebug.c cdl.c

$(OBJECTS): shell.h prototype.h define.h typedef.h cdl.h cdlobj.h _helios.h

shell: $(CSTART) $(LIBDEFS) $(OBJECTS)
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s20000 -h10000 $^



#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.9
log
@Arm and C40 versions of the shell are now compiled without the full
CDL support, i.e. it is no longer possible to go ps ^^ ps or anything
like that. This saves quite a bit of code.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1992/09/23 15:02:43 martyn Exp $
d94 2
a95 3
OBJECTS		= shell.o builtin.o parse.o line.o list.o sub.o \
	          hash.o error.o extra.o data.o job.o signal.o \
	          helios.o
@


1.8
log
@changed errno.h reference to _errno.h
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1992/09/23 15:00:49 martyn Exp $
d95 2
a96 2
	          hash.o error.o extra.o data.o job.o signal.o cdl.o \
	          helios.o dodebug.o
d122 3
d126 6
a132 6
else
 ifeq ($(HPROC),C40)
  NCFLAGS := $(NCFLAGS) -DHELIOS -DPOSIX -DCDL
 else
  NCFLAGS := $(NCFLAGS) -DHELIOS -DPOSIX -DCDL
 endif
d141 2
@


1.7
log
@changed references to helios.h to be references to _helios.h
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/04/02 15:41:39 paul Exp nickc $
d105 1
a105 1
	          unix.h _helios.h atari.h amiga.h dir.h dodebug.h errno.h \
@


1.6
log
@addition for the c40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1991/03/06 13:35:03 martyn Exp paul $
d105 1
a105 1
	          unix.h helios.h atari.h amiga.h dir.h dodebug.h errno.h \
d139 1
a139 1
$(OBJECTS): shell.h prototype.h define.h typedef.h cdl.h cdlobj.h helios.h
@


1.5
log
@some c files in SOURCES.c and SOURCES.odd
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/05 16:27:57 paul Exp $
d125 1
d127 3
@


1.4
log
@fixed install
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/02/14 11:51:55 paul Exp Locker: martyn $
d115 1
a115 1
SOURCES.odd	= makefile dodebug.c atari.c amiga.c
@


1.3
log
@corrected sources and added support for dodebug.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 90/10/30 11:25:04 paul Exp $
d23 6
a28 4
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif
a29 12
  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

a52 1
# "installdef" - If component is a library, make .def file and install in LIB
d58 1
a58 1
VPATH := $(HSRC)/$(COMPONENT)
d60 8
d74 1
a74 1
default : $(TARGETS) Xdefault
d76 1
a76 1
install	: $(TARGETS) Xinstall
d80 1
a80 1
clean	: Xclean
d82 1
a82 1
		core ../mkout install installdef Xinstall
@


1.2
log
@Corrected SOURCES to include all source files
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/09/25 12:35:44 jon Exp $
d99 1
a99 1
	          helios.o
d102 3
a104 3
SOURCES.c	= shell.c builtin.c parse.c line.c list.c sub.c \
	          hash.c error.c extra.c data.c job.c signal.c cdl.c \
	          helios.c unix.c
d109 1
a109 1
		  stat.h types.h
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
d75 1
a75 1
TARGETS := shell
d93 3
a95 3
SOURCES		:= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)
d97 3
a99 3
OBJECTS		:= shell.o builtin.o parse.o line.o list.o sub.o \
	           hash.o error.o extra.o data.o job.o signal.o cdl.o \
	           helios.o
d102 3
a104 3
SOURCES.c	:= shell.c builtin.c parse.c line.c list.c sub.c \
	           hash.c error.c extra.c data.c job.c signal.c cdl.c \
	           helios.c unix.c
d107 3
a109 2
HEADERS.c  	:= shell.h prototype.h define.h typedef.h cdl.h cdlobj.h \
	           unix.h helios.h atari.h amiga.h 
d112 1
a112 1
SOURCES.a	:=
d115 1
a115 1
HEADERS.m	:=
d117 2
a118 2
# Any other source files
SOURCES.odd	:= makefile
d132 1
a132 1
LIBDEFS	:= $(LIB)/fault.def
@
