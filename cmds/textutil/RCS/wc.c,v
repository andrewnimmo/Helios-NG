head	1.4;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2
	Helios1_2:1.2;
locks; strict;
comment	@ * @;


1.4
date	94.05.12.13.39.36;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	93.07.12.15.35.52;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	90.08.23.10.39.58;	author james;	state Exp;
branches;
next	1.1;

1.1
date	90.08.22.16.42.42;	author james;	state Exp;
branches;
next	;


desc
@returns word line and character count for a file
@


1.4
log
@fixed compile time warnings for ARM world
@
text
@/* wc - count lines, words and characters	Author: David Messer */
#ifdef __TRAN
static char *rcsid = "$Header: /users/nickc/RTNucleus/cmds/textutil/RCS/wc.c,v 1.3 1993/07/12 15:35:52 nickc Exp nickc $";
#endif

#include <stdio.h>
#define isdigit(c) (c >= '0' && c <= '9')
#define isspace(c) (c==' ' || c=='\t' || c=='\n' || c=='\f' || c=='\r')

/*
 *
 *	Usage:  wc [-lwc] [names]
 *
 *		Flags:
 *			l - count lines.
 *			w - count words.
 *			c - count characters.
 *
 *		Flags l, w, and c are default.  
 *		Words are delimited by any non-alphabetic character.
 *
 *  Released into the PUBLIC-DOMAIN 02/10/86
 *
 *	If you find this program to be of use to you, a donation of
 *	whatever you think it is worth will be cheerfully accepted.
 *
 *	Written by: David L. Messer
 *				P.O. Box 19130, Mpls, MN,  55119
 *      Program (heavily) modified by Andy Tanenbaum 
 */

extern void exit(int);

void usage(void);
void count(FILE *);

int lflag;			/* Count lines */
int wflag;			/* Count words */
int cflag;			/* Count characters */

long lcount;			/* Count of lines */
long wcount;			/* Count of words */
long ccount;			/* Count of characters */

long ltotal;			/* Total count of lines */
long wtotal;			/* Total count of words */
long ctotal;			/* Total count of characters */


void count(FILE *input )
{
  register int c;
  register int word = 0;

	lcount = 0;
	wcount = 0;
	ccount = 0;

  while((c = getc(input)) > 0) {
	ccount++;

	if(isspace(c)) {
		if(word) wcount++;
		word = 0;
	} else {
		word = 1;
	}

	if (c == '\n' || c == '\f') lcount++;
  }
  ltotal += lcount;
  wtotal += wcount;
  ctotal += ccount;
}

void usage(void)
{
  fprintf(stderr, "Usage: wc [-l] [-w] [-c] <filelist>\n");
  exit(1);
}

int
main(
     int argc,
     char *argv[] )
{
  FILE *input;
  int k;
  char *cp;
  int tflag, files;

  /* Get flags. */
  files = argc - 1;
  k = 1;
  cp = argv[1];
  if (*cp++ == '-') {
	files--;
	k++;			/* points to first file */
	while (*cp != 0) {
		switch (*cp) {
			case 'l':	lflag++;	break;
			case 'w':	wflag++;	break;
			case 'c':	cflag++;	break;
			default:	usage();
		}
		cp++;
	}
  }

  /* If no flags are set, treat as wc -lwc. */
  if(!lflag && !wflag && !cflag) {
	lflag = 1;
	wflag = 1;
	cflag = 1;
  }

  /* Process files. */
  tflag = files >= 2;		/* set if number of files > 1 */

  /* Check to see if input comes from std input. */
  if (k >= argc) {
	count(stdin);
	if(lflag) printf(" %6ld", lcount);
	if(wflag) printf(" %6ld", wcount);
	if(cflag) printf(" %6ld", ccount);
	putchar('\n');
	exit(0);
  }

  /* There is an explicit list of files.  Loop on files. */
  while (k < argc) {
	if ((input = fopen(argv[k], "r")) == NULL) {
		fprintf(stderr, "wc: cannot open %s for input\n", argv[k]);
                exit(1);
	} else {
		/* Next file has been opened as std input. */
		count(input);
		if(lflag) printf(" %6ld", lcount);
		if(wflag) printf(" %6ld", wcount);
		if(cflag) printf(" %6ld", ccount);
		printf(" %s\n", argv[k]);
		fclose( input );
	}
	k++;
  }

  if(tflag) {
	if(lflag) printf(" %6ld", ltotal);
	if(wflag) printf(" %6ld", wtotal);
	if(cflag) printf(" %6ld", ctotal);
	printf(" total\n");
  }
  return 0;
}
@


1.3
log
@fixed compile time warnings
@
text
@d2 3
a4 2

static char *rcsid = "$Header: /hsrc/cmds/textutil/RCS/wc.c,v 1.2 1990/08/23 10:39:58 james Exp nickc $";
@


1.2
log
@*** empty log message ***
@
text
@d3 1
a3 1
static char *rcsid = "$Header: /usr/perihelion/Helios/cmds/com/RCS/wc.c,v 1.1 90/08/22 16:42:42 james Exp Locker: james $";
d48 37
a84 3
int main(argc, argv)
int argc;
char *argv[];
d122 3
a124 3
	if(lflag) printf(" %6d", lcount);
	if(wflag) printf(" %6d", wcount);
	if(cflag) printf(" %6d", ccount);
d137 3
a139 3
		if(lflag) printf(" %6d", lcount);
		if(wflag) printf(" %6d", wcount);
		if(cflag) printf(" %6d", ccount);
d147 3
a149 3
	if(lflag) printf(" %6d", ltotal);
	if(wflag) printf(" %6d", wtotal);
	if(cflag) printf(" %6d", ctotal);
a152 33
}

void count(input)
FILE *input;
{
  register int c;
  register int word = 0;

	lcount = 0;
	wcount = 0;
	ccount = 0;

  while((c = getc(input)) > 0) {
	ccount++;

	if(isspace(c)) {
		if(word) wcount++;
		word = 0;
	} else {
		word = 1;
	}

	if (c == '\n' || c == '\f') lcount++;
  }
  ltotal += lcount;
  wtotal += wcount;
  ctotal += ccount;
}

void usage(void)
{
  fprintf(stderr, "Usage: wc [-l] [-w] [-c] <filelist>\n");
  exit(1);
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
static char rcsid[] = "$Header$";
@
