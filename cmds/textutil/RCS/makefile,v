head	1.10;
access;
symbols
	Helios_1_3_1:1.8
	Helios_C40_1_3_Official_Release:1.8
	Alenia_release:1.8
	Helios1_3:1.8
	C40_Field_Test_2:1.8
	C40_Field_Test_R1:1.7
	Helios13_beta:1.5;
locks; strict;
comment	@# @;


1.10
date	94.06.10.11.34.56;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	94.06.07.12.34.29;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.09.23.15.46.04;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	92.06.29.16.39.17;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.06.29.16.29.02;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.03.31.15.48.12;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.03.11.14.58.54;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	92.03.11.11.17.34;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	91.12.06.12.03.40;	author martyn;	state Exp;
branches;
next	1.1;

1.1
date	91.12.04.18.09.55;	author martyn;	state Exp;
branches;
next	;


desc
@makefile for extra commands
@


1.10
log
@made rules silent
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: General Commands
#
# File: /HSRC/cmds/textutil/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.9 1994/06/07 12:34:29 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#	(c) Copyright 1994 Perihelion Distributed Software
#
# WARNING: assumes you are using GNUmake.
#
#
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

ifndef HPROC
include /hsrc/makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/textutil

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
 HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HVPATH):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = comm join uniq fold colrm rev yes leave sort diff egrep grep \
	  fgrep head tail more pr split strings xlatecr wc

default: $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(BIN)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(HEADERS.c) $(SOURCES.odd)

OBJECTS		= $(SOURCES.c:.c=.o)

# C header files
HEADERS.c	= linebuffer.h system.h regexp.h

# Any other source files
SOURCES.odd	= makefile

# Bog standard Regular commands
SOURCES.c	 = colrm.c fold.c leave.c rev.c sort.c yes.c comm.c join.c \
		   uniq.c error.c linebuffer.c xmalloc.c getopt.c getopt1.c \
		   regexp.c regsub.c fgrep.c head.c diff.c egrep.c grep.c \
	  	   tail.c more.c pr.c split.c strings.c \
		   xlatecr.c wc.c

#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),TRAN)
  NCFLAGS := $(NCFLAGS) -wadfsv -ecpz -D_BSD
else
  NCFLAGS := $(NCFLAGS) -D_BSD
endif

%: %.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $(CSTART) $@@.o

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

#------------------------------------------------------------------------

comm : $(CSTART) comm.o linebuffer.o error.o xmalloc.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 -l$(LIB)/bsd.lib $^

join : $(CSTART) join.o linebuffer.o error.o xmalloc.o getopt.o getopt1.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib

uniq : $(CSTART) uniq.o linebuffer.o error.o xmalloc.o getopt.o getopt1.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib

fold : $(CSTART) fold.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib

colrm:  $(CSTART) colrm.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

yes:  $(CSTART) yes.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

rev:  $(CSTART) rev.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

tail:  $(CSTART) tail.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

more:  $(CSTART) more.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

leave:  $(CSTART) leave.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

head:  $(CSTART) head.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

diff:  $(CSTART) diff.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib

sort:  $(CSTART) sort.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

pr:  $(CSTART) pr.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

split:  $(CSTART) split.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

strings:  $(CSTART) strings.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib

xlatecr:  $(CSTART) xlatecr.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib

wc:  $(CSTART) wc.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^

regsub.o regexp.o grep.o: regexp.h

grep:  $(CSTART) grep.o regexp.o regsub.o 
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s8000 -h4000 $^

egrep:  $(CSTART) egrep.o regexp.o regsub.o 
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s8000 -h4000 $^

fgrep:  $(CSTART) fgrep.o
	@@ echo Linking $@@ ...
	@@ $(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^


comm.o : comm.c linebuffer.h system.h
join.o : join.c linebuffer.h system.h
uniq.o : uniq.c linebuffer.h system.h

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.9
log
@reorder link line
@
text
@d13 1
a13 2
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.8 1992/09/23 15:46:04 martyn Exp nickc $
d15 1
d118 2
a119 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $(CSTART) $@@.o
d127 2
a128 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 -l$(LIB)/bsd.lib $^ 
d131 2
a132 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
d135 2
a136 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
d139 2
a140 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
d143 2
a144 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d147 2
a148 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d151 2
a152 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d155 2
a156 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d159 2
a160 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d163 2
a164 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d167 2
a168 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d171 2
a172 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
d175 2
a176 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d179 2
a180 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d183 2
a184 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d187 2
a188 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
d191 2
a192 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
d195 2
a196 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d201 2
a202 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s8000 -h4000 $^
d205 2
a206 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s8000 -h4000 $^
d209 2
a210 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
@


1.8
log
@removed duplicate fgrep.c, head.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/06/29 16:39:17 nickc Exp $
d126 1
a126 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^ -l$(LIB)/bsd.lib
@


1.7
log
@fixed weird bug introduced by previous delta
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1992/03/31 15:48:12 paul Exp $
d104 1
a104 1
	  	   fgrep.c head.c tail.c more.c pr.c split.c strings.c \
@


1.6
log
@fixed to work with remote source system
@
text
@d58 1
a58 1
VPATH := $(HSRC)/$(COMPONENT)
d61 1
a61 1
 VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d64 3
a66 3
vpath %.h $(VPATH)
vpath %.c $(VPATH)
vpath %.a $(VPATH)
@


1.5
log
@fixed non linking with bsd library for diff strings and xlatecr - on transputer
these commands should have crashed if they tried to print an error.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1992/03/11 14:58:54 paul Exp $
d59 8
@


1.4
log
@fixed for C40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1992/03/11 11:17:34 paul Exp $
d151 1
a151 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d163 1
a163 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
d166 1
a166 1
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $^
@


1.3
log
@fixed C40 NCFLAGS problem
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1991/12/06 12:03:40 martyn Exp $
d150 3
d156 15
d178 3
@


1.2
log
@more commands moved from cmds/com
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1991/12/04 18:09:55 martyn Exp martyn $
d103 2
a104 2
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
d106 1
a106 1
  NCFLAGS := $(NCFLAGS) -wadfsv -ecpz -D_BSD
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
# File: /HSRC/cmds/extra/makefile
d14 1
a14 1
# RcsId: $Id: makefile,v 1.26 1991/12/04 16:09:53 martyn Exp $
d42 1
a42 1
COMPONENT = cmds/extras
d64 2
a65 1
TARGETS = comm join uniq fold colrm rev yes leave sort
d87 1
a87 1
HEADERS.c	= linebuffer.h system.h
d94 4
a97 1
		   uniq.c error.c linebuffer.c xmalloc.c getopt.c getopt1.c
a115 1
# Special cases
d129 1
a129 1
leave : $(CSTART) leave.o
d132 1
a132 1
colrm : $(CSTART) colrm.o
d135 1
a135 1
rev : $(CSTART) rev.o
d138 1
a138 1
yes : $(CSTART) yes.o
d141 1
a141 1
sort : $(CSTART) sort.o
d143 18
@
