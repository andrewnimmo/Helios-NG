head	1.5;
access;
symbols
	Helios1_3:1.4
	Helios13_beta:1.4
	Helios1_2_2:1.4
	Helios1_2_2Beta:1.4
	Helios1_2_1:1.4
	Helios1_2:1.2;
locks; strict;
comment	@# @;


1.5
date	94.09.23.08.46.46;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	91.03.12.13.19.33;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	91.03.07.15.37.17;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	90.10.17.16.08.34;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.13.17.11.29;	author nick;	state Exp;
branches;
next	;


desc
@@


1.5
log
@fixed to work when compiling on Betty
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: cc
#
# File: /HSRC/cmds/cc/compiler/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.4 1991/03/12 13:19:33 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/cc/compiler

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
VPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
 VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
endif

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = nc

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) nc $(BIN)/cc
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	= bind.c builtin.c driver.c stubs.c pp.c preparse.c \
		  debug.c lex.c misc.c IEEEflt.c cg.c cg1.c cg2.c emit.c \
		  sem.c syn.c synprint.c vargen.c showcode.c optimise.c getargs.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= AEops.h cchdr.h cg.h modes.h system.h util.h xpuops.h \
		  xpuspec.h xrefs.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Other generic component variables:

NCFLAGS := $(NCFLAGS) -DTARGET_IS_XPUTER -DOFFSETOF_FIX -DDBX -DNEWCAST

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) 
else
ifeq ($(HPROC),TRAN)
  NCFLAGS := $(NCFLAGS) -wadfsv -ecpz
else
  NCFLAGS := $(NCFLAGS)
endif
endif

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.4
log
@fixed ncflags to include defines
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/03/07 15:37:17 martyn Exp $
d96 1
a96 1
		  sem.c syn.c synprint.c vargen.c showcode.c optimise.c
@


1.3
log
@removed headers from source list
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 90/10/17 16:08:34 nick Exp Locker: martyn $
a52 1
# "installdef" - If component is a library, make .def file and install in LIB
d61 1
a61 1
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d72 1
a72 1
install	: installdef $(TARGETS) Xinstall
a75 4
installdef:	# If this is a library, enter all .def files here (to install)
#	$(CP) $^ $(LIB)
#	$(TOUCH) installdef

d78 1
a78 1
		core ../mkout install installdef Xinstall
d115 1
a115 1
DEFINES := $(DEFINES) -DTARGET_IS_XPUTER -DOFFSETOF_FIX -DDBX -DNEWCAST
a127 3
# Note any library def files to be linked with
LIBDEFS	:=

a131 3

# uncomment if you have compiler or makedepend generated dependencies
#include depends
@


1.2
log
@uses DFLT.mak for local options, RSRC for remote sources
@
text
@d14 1
a14 1
# RcsId: $Id$
d108 1
a108 1
		  xpuspec.h xrefs.h limits.h stdarg.h stddef.h stdlib.h string.h
@


1.1
log
@Initial revision
@
text
@d23 6
a28 16
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif
d61 4
d143 1
@
