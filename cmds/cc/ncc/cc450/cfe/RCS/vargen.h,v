head	1.1;
access;
symbols
	Jamie_17_Aug:1.1;
locks; strict;
comment	@ * @;


1.1
date	93.07.14.14.06.32;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@#pragma force_top_level
#pragma include_only_once
/*
 * cfe/vargen.h:
 * Copyright (C) Acorn Computers Ltd., 1988
 * Copyright (C) Codemist Ltd., 1988.
 */

/*
 * RCS $Revision: 1.5 $ Codemist 2
 * Checkin $Date: 93/04/01 13:18:00 $
 * Revising $Author: hmeekings $
 */

#ifndef _vargen_h
#define _vargen_h

#ifndef _defs_LOADED
#  include "defs.h"
#endif

/*
 * ****** NASTY EXPORT - RECONSIDER ******
 * Should be static except for initstaticvar(datasegment) in compiler.c
 */
extern void initstaticvar(Binder *b, bool topflag);

/* The following routine generates statics, which MUST have been instated
   with instate_declaration().  Dynamic initialistions are turned into
   assignments for rd_block() by returning the expression tree; NULL means
   no dynamic initialization. Top-level dynamic initialization code (for C++)
   is also generated in the module initialization function.

   Ensure type errors are noticed here (for line numbers etc.)
*/
extern Expr *genstaticparts(DeclRhsList * const d, bool topflag,
                            bool dummy_call);
/* @@@@@@ since the 'const' isn't part of the function type in the line    */
/* @@@@@@ above, AM wonders why it has been added.                         */

#ifdef CPLUSPLUS
extern TopDecl *vg_dynamic_init(void);
extern void vg_ref_dynamic_init(void);
extern void vargen_init(void);
#endif

#endif

/* end of cfe/vargen.h */
@
