head	1.1;
access;
symbols;
locks
	nickc:1.1; strict;
comment	@# @;


1.1
date	93.07.14.13.53.02;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@# makef0 - self-bootstrapping Makefile for armcc
# Copyright (C) Advanced RISC Machines 1991.
#
# This Makefile is intended to be used as follows:
# 1/ Check the validity of/customize the list of places containing sources
#    (SRCS, below); check also the tool and destination definitions.
# 2/ Do "make -f makef0 make" to generate Makefile.
# 3/ Do "make sources" to generate the source files.
# 4/ Do "make depend"
# 5/ Do "make ncc" to make the compiler.
# 6/ Do "make release" to unleash it on the world.

# Temporary files used to bootstrap the Makefile...
TMP1=maketmp1
TMP2=maketmp2

# Directories containing ANSI C source...
SRCS=../arm ../mip ../cfe ../ccarm

CLX=../../clx/riscos
LIB=../clib/o/ansilib

# Tools and their command-line options
CC=../foonix/ncc
CFLAGS=-ffah -ze1 -I. -I$(CLX) -DNO_VERSION_STRINGS -DEXTENSION_SYSV
LD=../../armlink/armlink
LINKFLAGS=

OBJS=aaof.o asd.o asm.o gen.o mcdep.o peephole.o \
     aetree.o bind.o builtin.o cg.o codebuf.o compiler.o cse.o csescan.o \
     driver.o flowgraf.o ieeeflt.o jopprint.o misc.o regalloc.o \
     regsets.o store.o \
     lex.o pp.o sem.o simplify.o syn.o vargen.o \
     version.o

.SUFFIXES: .c .o .s

all:
        echo Use \'make ncc\' to make a compiler

ncc: ${OBJS}
        ${LD} -o ncc -via ofiles $(CLX)/fname.o $(CLX)/disass.o \
                $(CLX)/prgname.o $(LIB)

.c.o:
        ${CC} -c ${CFLAGS} $<

make:
        if [ -f makef0 ]; then \
          cp makef0 Makefile; \
        else \
          cp Makefile makef0; \
        fi
        echo 'sources:' > ${TMP2}
        cp /dev/null ${TMP1}
        for s in ${SRCS}; do\
          for e in c h; do \
            for j in $$s/$$e/*; do \
              BASE=`basename $$j` ;\
              echo $${BASE}.$$e: $$j >> ${TMP1};\
              echo "    if [ -f $${BASE}.$$e ]; then :; else" 'ln -s' \
                $$j $${BASE}.$$e "; fi" >> ${TMP1};\
              echo $${BASE}.$$e >> ${TMP2}; \
            done ;\
          done ;\
        done
        awk ' { if (rec == "") { rec = $$0 } \
                else if (length(rec $$0) > 66) \
                  { print rec, "\\"; rec = "    " $$0; } \
                else rec = rec " " $$0 \
              } \
              END { print rec ; print } ' \
            ${TMP2} >> Makefile
        cat ${TMP1} >> Makefile
        rm ${TMP1} ${TMP2}
        echo '#' >> Makefile
        echo '# DO NOT DELETE THIS LINE -' "'make depend' depends on it" >> Makefile
        echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> Makefile
        echo '#' >> Makefile

depend:
          echo '#' > ${TMP1}
          for i in *.c; do \
              ${CC} -M ${CFLAGS} $$i | \
              awk ' { if ($$1 != prev) \
                  { if (rec != "") print rec; rec = $$0; prev = $$1; } \
                  else { if (length(rec $$2) > 78) { print rec; rec = $$0; } \
                  else rec = rec " " $$2 } } \
                  END { print rec } ' >> ${TMP1}; done
          echo '/^# DO NOT DELETE THIS LINE/+2,$$d' > ${TMP2}
          echo '$$r ${TMP1}' >> ${TMP2}
          echo 'w' >> ${TMP2}
          cp Makefile Makefile.bak
          ed - Makefile < ${TMP2}
          rm ${TMP1} ${TMP2}
          echo '# DEPENDENCIES MUST END AT END OF FILE' >> Makefile
          echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> Makefile
          echo '# see make depend above' >> Makefile

sources: aaof.c asd.c asm.c gen.c mcdep.c peephole.c chunkfmt.h \
        mcdpriv.h mcerrs.h mcvsn.h objflfmt.h ops.h target.h aetree.c \
        bind.c builtin.c cg.c codebuf.c compiler.c cse.c csescan.c \
        driver.c flowgraf.c ieeeflt.c jopprint.c misc.c regalloc.c \
        regsets.c store.c version.c aeops.h aetree.h bind.h builtin.h cg.h \
        cgdefs.h codebuf.h compiler.h cse.h cseguts.h defaults.h defs.h \
        drivhelp.h flowgraf.h globals.h host.h jopcode.h mcdep.h miperrs.h \
        mipvsn.h regalloc.h regsets.h sixchar.h store.h util.h version.h \
        xrefs.h lex.c pp.c sem.c simplify.c syn.c vargen.c feerrs.h \
        fevsn.h lex.h pp.h sem.h simplify.h syn.h vargen.h headers.c \
        peeppat.c errors.h options.h riscos.h

aaof.c: ../arm/c/aaof
        if [ -f aaof.c ]; then :; else ln -s ../arm/c/aaof aaof.c ; fi
asd.c: ../arm/c/asd
        if [ -f asd.c ]; then :; else ln -s ../arm/c/asd asd.c ; fi
asm.c: ../arm/c/asm
        if [ -f asm.c ]; then :; else ln -s ../arm/c/asm asm.c ; fi
gen.c: ../arm/c/gen
        if [ -f gen.c ]; then :; else ln -s ../arm/c/gen gen.c ; fi
mcdep.c: ../arm/c/mcdep
        if [ -f mcdep.c ]; then :; else ln -s ../arm/c/mcdep mcdep.c ; fi
peephole.c: ../arm/c/peephole
        if [ -f peephole.c ]; then :; else ln -s ../arm/c/peephole peephole.c ; fi
chunkfmt.h: ../arm/h/chunkfmt
        if [ -f chunkfmt.h ]; then :; else ln -s ../arm/h/chunkfmt chunkfmt.h ; fi
mcdpriv.h: ../arm/h/mcdpriv
        if [ -f mcdpriv.h ]; then :; else ln -s ../arm/h/mcdpriv mcdpriv.h ; fi
mcerrs.h: ../arm/h/mcerrs
        if [ -f mcerrs.h ]; then :; else ln -s ../arm/h/mcerrs mcerrs.h ; fi
mcvsn.h: ../arm/h/mcvsn
        if [ -f mcvsn.h ]; then :; else ln -s ../arm/h/mcvsn mcvsn.h ; fi
objflfmt.h: ../arm/h/objflfmt
        if [ -f objflfmt.h ]; then :; else ln -s ../arm/h/objflfmt objflfmt.h ; fi
ops.h: ../arm/h/ops
        if [ -f ops.h ]; then :; else ln -s ../arm/h/ops ops.h ; fi
target.h: ../arm/h/target
        if [ -f target.h ]; then :; else ln -s ../arm/h/target target.h ; fi
aetree.c: ../mip/c/aetree
        if [ -f aetree.c ]; then :; else ln -s ../mip/c/aetree aetree.c ; fi
bind.c: ../mip/c/bind
        if [ -f bind.c ]; then :; else ln -s ../mip/c/bind bind.c ; fi
builtin.c: ../mip/c/builtin
        if [ -f builtin.c ]; then :; else ln -s ../mip/c/builtin builtin.c ; fi
cg.c: ../mip/c/cg
        if [ -f cg.c ]; then :; else ln -s ../mip/c/cg cg.c ; fi
codebuf.c: ../mip/c/codebuf
        if [ -f codebuf.c ]; then :; else ln -s ../mip/c/codebuf codebuf.c ; fi
compiler.c: ../mip/c/compiler
        if [ -f compiler.c ]; then :; else ln -s ../mip/c/compiler compiler.c ; fi
cse.c: ../mip/c/cse
        if [ -f cse.c ]; then :; else ln -s ../mip/c/cse cse.c ; fi
csescan.c: ../mip/c/csescan
        if [ -f csescan.c ]; then :; else ln -s ../mip/c/csescan csescan.c ; fi
driver.c: ../mip/c/driver
        if [ -f driver.c ]; then :; else ln -s ../mip/c/driver driver.c ; fi
flowgraf.c: ../mip/c/flowgraf
        if [ -f flowgraf.c ]; then :; else ln -s ../mip/c/flowgraf flowgraf.c ; fi
ieeeflt.c: ../mip/c/ieeeflt
        if [ -f ieeeflt.c ]; then :; else ln -s ../mip/c/ieeeflt ieeeflt.c ; fi
jopprint.c: ../mip/c/jopprint
        if [ -f jopprint.c ]; then :; else ln -s ../mip/c/jopprint jopprint.c ; fi
misc.c: ../mip/c/misc
        if [ -f misc.c ]; then :; else ln -s ../mip/c/misc misc.c ; fi
regalloc.c: ../mip/c/regalloc
        if [ -f regalloc.c ]; then :; else ln -s ../mip/c/regalloc regalloc.c ; fi
regsets.c: ../mip/c/regsets
        if [ -f regsets.c ]; then :; else ln -s ../mip/c/regsets regsets.c ; fi
store.c: ../mip/c/store
        if [ -f store.c ]; then :; else ln -s ../mip/c/store store.c ; fi
version.c: ../mip/c/version
        if [ -f version.c ]; then :; else ln -s ../mip/c/version version.c ; fi
aeops.h: ../mip/h/aeops
        if [ -f aeops.h ]; then :; else ln -s ../mip/h/aeops aeops.h ; fi
aetree.h: ../mip/h/aetree
        if [ -f aetree.h ]; then :; else ln -s ../mip/h/aetree aetree.h ; fi
bind.h: ../mip/h/bind
        if [ -f bind.h ]; then :; else ln -s ../mip/h/bind bind.h ; fi
builtin.h: ../mip/h/builtin
        if [ -f builtin.h ]; then :; else ln -s ../mip/h/builtin builtin.h ; fi
cg.h: ../mip/h/cg
        if [ -f cg.h ]; then :; else ln -s ../mip/h/cg cg.h ; fi
cgdefs.h: ../mip/h/cgdefs
        if [ -f cgdefs.h ]; then :; else ln -s ../mip/h/cgdefs cgdefs.h ; fi
codebuf.h: ../mip/h/codebuf
        if [ -f codebuf.h ]; then :; else ln -s ../mip/h/codebuf codebuf.h ; fi
compiler.h: ../mip/h/compiler
        if [ -f compiler.h ]; then :; else ln -s ../mip/h/compiler compiler.h ; fi
cse.h: ../mip/h/cse
        if [ -f cse.h ]; then :; else ln -s ../mip/h/cse cse.h ; fi
cseguts.h: ../mip/h/cseguts
        if [ -f cseguts.h ]; then :; else ln -s ../mip/h/cseguts cseguts.h ; fi
defaults.h: ../mip/h/defaults
        if [ -f defaults.h ]; then :; else ln -s ../mip/h/defaults defaults.h ; fi
defs.h: ../mip/h/defs
        if [ -f defs.h ]; then :; else ln -s ../mip/h/defs defs.h ; fi
drivhelp.h: ../mip/h/drivhelp
        if [ -f drivhelp.h ]; then :; else ln -s ../mip/h/drivhelp drivhelp.h ; fi
flowgraf.h: ../mip/h/flowgraf
        if [ -f flowgraf.h ]; then :; else ln -s ../mip/h/flowgraf flowgraf.h ; fi
globals.h: ../mip/h/globals
        if [ -f globals.h ]; then :; else ln -s ../mip/h/globals globals.h ; fi
host.h: ../mip/h/host
        if [ -f host.h ]; then :; else ln -s ../mip/h/host host.h ; fi
jopcode.h: ../mip/h/jopcode
        if [ -f jopcode.h ]; then :; else ln -s ../mip/h/jopcode jopcode.h ; fi
mcdep.h: ../mip/h/mcdep
        if [ -f mcdep.h ]; then :; else ln -s ../mip/h/mcdep mcdep.h ; fi
miperrs.h: ../mip/h/miperrs
        if [ -f miperrs.h ]; then :; else ln -s ../mip/h/miperrs miperrs.h ; fi
mipvsn.h: ../mip/h/mipvsn
        if [ -f mipvsn.h ]; then :; else ln -s ../mip/h/mipvsn mipvsn.h ; fi
regalloc.h: ../mip/h/regalloc
        if [ -f regalloc.h ]; then :; else ln -s ../mip/h/regalloc regalloc.h ; fi
regsets.h: ../mip/h/regsets
        if [ -f regsets.h ]; then :; else ln -s ../mip/h/regsets regsets.h ; fi
sixchar.h: ../mip/h/sixchar
        if [ -f sixchar.h ]; then :; else ln -s ../mip/h/sixchar sixchar.h ; fi
store.h: ../mip/h/store
        if [ -f store.h ]; then :; else ln -s ../mip/h/store store.h ; fi
util.h: ../mip/h/util
        if [ -f util.h ]; then :; else ln -s ../mip/h/util util.h ; fi
version.h: ../mip/h/version
        if [ -f version.h ]; then :; else ln -s ../mip/h/version version.h ; fi
xrefs.h: ../mip/h/xrefs
        if [ -f xrefs.h ]; then :; else ln -s ../mip/h/xrefs xrefs.h ; fi
lex.c: ../cfe/c/lex
        if [ -f lex.c ]; then :; else ln -s ../cfe/c/lex lex.c ; fi
pp.c: ../cfe/c/pp
        if [ -f pp.c ]; then :; else ln -s ../cfe/c/pp pp.c ; fi
sem.c: ../cfe/c/sem
        if [ -f sem.c ]; then :; else ln -s ../cfe/c/sem sem.c ; fi
simplify.c: ../cfe/c/simplify
        if [ -f simplify.c ]; then :; else ln -s ../cfe/c/simplify simplify.c ; fi
syn.c: ../cfe/c/syn
        if [ -f syn.c ]; then :; else ln -s ../cfe/c/syn syn.c ; fi
vargen.c: ../cfe/c/vargen
        if [ -f vargen.c ]; then :; else ln -s ../cfe/c/vargen vargen.c ; fi
feerrs.h: ../cfe/h/feerrs
        if [ -f feerrs.h ]; then :; else ln -s ../cfe/h/feerrs feerrs.h ; fi
fevsn.h: ../cfe/h/fevsn
        if [ -f fevsn.h ]; then :; else ln -s ../cfe/h/fevsn fevsn.h ; fi
lex.h: ../cfe/h/lex
        if [ -f lex.h ]; then :; else ln -s ../cfe/h/lex lex.h ; fi
pp.h: ../cfe/h/pp
        if [ -f pp.h ]; then :; else ln -s ../cfe/h/pp pp.h ; fi
sem.h: ../cfe/h/sem
        if [ -f sem.h ]; then :; else ln -s ../cfe/h/sem sem.h ; fi
simplify.h: ../cfe/h/simplify
        if [ -f simplify.h ]; then :; else ln -s ../cfe/h/simplify simplify.h ; fi
syn.h: ../cfe/h/syn
        if [ -f syn.h ]; then :; else ln -s ../cfe/h/syn syn.h ; fi
vargen.h: ../cfe/h/vargen
        if [ -f vargen.h ]; then :; else ln -s ../cfe/h/vargen vargen.h ; fi
headers.c: ../ccarm/c/headers
        if [ -f headers.c ]; then :; else ln -s ../ccarm/c/headers headers.c ; fi
peeppat.c: ../ccarm/c/peeppat
        if [ -f peeppat.c ]; then :; else ln -s ../ccarm/c/peeppat peeppat.c ; fi
errors.h: ../ccarm/h/errors
        if [ -f errors.h ]; then :; else ln -s ../ccarm/h/errors errors.h ; fi
options.h: ../ccarm/h/options
        if [ -f options.h ]; then :; else ln -s ../ccarm/h/options options.h ; fi
riscos.h: ../ccarm/h/riscos
        if [ -f riscos.h ]; then :; else ln -s ../ccarm/h/riscos riscos.h ; fi
#
# DO NOT DELETE THIS LINE - 'make depend' depends on it
# IF YOU PUT STUFF HERE IT WILL GO AWAY
#
aaof.o: aaof.c globals.h host.h options.h target.h defaults.h defs.h mcdep.h
aaof.o: cgdefs.h jopcode.h mcdpriv.h errors.h xrefs.h store.h codebuf.h
aaof.o: version.h builtin.h bind.h errors.h chunkfmt.h ../../clx/riscos/aof.h
aaof.o: cg.h ops.h
aetree.o:       aetree.c globals.h host.h options.h target.h defaults.h defs.h
aetree.o:       aetree.h defs.h store.h aeops.h builtin.h
asd.o:  asd.c globals.h host.h options.h target.h defaults.h defs.h mcdep.h
asd.o:  cgdefs.h jopcode.h mcdpriv.h aeops.h errors.h xrefs.h store.h codebuf.h
asd.o:  regalloc.h util.h bind.h sem.h builtin.h errors.h
asd.o:  ../../clx/riscos/asdfmt.h
asm.o:  asm.c globals.h host.h options.h target.h defaults.h defs.h mcdep.h
asm.o:  cgdefs.h jopcode.h mcdpriv.h xrefs.h store.h codebuf.h ops.h version.h
asm.o:  builtin.h errors.h ../../clx/riscos/disass.h
bind.o: bind.c globals.h host.h options.h target.h defaults.h defs.h defs.h
bind.o: aetree.h util.h codebuf.h cgdefs.h bind.h builtin.h sem.h store.h
bind.o: vargen.h xrefs.h errors.h aeops.h
builtin.o:      builtin.c globals.h host.h options.h target.h defaults.h defs.h
builtin.o:      defs.h builtin.h bind.h store.h aeops.h aetree.h
cg.o:   cg.c globals.h host.h options.h target.h defaults.h defs.h cg.h cgdefs.h
cg.o:   store.h codebuf.h aeops.h util.h xrefs.h jopcode.h regalloc.h regsets.h
cg.o:   cse.h flowgraf.h mcdep.h aetree.h builtin.h sem.h simplify.h bind.h
cg.o:   errors.h
codebuf.o:      codebuf.c globals.h host.h options.h target.h defaults.h defs.h
codebuf.o:      codebuf.h cgdefs.h store.h xrefs.h bind.h builtin.h util.h mcdep.h
codebuf.o:      jopcode.h errors.h aeops.h
compiler.o:     compiler.c globals.h host.h options.h target.h defaults.h defs.h
compiler.o:     compiler.h ../../clx/riscos/fname.h pp.h lex.h syn.h sem.h bind.h
compiler.o:     builtin.h vargen.h aetree.h cg.h cgdefs.h mcdep.h jopcode.h aeops.h
compiler.o:     xrefs.h store.h version.h errors.h riscos.h
cse.o:  cse.c globals.h host.h options.h target.h defaults.h defs.h cse.h
cse.o:  cgdefs.h cseguts.h regsets.h aeops.h jopcode.h store.h regalloc.h cg.h
cse.o:  flowgraf.h mcdep.h builtin.h errors.h
csescan.o:      csescan.c globals.h host.h options.h target.h defaults.h defs.h
csescan.o:      cse.h cgdefs.h cseguts.h regsets.h aeops.h jopcode.h store.h
csescan.o:      cgdefs.h builtin.h mcdep.h flowgraf.h regalloc.h errors.h
driver.o:       driver.c globals.h host.h options.h target.h defaults.h defs.h
driver.o:       compiler.h ../../clx/riscos/fname.h version.h drivhelp.h mcdep.h
driver.o:       cgdefs.h jopcode.h ../../clx/riscos/prgname.h
flowgraf.o:     flowgraf.c globals.h host.h options.h target.h defaults.h defs.h
flowgraf.o:     flowgraf.h cgdefs.h jopcode.h store.h cg.h codebuf.h regalloc.h
flowgraf.o:     regsets.h aeops.h util.h jopcode.h mcdep.h builtin.h simplify.h
flowgraf.o:     xrefs.h errors.h
gen.o:  gen.c globals.h host.h options.h target.h defaults.h defs.h mcdep.h
gen.o:  cgdefs.h jopcode.h mcdpriv.h aeops.h xrefs.h ops.h jopcode.h store.h
gen.o:  codebuf.h regalloc.h builtin.h bind.h cg.h errors.h
headers.o:      headers.c
ieeeflt.o:      ieeeflt.c globals.h host.h options.h target.h defaults.h defs.h
ieeeflt.o:      errors.h util.h
jopprint.o:     jopprint.c globals.h host.h options.h target.h defaults.h defs.h
jopprint.o:     cgdefs.h jopcode.h aeops.h aetree.h flowgraf.h
lex.o:  lex.c globals.h host.h options.h target.h defaults.h defs.h lex.h bind.h
lex.o:  pp.h store.h util.h aeops.h errors.h
mcdep.o:        mcdep.c globals.h host.h options.h target.h defaults.h defs.h mcdep.h
mcdep.o:        cgdefs.h jopcode.h mcdpriv.h compiler.h
misc.o: misc.c globals.h host.h options.h target.h defaults.h defs.h store.h
misc.o: aeops.h aetree.h lex.h util.h errors.h
peephole.o:     peephole.c globals.h host.h options.h target.h defaults.h defs.h
peephole.o:     mcdep.h cgdefs.h jopcode.h mcdpriv.h ops.h jopcode.h store.h
peephole.o:     errors.h cg.h regalloc.h peeppat.c
peeppat.o:      peeppat.c
pp.o:   pp.c globals.h host.h options.h target.h defaults.h defs.h pp.h syn.h
pp.o:   store.h errors.h headers.c
regalloc.o:     regalloc.c globals.h host.h options.h target.h defaults.h defs.h
regalloc.o:     regalloc.h cgdefs.h errors.h sem.h jopcode.h regsets.h store.h cg.h
regalloc.o:     mcdep.h flowgraf.h builtin.h aeops.h
regsets.o:      regsets.c globals.h host.h options.h target.h defaults.h defs.h
regsets.o:      regsets.h cgdefs.h store.h
sem.o:  sem.c globals.h host.h options.h target.h defaults.h defs.h sem.h bind.h
sem.o:  aetree.h builtin.h aeops.h store.h errors.h util.h
simplify.o:     simplify.c globals.h host.h options.h target.h defaults.h defs.h
simplify.o:     simplify.h sem.h bind.h aetree.h builtin.h store.h aeops.h errors.h
store.o:        store.c globals.h host.h options.h target.h defaults.h defs.h store.h
store.o:        defs.h mcdep.h cgdefs.h jopcode.h errors.h
syn.o:  syn.c globals.h host.h options.h target.h defaults.h defs.h syn.h pp.h
syn.o:  lex.h simplify.h bind.h sem.h aetree.h builtin.h vargen.h mcdep.h
syn.o:  cgdefs.h jopcode.h store.h errors.h aeops.h
vargen.o:       vargen.c globals.h host.h options.h target.h defaults.h defs.h
vargen.o:       vargen.h lex.h syn.h sem.h simplify.h bind.h builtin.h aetree.h
vargen.o:       codebuf.h regalloc.h cgdefs.h mcdep.h jopcode.h store.h aeops.h
vargen.o:       util.h xrefs.h errors.h
version.o:      version.c globals.h host.h options.h target.h defaults.h defs.h
version.o:      version.h mcdep.h cgdefs.h jopcode.h fevsn.h mipvsn.h mcvsn.h
# DEPENDENCIES MUST END AT END OF FILE
# IF YOU PUT STUFF HERE IT WILL GO AWAY
# see make depend above
@
