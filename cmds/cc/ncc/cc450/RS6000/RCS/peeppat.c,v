head	1.1;
access;
symbols;
locks; strict;
comment	@ * @;


1.1
date	93.07.14.13.53.02;	author nickc;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@static bool rproc__0(PendingOp *A, PendingOp **ops, RegisterUsage *u)
{ bool changed = NO;
        IGNORE(ops);
        if (p_value_unused(u, R_A2)) { A->peep |= P_A2FREE; changed = YES; }
        if (p_value_unused(u, R_A3)) { A->peep |= P_A3FREE; changed = YES; }
        if (p_value_unused(u, R_LR) &&
            ((procflags & NONLEAF) || (regmask & M_LR))) {
          A->peep |= P_LRFREE; changed = YES;
        }
        return changed;
      }
static bool rproc__1(PendingOp *A, PendingOp **ops, RegisterUsage *u)
{ IGNORE(ops);
        if (p_value_unused(u, R_LR)) { A->peep |= P_LRFREE; return YES; }
        return NO;
      }
static bool rproc__2(PendingOp *A, PendingOp **ops, RegisterUsage *u)
{ bool changed = NO;
        IGNORE(ops);
        if ((ops[0]->m & regbit(R_A2)) && p_value_unused(u, R_A2)) { A->peep |= P_A2FREE; changed = NO; }
        if ((ops[0]->m & regbit(R_A3)) && p_value_unused(u, R_A3)) { A->peep |= P_A3FREE; changed = NO; }
        return changed;
      }
static bool rproc__3(PendingOp *A, PendingOp **ops, RegisterUsage *u)
{ bool changed = NO;
        IGNORE(ops);
        if ((ops[0]->m & regbit(R_A2)) && p_value_unused(u, R_A2)) { A->peep |= P_A2FREE; changed = NO; }
        if ((ops[0]->m & regbit(R_A3)) && p_value_unused(u, R_A3)) { A->peep |= P_A3FREE; changed = NO; }
        return changed;
      }
static RProc * const rprocs[] = {
  rproc__0,
  rproc__1,
  rproc__2,
  rproc__3,
  0
};

typedef int32 propproc(J_OPCODE);
static propproc * const peepprops[] = {
 a_loads_r1,
 a_uses_r1,
 a_uses_r2,
 a_uses_r3
};
#define p_loads_r1 0
#define p_uses_r1 1
#define p_uses_r2 2
#define p_uses_r3 3
#define fb_(a, b) ((((int32)(a))<<8) | (b))
#define fh_(a, b) ((((int32)(a))<<16) | (b))
static const int32 peepsets[] = {
  /*  0*/J_PUSHC,
  /*  1*/J_POPM,
  /*  2*/J_MOVC,
  /*  3*/J_CLRC,
  /*  4*/J_PUSHC,
  /*  5*/J_CALLR,
  /*  6*/J_MULR,
  /*  7*/J_MLA,
  /*  8*/0,
  /*  9*/P_CMPZ,
  /* 10*/J_MOVC,
  /* 11*/J_PUSHC,
  /* 12*/(P_PRE+P_POST+P_CMPZ),
  /* 13*/J_TAILCALLK,
  /* 14*/J_TAILCALLR,
  /* 15*/P_RSHIFT,
  /* 16*/~P_RSHIFT,
  /* 17*/J_CMPK+Q_EQ,
  /* 18*/J_CMPK+Q_NE,
  /* 19*/J_CMPK+Q_UEQ,
  /* 20*/J_CMPK+Q_UNE,
  /* 21*/~(J_SHIFTMASK+J_SIGNED+J_UNSIGNED),
  /* 22*/J_MOVR,
  /* 23*/J_NEGR,
  /* 24*/J_NOTR,
  /* 25*/J_ADDK,
  /* 26*/J_ADDR,
  /* 27*/J_SUBR,
  /* 28*/J_RSBK,
  /* 29*/J_RSBR,
  /* 30*/J_ANDK,
  /* 31*/J_ANDR,
  /* 32*/J_BICR,
  /* 33*/J_ORRK,
  /* 34*/J_ORRR,
  /* 35*/J_EORK,
  /* 36*/J_EORR,
  /* 37*/J_SHLR,
  /* 38*/J_SHLK,
  /* 39*/J_SHRR,
  /* 40*/J_SHRK,
  /* 41*/J_RORR,
  /* 42*/J_RORK,
  /* 43*/J_MULR,
  /* 44*/J_MULK,
  /* 45*/J_MLA,
  /* 46*/~Q_MASK,
  /* 47*/J_CMPK,
  /* 48*/J_CMPR,
  /* 49*/J_CMPFK,
  /* 50*/J_CMPFR,
  /* 51*/J_CMPDK,
  /* 52*/J_CMPDR,
  /* 53*/~(J_SIGNED+J_UNSIGNED+J_NEGINDEX+J_SHIFTMASK),
  /* 54*/J_LDRFR,
  /* 55*/J_LDRDR,
  /* 56*/J_STRFR,
  /* 57*/J_STRDR,
  /* 58*/J_LDRBR,
  /* 59*/J_LDRWR,
  /* 60*/J_LDRR,
  /* 61*/J_STRBR,
  /* 62*/J_STRR,
  /* 63*/J_LDRFK,
  /* 64*/J_LDRDK,
  /* 65*/J_STRFK,
  /* 66*/J_STRDK,
  /* 67*/~(J_SIGNED+J_UNSIGNED),
  /* 68*/J_STRBK,
  /* 69*/J_LDRBK,
  /* 70*/J_LDRWK,
  /* 71*/J_LDRK,
  /* 72*/J_STRK,
  /* 73*/~(J_SIGNED+J_UNSIGNED+J_NEGINDEX),
  /* 74*/J_LDRBK,
  /* 75*/J_LDRBR,
  /* 76*/P_POST,
  /* 77*/J_ADDR,
  /* 78*/J_SUBR,
  /* 79*/J_RSBR,
  /* 80*/J_ANDR,
  /* 81*/J_ORRR,
  /* 82*/J_EORR,
  /* 83*/J_NOTR,
  /* 84*/J_SHLR,
  /* 85*/J_SHRR,
  /* 86*/J_RORR,
  /* 87*/~(J_SIGNED|J_UNSIGNED|Q_MASK),
  /* 88*/J_ADDR,
  /* 89*/J_ANDR,
  /* 90*/J_ORRR,
  /* 91*/J_EORR,
  /* 92*/J_SHLK,
  /* 93*/J_SHRK,
  /* 94*/J_RORK,
  /* 95*/J_ADCON,
  /* 96*/J_STRING,
  /* 97*/J_ANDR+J_SHIFTR,
  /* 98*/~(J_SHIFTVAL+J_SHIFTA),
  /* 99*/~J_SHIFTVAL,
  /*100*/J_CMPR+J_SHIFTR+J_SHIFTA+Q_EQ,
  /*101*/J_CMPR+J_SHIFTR+J_SHIFTA+Q_NE,
  /*102*/~J_SHIFTMASK,
  /*103*/J_B+Q_LT,
  /*104*/J_CONDEXEC+Q_LT,
  /*105*/J_B+Q_GE,
  /*106*/J_CONDEXEC+Q_GE,
  /*107*/J_CMPK+Q_LT,
  /*108*/J_CMPK+Q_GE,
  /*109*/J_ADDK,
  /*110*/J_SUBK,
  /*111*/J_RSBK,
  /*112*/J_ANDK,
  /*113*/J_ORRK,
  /*114*/J_EORK,
  /*115*/(P_PRE+P_POST),
  /*116*/J_STRK,
  /*117*/J_LDRK,
  /*118*/P_BASEALIGNED,
  /*119*/J_LDRWK+J_SIGNED,
  /*120*/J_LDRWR+J_SIGNED,
  /*121*/J_LDRWK+J_UNSIGNED,
  /*122*/J_LDRWR+J_UNSIGNED,
  /*123*/P_MS,
  /*124*/J_LDRBK+J_SIGNED,
  /*125*/J_LDRBR+J_SIGNED,
  /*126*/J_LDRR,
  /*127*/J_STRR,
  /*128*/J_LDRBR,
  /*129*/J_STRBR,
  /*130*/J_STRK,
  /*131*/J_STRR,
  /*132*/J_STRBK,
  /*133*/J_STRBR,
  0
};
static const PeepOpDef peepsubs[] = {
  /*  0*/{pot_op, 0, 0, 0, J_ADDR},
  /*  1*/{pot_peep, 0, 0, 0, 0},
  /*  2*/{pot_op, 0, 0, 0, J_ADDK},
  /*  3*/{pot_op, 0, 0, 0, J_MOVR},
  /*  4*/{pot_prop, 0, 0, 0, p_uses_r2},
  /*  5*/{pot_opinset, 0, 0, 6, fh_(0, 2)},
  /*  6*/{pot_peep_m, 0, 0, 0, fh_(9, 8)},
  /*  7*/{pot_prop, 0, 0, 0, p_uses_r3},
  /*  8*/{pot_prop, 0, 0, 0, p_uses_r1},
  /*  9*/{pot_prop, 0, 0, 0, p_loads_r1},
  /* 10*/{pot_peep_m, 0, 0, 0, fh_(12, 8)},
  /* 11*/{pot_opinset, 0, 0, 2, fh_(0, 6)},
  /* 12*/{pot_op, 0, 0, 0, J_MULR},
  /* 13*/{pot_op, 0, 0, 0, J_ANDR},
  /* 14*/{pot_peep_m, 0, 0, 0, fh_(15, 8)},
  /* 15*/{pot_op, 0, 0, 0, J_NOTR},
  /* 16*/{pot_peep_m, 0, 0, 0, fh_(16, 8)},
  /* 17*/{pot_andnot, 0, 0, 0, fh_(16, 1)},
  /* 18*/{pot_opinset_m, 0, 0, 24, fh_(21, 22)},
  /* 19*/{pot_op, 0, 0, 0, J_MOVK},
  /* 20*/{pot_opinset_m, 0, 0, 5, fh_(67, 68)},
  /* 21*/{pot_peep, 0, 0, 0, P_POST},
  /* 22*/{pot_opinset, 0, 0, 4, fh_(0, 63)},
  /* 23*/{pot_op, 0, 0, 0, J_MOVC},
  /* 24*/{pot_peep_m, 0, 0, 0, fh_(76, 8)},
  /* 25*/{pot_op, 0, 0, 0, J_LDRDK},
  /* 26*/{pot_opinset, 0, 0, 7, fh_(0, 77)},
  /* 27*/{pot_opinset_m, 0, 0, 3, fh_(67, 84)},
  /* 28*/{pot_op_m, 0, 0, 0, fh_(87, 48)},
  /* 29*/{pot_opinset, 0, 0, 4, fh_(0, 88)},
  /* 30*/{pot_opinset, 0, 0, 2, fh_(0, 78)},
  /* 31*/{pot_opinset_m, 0, 0, 3, fh_(67, 92)},
  /* 32*/{pot_op_m, 0, 0, 0, fh_(98, 97)},
  /* 33*/{pot_op, 0, 0, 0, J_LDRK},
  /* 34*/{pot_peep_m, 0, 0, 0, fh_(115, 8)},
  /* 35*/{pot_opinset, 0, 0, 2, fh_(0, 116)},
  /* 36*/{pot_op_m, 0, 0, 0, fh_(67, 70)},
  /* 37*/{pot_peep_m, 0, 0, 0, fh_(118, 8)},
  /* 38*/{pot_op, 0, 0, 0, J_LDRBK+J_SIGNED},
  /* 39*/{pot_opinset, 0, 0, 4, fh_(0, 119)},
  /* 40*/{pot_peep_m, 0, 0, 0, fh_(123, 8)},
  /* 41*/{pot_opinset, 0, 0, 2, fh_(0, 124)},
  /* 42*/{pot_opinset_m, 0, 0, 4, fh_(67, 126)}
};
static PeepReplace const replacements[] = {
  /*  0*/{prt_set, pf_op, pft_val, J_ADDK},
  /*  1*/{prt_set, pf_r1, pft_field, fb_(0, pf_r2)},
  /*  2*/{prt_set, pf_r2, pft_field, fb_(0, pf_r2)},
  /*  3*/{prt_set, pf_r3, pft_field, fb_(0, pf_r3)},
  /*  4*/{prt_set, pf_dataflow, pft_val, J_DEAD_R2},
  /*  5*/{prt_set, pf_r4, pft_val, 0},
  /*  6*/{prt_set, pf_op, pft_val, J_ADDK},
  /*  7*/{prt_set, pf_r1, pft_val, R_SP},
  /*  8*/{prt_set, pf_r2, pft_val, R_SP},
  /*  9*/{prt_set, pf_r3, pft_field, fb_(0, pf_r3)},
  /* 10*/{prt_set, pf_dataflow, pft_exprn, 21},
  /* 11*/{prt_asr, pf_none, pft_field, fb_(0, pf_r3)},
  /* 12*/{prt_set, pf_peep, pft_exprn, 22},
  /* 13*/{prt_set, pf_op, pft_field, fb_(0, pf_op)},
  /* 14*/{prt_set, pf_r1, pft_field, fb_(0, pf_r1)},
  /* 15*/{prt_set, pf_r2, pft_field, fb_(0, pf_r2)},
  /* 16*/{prt_set, pf_r3, pft_field, fb_(0, pf_r3)},
  /* 17*/{prt_set, pf_op, pft_val, J_ANDK},
  /* 18*/{prt_set, pf_r1, pft_field, fb_(0, pf_r3)},
  /* 19*/{prt_set, pf_r2, pft_field, fb_(0, pf_r3)},
  /* 20*/{prt_set, pf_r3, pft_exprn, 29},
  /* 21*/{prt_set, pf_peep, pft_val, P_CMPZ},
  /* 22*/{prt_set, pf_op, pft_val, J_ADDK},
  /* 23*/{prt_set, pf_r1, pft_exprn, 30},
  /* 24*/{prt_set, pf_r3, pft_val, 0},
  /* 25*/{prt_set, pf_peep, pft_val, 0},
  /* 26*/{prt_asr, pf_none, pft_exprn, 10},
  /* 27*/{prt_swapr2r3},
  /* 28*/{prt_set, pf_peep, pft_exprn, 32},
  /* 29*/{prt_set, pf_op, pft_exprn, 33},
  /* 30*/{prt_set, pf_r4, pft_field, fb_(1, pf_r3)},
  /* 31*/{prt_set, pf_r3, pft_field, fb_(1, pf_r2)},
  /* 32*/{prt_swapr2r3},
  /* 33*/{prt_set, pf_r4, pft_field, fb_(1, pf_r4)},
  /* 34*/{prt_set, pf_peep, pft_exprn, 35},
  /* 35*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 36*/{prt_set, pf_op, pft_val, J_BICR},
  /* 37*/{prt_set, pf_op, pft_exprn, 38},
  /* 38*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 39*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 40*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 41*/{prt_set, pf_op, pft_exprn, 39},
  /* 42*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 43*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 44*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 45*/{prt_set, pf_op, pft_val, J_TAILCALLX},
  /* 46*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 47*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 48*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 49*/{prt_set, pf_op, pft_exprn, 41},
  /* 50*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 51*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 52*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 53*/{prt_set, pf_op, pft_exprn, 42},
  /* 54*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 55*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 56*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 57*/{prt_set, pf_op, pft_val, J_CALLX},
  /* 58*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 59*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 60*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 61*/{prt_set, pf_op, pft_val, J_SHRK+J_SIGNED},
  /* 62*/{prt_set, pf_r2, pft_field, fb_(0, pf_r1)},
  /* 63*/{prt_set, pf_r3, pft_val, 24},
  /* 64*/{prt_set, pf_peep, pft_val, 0},
  /* 65*/{prt_set, pf_op, pft_exprn, 44},
  /* 66*/{prt_set, pf_r2, pft_field, fb_(0, pf_r1)},
  /* 67*/{prt_set, pf_r3, pft_val, 16},
  /* 68*/{prt_set, pf_peep, pft_val, 0},
  /* 69*/{prt_set, pf_op, pft_exprn, 46},
  /* 70*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 71*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 72*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 73*/{prt_set, pf_op, pft_val, J_TAILCALLI},
  /* 74*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 75*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 76*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 77*/{prt_set, pf_op, pft_exprn, 47},
  /* 78*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 79*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 80*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 81*/{prt_set, pf_op, pft_val, J_CALLI},
  /* 82*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /* 83*/{prt_set, pf_r4, pft_field, fb_(1, pf_r2)},
  /* 84*/{prt_set, pf_peep, pft_field, fb_(1, pf_peep)},
  /* 85*/{prt_set, pf_r3, pft_exprn, 48},
  /* 86*/{prt_set, pf_dataflow, pft_exprn, 49},
  /* 87*/{prt_asr, pf_none, pft_exprn, 10},
  /* 88*/{prt_proc, 0, 0, 3},
  /* 89*/{prt_swapr2r3},
  /* 90*/{prt_set, pf_peep, pft_exprn, 32},
  /* 91*/{prt_set, pf_r4, pft_field, fb_(1, pf_r3)},
  /* 92*/{prt_set, pf_r3, pft_field, fb_(1, pf_r2)},
  /* 93*/{prt_set, pf_op, pft_val, J_POPMB},
  /* 94*/{prt_set, pf_r1, pft_val, 8},
  /* 95*/{prt_set, pf_r2, pft_exprn, 30},
  /* 96*/{prt_asr, pf_none, pft_val, 8},
  /* 97*/{prt_set, pf_op, pft_val, J_MLA},
  /* 98*/{prt_set, pf_r2, pft_field, fb_(1, pf_r3)},
  /* 99*/{prt_set, pf_r3, pft_field, fb_(1, pf_r2)},
  /*100*/{prt_set, pf_r4, pft_field, fb_(0, pf_r3)},
  /*101*/{prt_set, pf_op, pft_val, J_MLA},
  /*102*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*103*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /*104*/{prt_set, pf_r4, pft_field, fb_(0, pf_r3)},
  /*105*/{prt_set, pf_op, pft_val, J_MLA},
  /*106*/{prt_set, pf_r2, pft_field, fb_(1, pf_r3)},
  /*107*/{prt_set, pf_r3, pft_field, fb_(1, pf_r2)},
  /*108*/{prt_set, pf_r4, pft_field, fb_(0, pf_r2)},
  /*109*/{prt_set, pf_op, pft_val, J_MLA},
  /*110*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*111*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /*112*/{prt_set, pf_r4, pft_field, fb_(0, pf_r2)},
  /*113*/{prt_set, pf_r3, pft_field, fb_(0, pf_r3)},
  /*114*/{prt_set, pf_peep, pft_val, P_POST},
  /*115*/{prt_asr, pf_none, pft_field, fb_(0, pf_r3)},
  /*116*/{prt_swapr2r3},
  /*117*/{prt_set, pf_op, pft_exprn, 51},
  /*118*/{prt_set, pf_r3, pft_field, fb_(1, pf_r2)},
  /*119*/{prt_set, pf_op, pft_val, J_MOVR},
  /*120*/{prt_set, pf_r2, pft_val, 0},
  /*121*/{prt_set, pf_r3, pft_field, fb_(1, pf_r1)},
  /*122*/{prt_set, pf_op, pft_val, J_ANDK},
  /*123*/{prt_swapr2r3},
  /*124*/{prt_set, pf_r3, pft_exprn, 52},
  /*125*/{prt_set, pf_op, pft_val, J_POPMB},
  /*126*/{prt_set, pf_r1, pft_val, 0},
  /*127*/{prt_set, pf_r2, pft_exprn, 30},
  /*128*/{prt_set, pf_op, pft_val, J_POPMB},
  /*129*/{prt_set, pf_r1, pft_val, 0},
  /*130*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*131*/{prt_set, pf_op, pft_field, fb_(1, pf_op)},
  /*132*/{prt_set, pf_r2, pft_exprn, 53},
  /*133*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /*134*/{prt_swapr2r3},
  /*135*/{prt_set, pf_op, pft_exprn, 54},
  /*136*/{prt_set, pf_r3, pft_field, fb_(1, pf_r2)},
  /*137*/{prt_set, pf_op, pft_val, J_POPMB},
  /*138*/{prt_set, pf_r1, pft_exprn, 55},
  /*139*/{prt_set, pf_r3, pft_exprn, 5},
  /*140*/{prt_set, pf_op, pft_val, J_RSBK},
  /*141*/{prt_swapr2r3},
  /*142*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /*143*/{prt_swapr2r3},
  /*144*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /*145*/{prt_set, pf_op, pft_val, J_BICR},
  /*146*/{prt_set, pf_op, pft_val, J_MOVR},
  /*147*/{prt_set, pf_r3, pft_field, fb_(0, pf_r2)},
  /*148*/{prt_set, pf_r2, pft_val, 0},
  /*149*/{prt_set, pf_r1, pft_field, fb_(2, pf_r1)},
  /*150*/{prt_set, pf_dataflow, pft_exprn, 56},
  /*151*/{prt_set, pf_peep, pft_exprn, 57},
  /*152*/{prt_asr, pf_none, pft_field, fb_(0, pf_r3)},
  /*153*/{prt_set, pf_r3, pft_exprn, 2},
  /*154*/{prt_asr, pf_none, pft_field, fb_(0, pf_r3)},
  /*155*/{prt_set, pf_dataflow, pft_exprn, 58},
  /*156*/{prt_set, pf_peep, pft_exprn, 59},
  /*157*/{prt_swapr2r3},
  /*158*/{prt_set, pf_op, pft_exprn, 62},
  /*159*/{prt_swapr2r3},
  /*160*/{prt_set, pf_op, pft_exprn, 63},
  /*161*/{prt_set, pf_op, pft_exprn, 64},
  /*162*/{prt_set, pf_r3, pft_field, fb_(1, pf_r1)},
  /*163*/{prt_set, pf_dataflow, pft_exprn, 65},
  /*164*/{prt_set, pf_peep, pft_exprn, 59},
  /*165*/{prt_asr, pf_none, pft_exprn, 9},
  /*166*/{prt_kill},
  /*167*/{prt_set, pf_r1, pft_field, fb_(0, pf_r1)},
  /*168*/{prt_set, pf_r2, pft_exprn, 53},
  /*169*/{prt_set, pf_op, pft_val, J_ADCOND},
  /*170*/{prt_set, pf_r1, pft_exprn, 30},
  /*171*/{prt_kill},
  /*172*/{prt_asr, pf_none, pft_val, 8},
  /*173*/{prt_set, pf_op, pft_val, J_PUSHC},
  /*174*/{prt_set, pf_r1, pft_field, fb_(2, pf_r3)},
  /*175*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*176*/{prt_set, pf_r3, pft_exprn, 2},
  /*177*/{prt_set, pf_peep, pft_val, P_PRE},
  /*178*/{prt_set, pf_r3, pft_field, fb_(1, pf_r3)},
  /*179*/{prt_set, pf_op, pft_val, J_PUSHM},
  /*180*/{prt_set, pf_r3, pft_exprn, 68},
  /*181*/{prt_set, pf_r3, pft_exprn, 2},
  /*182*/{prt_set, pf_op, pft_val, J_MOVK},
  /*183*/{prt_set, pf_r3, pft_exprn, 69},
  /*184*/{prt_set, pf_op, pft_val, J_MOVK},
  /*185*/{prt_set, pf_r3, pft_exprn, 1},
  /*186*/{prt_set, pf_op, pft_val, J_MOVK},
  /*187*/{prt_set, pf_r3, pft_exprn, 6},
  /*188*/{prt_set, pf_op, pft_val, J_MOVK},
  /*189*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*190*/{prt_set, pf_r3, pft_exprn, 69},
  /*191*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*192*/{prt_set, pf_r3, pft_exprn, 1},
  /*193*/{prt_set, pf_r2, pft_field, fb_(1, pf_r2)},
  /*194*/{prt_set, pf_r3, pft_exprn, 6},
  /*195*/{prt_set, pf_r3, pft_exprn, 6},
  /*196*/{prt_set, pf_op, pft_val, J_ORRK},
  /*197*/{prt_set, pf_dataflow, pft_exprn, 70},
  /*198*/{prt_set, pf_peep, pft_exprn, 71},
  /*199*/{prt_swapr2r3},
  /*200*/{prt_set, pf_r1, pft_field, fb_(0, pf_r1)},
  /*201*/{prt_set, pf_r1, pft_field, fb_(1, pf_r3)},
  /*202*/{prt_set, pf_r4, pft_exprn, 73},
  /*203*/{prt_set, pf_r2, pft_field, fb_(1, pf_r3)},
  /*204*/{prt_set, pf_r4, pft_exprn, 73},
  /*205*/{prt_set, pf_op, pft_val, J_SHLK},
  /*206*/{prt_set, pf_r3, pft_val, 1},
  /*207*/{prt_set, pf_op, pft_exprn, 74},
  /*208*/{prt_set, pf_peep, pft_exprn, 75},
  /*209*/{prt_set, pf_r3, pft_exprn, 76},
  /*210*/{prt_set, pf_r3, pft_exprn, 77},
  /*211*/{prt_proc, 0, 0, 2},
  /*212*/{prt_set, pf_r3, pft_exprn, 7},
  /*213*/{prt_set, pf_r3, pft_exprn, 78},
  /*214*/{prt_set, pf_r3, pft_exprn, 79},
  /*215*/{prt_proc, 0, 0, 1},
  /*216*/{prt_proc, 0, 0, 0}
};
static PeepExprn const peepexprns[] = {
 /*  0*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_dataflow),J_DEAD_R2},
 /*  1*/{peo_or, 0, pft_field, pft_field, fb_(1, pf_r3),fb_(0, pf_r3)},
 /*  2*/{peo_add, 0, pft_field, pft_field, fb_(1, pf_r3),fb_(0, pf_r3)},
 /*  3*/{peo_eor, 0, pft_val, pft_exprn, 0xffffffffl,2},
 /*  4*/{peo_add, 0, pft_field, pft_field, fb_(0, pf_r3),fb_(1, pf_r3)},
 /*  5*/{peo_proc1, pep_lsbpair, pft_field, pft_none, fb_(0, pf_r3),0},
 /*  6*/{peo_and, 0, pft_field, pft_field, fb_(1, pf_r3),fb_(0, pf_r3)},
 /*  7*/{peo_eor, 0, pft_field, pft_field, fb_(0, pf_r3),fb_(1, pf_r3)},
 /*  8*/{peo_proc1, pep_lsb, pft_exprn, pft_none, 7,0},
 /*  9*/{peo_proc1, pep_bitcount, pft_field, pft_none, fb_(1, pf_r3),0},
 /* 10*/{peo_proc1, pep_bitcount, pft_field, pft_none, fb_(0, pf_r3),0},
 /* 11*/{peo_proc1, pep_lsb, pft_field, pft_none, fb_(0, pf_r3),0},
 /* 12*/{peo_and, 0, pft_field, pft_field, fb_(2, pf_r3),fb_(0, pf_r3)},
 /* 13*/{peo_add, 0, pft_field, pft_val, fb_(0, pf_r3),1},
 /* 14*/{peo_sub, 0, pft_val, pft_field, 32,fb_(1, pf_r3)},
 /* 15*/{peo_proc1, pep_bit, pft_exprn, pft_none, 14,0},
 /* 16*/{peo_sub, 0, pft_val, pft_field, 0,fb_(1, pf_r3)},
 /* 17*/{peo_and, 0, pft_field, pft_exprn, fb_(1, pf_r3),16},
 /* 18*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_r2),2},
 /* 19*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_r2),3},
 /* 20*/{peo_and, 0, pft_field, pft_val, fb_(0, pf_peep),P_BASEALIGNED},
 /* 21*/{peo_or, 0, pft_field, pft_val, fb_(2, pf_dataflow),J_DEAD_R2},
 /* 22*/{peo_or, 0, pft_field, pft_val, fb_(0, pf_peep),P_MS},
 /* 23*/{peo_and, 0, pft_field, pft_val, fb_(0, pf_op),J_SHIFTVAL},
 /* 24*/{peo_shr, 0, pft_exprn, pft_val, 23,J_SHIFTPOS},
 /* 25*/{peo_sub, 0, pft_val, pft_exprn, 32,24},
 /* 26*/{peo_proc1, pep_bit, pft_exprn, pft_none, 25,0},
 /* 27*/{peo_sub, 0, pft_exprn, pft_val, 26,1},
 /* 28*/{peo_sub, 0, pft_exprn, pft_field, 24,fb_(2, pf_r3)},
 /* 29*/{peo_shl, 0, pft_exprn, pft_exprn, 27,28},
 /* 30*/{peo_proc1, pep_log2, pft_exprn, pft_none, 11,0},
 /* 31*/{peo_proc1, pep_shift_p, pft_field, pft_none, fb_(1, pf_op),0},
 /* 32*/{peo_or, 0, pft_field, pft_exprn, fb_(0, pf_peep),31},
 /* 33*/{peo_eor, 0, pft_field, pft_val, fb_(0, pf_op),J_SUBR^J_RSBR},
 /* 34*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_peep),P_RSHIFT},
 /* 35*/{peo_or, 0, pft_field, pft_exprn, fb_(0, pf_peep),34},
 /* 36*/{peo_or, 0, pft_val, pft_val, J_TAILCALLXR,J_NEGINDEX},
 /* 37*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_op),J_SHIFTMASK},
 /* 38*/{peo_or, 0, pft_exprn, pft_exprn, 36,37},
 /* 39*/{peo_or, 0, pft_val, pft_exprn, J_TAILCALLXR,37},
 /* 40*/{peo_or, 0, pft_val, pft_val, J_CALLXR,J_NEGINDEX},
 /* 41*/{peo_or, 0, pft_exprn, pft_exprn, 40,37},
 /* 42*/{peo_or, 0, pft_val, pft_exprn, J_CALLXR,37},
 /* 43*/{peo_and, 0, pft_field, pft_val, fb_(0, pf_op),J_SIGNED},
 /* 44*/{peo_or, 0, pft_val, pft_exprn, J_SHRK,43},
 /* 45*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_op),J_SHIFTMASK+J_NEGINDEX},
 /* 46*/{peo_or, 0, pft_val, pft_exprn, J_TAILCALLIR,45},
 /* 47*/{peo_or, 0, pft_val, pft_exprn, J_CALLIR,45},
 /* 48*/{peo_sub, 0, pft_field, pft_exprn, fb_(1, pf_r3),10},
 /* 49*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_dataflow),0xffffffffl-J_DEAD_R2},
 /* 50*/{peo_proc2, pep_shift_k, pft_field, pft_field, fb_(1, pf_op),fb_(1, pf_r3)},
 /* 51*/{peo_or, 0, pft_field, pft_exprn, fb_(0, pf_op),50},
 /* 52*/{peo_shl, 0, pft_field, pft_exprn, fb_(1, pf_r3),24},
 /* 53*/{peo_add, 0, pft_field, pft_field, fb_(1, pf_r2),fb_(0, pf_r3)},
 /* 54*/{peo_or, 0, pft_exprn, pft_exprn, 33,50},
 /* 55*/{peo_add, 0, pft_field, pft_val, fb_(2, pf_r3),8},
 /* 56*/{peo_and, 0, pft_field, pft_val, fb_(0, pf_dataflow),~J_DEAD_R1},
 /* 57*/{peo_or, 0, pft_field, pft_val, fb_(1, pf_peep),P_POST},
 /* 58*/{peo_or, 0, pft_field, pft_val, fb_(2, pf_dataflow),J_DEAD_R3},
 /* 59*/{peo_or, 0, pft_field, pft_val, fb_(2, pf_peep),P_CMPZ},
 /* 60*/{peo_proc1, pep_log2, pft_exprn, pft_none, 17,0},
 /* 61*/{peo_proc2, pep_shift_k, pft_val, pft_exprn, J_SHLK,60},
 /* 62*/{peo_or, 0, pft_exprn, pft_exprn, 33,61},
 /* 63*/{peo_or, 0, pft_field, pft_exprn, fb_(0, pf_op),61},
 /* 64*/{peo_add, 0, pft_field, pft_val, fb_(0, pf_op),1},
 /* 65*/{peo_or, 0, pft_field, pft_val, fb_(2, pf_dataflow),J_DEAD_R1},
 /* 66*/{peo_proc1, pep_bit, pft_field, pft_none, fb_(1, pf_r2),0},
 /* 67*/{peo_proc1, pep_bit, pft_field, pft_none, fb_(1, pf_r3),0},
 /* 68*/{peo_or, 0, pft_exprn, pft_exprn, 66,67},
 /* 69*/{peo_eor, 0, pft_field, pft_field, fb_(1, pf_r3),fb_(0, pf_r3)},
 /* 70*/{peo_or, 0, pft_field, pft_val, fb_(1, pf_dataflow),J_DEAD_R1},
 /* 71*/{peo_or, 0, pft_field, pft_val, fb_(1, pf_peep),P_CMPZ},
 /* 72*/{peo_proc1, pep_bit, pft_field, pft_none, fb_(1, pf_r1),0},
 /* 73*/{peo_or, 0, pft_field, pft_exprn, fb_(0, pf_r4),72},
 /* 74*/{peo_add, 0, pft_field, pft_val, fb_(0, pf_op),Q_MI-Q_LT},
 /* 75*/{peo_or, 0, pft_field, pft_val, fb_(0, pf_peep),P_BASEALIGNED},
 /* 76*/{peo_div, 0, pft_field, pft_exprn, fb_(1, pf_r3),17},
 /* 77*/{peo_sub, 0, pft_field, pft_field, fb_(1, pf_r3),fb_(2, pf_r3)},
 /* 78*/{peo_eor, 0, pft_field, pft_exprn, fb_(0, pf_r3),5},
 /* 79*/{peo_and, 0, pft_field, pft_val, fb_(1, pf_r3),255}
};

static PeepOp const p1_ops[] = {
  {{pot_op, 0, 0, 0, J_ANDK}, 0, 1, 182}};
static PeepConstraint const c1[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0}};
static PeepOp const p2_ops[] = {
  {{pot_opinset, 0, 0, 2, fh_(0, 0)}, 0, 1, 166}};
static PeepConstraint const c2[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0}};
static PeepOp const p3_ops[] = {
  {{pot_and, 0, pu_r3, 0, fh_(0, 1)}, 0, 2, 205}};
static PeepConstraint const c3[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(0, pf_r3)}};
static PeepOp const p4_ops[] = {
  {{pot_and, 0, pu_r2, 0, fh_(2, 1)}, 0, 3, 146}};
static PeepConstraint const c4[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0}};
static PeepOp const p5_ops[] = {
  {{pot_and, 0, 0, 0, fh_(3, 1)}, 0, 1, 166}};
static PeepConstraint const c5[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p6_ops[] = {
  {{pot_andnot, 0, pu_r2, 0, fh_(4, 5)}, p_dead_r2, 1, 98},
  {{pot_and, pu_r1, pu_r1+pu_r3, 0, fh_(3, 6)}, 0, 1, 166}};
static PeepConstraint const c6[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p7_ops[] = {
  {{pot_andnot, 0, pu_r3, 0, fh_(7, 5)}, p_dead_r3, 1, 35},
  {{pot_and, pu_r1, pu_r1+pu_r3, 0, fh_(3, 6)}, 0, 1, 166}};
static PeepConstraint const c7[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p8_ops[] = {
  {{pot_andnot, 0, pu_r1, 0, fh_(8, 5)}, p_dead_r1, 1, 201},
  {{pot_and, pu_r1, pu_r1+pu_r3, 0, fh_(3, 6)}, p_dead_r1, 1, 166}};
static PeepConstraint const c8[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)}};
static PeepOp const p9_ops[] = {
  {{pot_andnot, 0, pu_r2, 0, fh_(4, 5)}, 0, 1, 98},
  {{pot_and, 0, pu_r1+pu_r3, 0, fh_(3, 6)}, 0, 0, 0}};
static PeepConstraint const c9[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p10_ops[] = {
  {{pot_andnot, 0, pu_r3, 0, fh_(7, 5)}, 0, 1, 35},
  {{pot_and, 0, pu_r1+pu_r3, 0, fh_(3, 6)}, 0, 0, 0}};
static PeepConstraint const c10[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p11_ops[] = {
  {{pot_andnot, 0, pu_r1, 0, fh_(8, 5)}, 0, 1, 201},
  {{pot_and, 0, pu_r1+pu_r3, 0, fh_(3, 6)}, p_dead_r1, 0, 0}};
static PeepConstraint const c11[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)}};
static PeepOp const p12_ops[] = {
  {{pot_opinset, 0, pu_r2+pu_r4, 2, fh_(0, 10)}, p_dead_r2, 2, 203},
  {{pot_op, pu_r1, pu_r1+pu_r3, 0, J_MOVR}, p_dead_r3, 1, 166}};
static PeepConstraint const c12[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p13_ops[] = {
  {{pot_opinset, 0, pu_r2+pu_r4, 2, fh_(0, 10)}, p_dead_r2, 2, 203},
  {{pot_op, pu_r1, pu_r1+pu_r3, 0, J_MOVR}, 0, 1, 166}};
static PeepConstraint const c13[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_proc2, pcp_movc_pres_r1r2, pft_inst, pft_val, fb_(0, 0), 0}};
static PeepOp const p14_ops[] = {
  {{pot_opinset, 0, pu_r1+pu_r4, 2, fh_(0, 2)}, p_dead_r1, 2, 201},
  {{pot_op, pu_r1, pu_r1+pu_r3, 0, J_MOVR}, p_dead_r3, 1, 166}};
static PeepConstraint const c14[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)}};
static PeepOp const p15_ops[] = {
  {{pot_opinset, 0, pu_r1+pu_r4, 2, fh_(0, 2)}, p_dead_r1, 2, 201},
  {{pot_op, pu_r1, pu_r1+pu_r3, 0, J_MOVR}, 0, 1, 166}};
static PeepConstraint const c15[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)},
  {pct_proc2, pcp_movc_pres_r1r2, pft_inst, pft_exprn, fb_(0, 0), 0}};
static PeepOp const p16_ops[] = {
  {{pot_prop, 0, 0, 0, p_loads_r1}, 0, 0, 0},
  {{pot_and, pu_r1, 0, 0, fh_(9, 10)}, 0, 1, 166}};
static PeepConstraint const c16[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)},
  {pct_proc1, pcp_notcall, pft_inst, pft_none, fb_(0, 0), 0}};
static PeepOp const p17_ops[] = {
  {{pot_and, pu_r1, pu_r1, 0, fh_(3, 6)}, p_dead_r3, 1, 166},
  {{pot_opinset, pu_r1, pu_r1, 2, fh_(0, 6)}, 0, 1, 14}};
static PeepConstraint const c17[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r3)}};
static PeepOp const p18_ops[] = {
  {{pot_and, pu_r1, pu_r1, 0, fh_(3, 6)}, p_dead_r3, 1, 166},
  {{pot_opinset, pu_r1, pu_r1, 2, fh_(0, 6)}, 0, 2, 199}};
static PeepConstraint const c18[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r3)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)}};
static PeepOp const p19_ops[] = {
  {{pot_and, pu_r1, pu_r1, 0, fh_(3, 6)}, p_dead_r3, 1, 166},
  {{pot_andnot, pu_r1, pu_r1, 0, fh_(9, 11)}, 0, 1, 14}};
static PeepConstraint const c19[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p20_ops[] = {
  {{pot_and, 0, pu_r2+pu_r3+pu_r4, 0, fh_(0, 6)}, p_dead_r3, 4, 109},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(12, 1)}, 0, 1, 166}};
static PeepConstraint const c20[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r3)}};
static PeepOp const p21_ops[] = {
  {{pot_op, 0, pu_r2+pu_r3+pu_r4, 0, J_ADDR}, p_dead_r3, 4, 105},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(12, 1)}, 0, 1, 166}};
static PeepConstraint const c21[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r3)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)}};
static PeepOp const p22_ops[] = {
  {{pot_op, 0, pu_r2+pu_r3+pu_r4, 0, J_ADDR}, p_dead_r2, 4, 101},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(12, 1)}, 0, 1, 166}};
static PeepConstraint const c22[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r3)}};
static PeepOp const p23_ops[] = {
  {{pot_op, 0, pu_r2+pu_r3+pu_r4, 0, J_ADDR}, p_dead_r2, 4, 97},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(12, 1)}, 0, 1, 166}};
static PeepConstraint const c23[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r3)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)}};
static PeepOp const p24_ops[] = {
  {{pot_op, 0, 0, 0, J_B}, 0, 0, 0},
  {{pot_op, pu_r1, 0, 0, J_ADDK}, 0, 1, 166}};
static PeepConstraint const c24[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r1), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), RETLABV},
  {pct_proc1, pcp_regset_unused, pft_val, pft_none, M_SP, 0},
  {pct_proc0, pcp_notleafproc, pft_none, pft_none, 0, 0}};
static PeepOp const p25_ops[] = {
  {{pot_opinset, 0, 0, 2, fh_(0, 13)}, 0, 0, 0},
  {{pot_op, pu_r1, 0, 0, J_ADDK}, 0, 1, 166}};
static PeepConstraint const c25[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r1), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_proc1, pcp_regset_unused, pft_val, pft_none, M_SP, 0},
  {pct_proc0, pcp_notleafproc, pft_none, pft_none, 0, 0}};
static PeepOp const p26_ops[] = {
  {{pot_op, 0, 0, 0, J_B}, 0, 0, 0},
  {{pot_opinset, 0, 0, 2, fh_(0, 10)}, 0, 1, 216}};
static PeepConstraint const c26[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), RETLABV}};
static PeepOp const p27_ops[] = {
  {{pot_op, 0, 0, 0, J_CALLK}, 0, 0, 0},
  {{pot_opinset, 0, 0, 2, fh_(0, 10)}, 0, 1, 215}};
static PeepOp const p28_ops[] = {
  {{pot_and, 0, pu_r3, 0, fh_(13, 14)}, p_dead_r3, 2, 35},
  {{pot_and, pu_r1, pu_r1+pu_r3, 0, fh_(15, 1)}, 0, 1, 166}};
static PeepConstraint const c28[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p29_ops[] = {
  {{pot_and, 0, pu_r3+pu_r4, 0, fh_(13, 14)}, p_dead_r3, 4, 33},
  {{pot_and, pu_r1, pu_r1+pu_r3+pu_r4, 0, fh_(15, 17)}, 0, 1, 166}};
static PeepConstraint const c29[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p30_ops[] = {
  {{pot_and, 0, pu_r2, 0, fh_(13, 14)}, p_dead_r2, 3, 143},
  {{pot_and, pu_r1, pu_r1+pu_r3, 0, fh_(15, 1)}, 0, 1, 166}};
static PeepConstraint const c30[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p31_ops[] = {
  {{pot_and, 0, pu_r2+pu_r4, 0, fh_(13, 14)}, p_dead_r2, 5, 32},
  {{pot_and, pu_r1, pu_r1+pu_r3+pu_r4, 0, fh_(15, 17)}, 0, 1, 166}};
static PeepConstraint const c31[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p32_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 17)}, 0, 1, 166},
  {{pot_and, 0, pu_r3, 0, fh_(3, 1)}, 0, 1, 198}};
static PeepConstraint const c32[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r3)},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0},
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_PC, 0}};
static PeepOp const p33_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 17)}, p_dead_r2, 1, 166},
  {{pot_and, pu_r1, pu_r1, 0, fh_(18, 16)}, 0, 2, 197}};
static PeepConstraint const c33[] = {
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_PC, 0},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r1)},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_cond), Q_AL}};
static PeepOp const p34_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 17)}, 0, 1, 166},
  {{pot_and, 0, pu_r1, 0, fh_(18, 16)}, 0, 1, 198}};
static PeepConstraint const c34[] = {
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_PC, 0},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r1)},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_cond), Q_AL}};
static PeepOp const p35_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_ANDK}, p_dead_r2, 2, 195},
  {{pot_op, pu_r1, pu_r1, 0, J_ORRK}, 0, 2, 16}};
static PeepConstraint const c35[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p36_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_ORRK}, p_dead_r2, 1, 102},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_ANDK}, 0, 1, 166}};
static PeepConstraint const c36[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_exprn, pft_val, 1, -1}};
static PeepOp const p37_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_ANDK}, p_dead_r2, 2, 193},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_ANDK}, 0, 1, 166}};
static PeepConstraint const c37[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p38_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_ORRK}, p_dead_r2, 2, 191},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_ORRK}, 0, 1, 166}};
static PeepConstraint const c38[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p39_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_EORK}, p_dead_r2, 2, 189},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_EORK}, 0, 1, 166}};
static PeepConstraint const c39[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p40_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_ADDK}, p_dead_r2, 2, 175},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_ADDK}, 0, 1, 166}};
static PeepConstraint const c40[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p41_ops[] = {
  {{pot_op, 0, 0, 0, J_ANDK}, 0, 2, 187},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c41[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p42_ops[] = {
  {{pot_op, 0, 0, 0, J_ORRK}, 0, 2, 185},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c42[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p43_ops[] = {
  {{pot_op, 0, 0, 0, J_EORK}, 0, 2, 183},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c43[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p44_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 2, 181},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c44[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_or, 0, pft_val, pft_val, 3, 5},
  {pct_proc1, pcp_difficult_constant, pft_exprn, pft_none, 2, 0},
  {pct_negate, 0, pft_val, pft_none, 2, 0},
  {pct_proc1, pcp_difficult_constant, pft_exprn, pft_none, 3, 0},
  {pct_negate, 0, pft_val, pft_none, 4, 0}};
static PeepOp const p45_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_SUBR}, p_dead_r2, 3, 140},
  {{pot_and, pu_r1, pu_r1, 0, fh_(19, 1)}, 0, 1, 166}};
static PeepConstraint const c45[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p46_ops[] = {
  {{pot_opinset_m, 0, 0, 6, fh_(46, 47)}, 0, 0, 0},
  {{pot_opinset_m, 0, 0, 6, fh_(46, 47)}, 0, 1, 166}};
static PeepOp const p47_ops[] = {
  {{pot_op, pu_r1, pu_r1, 0, J_STRBK}, p_dead_r1, 0, 0},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 1, 214}};
static PeepConstraint const c47[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)},
  {pct_gtu, 0, pft_field, pft_val, fb_(1, pf_r3), 255}};
static PeepOp const p48_ops[] = {
  {{pot_op, 0, 0, 0, J_PUSHD}, p_dead_r1, 2, 179},
  {{pot_op, pu_r1, pu_r1+pu_r2+pu_r3, 0, J_MOVIDR}, 0, 1, 166}};
static PeepConstraint const c48[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)}};
static PeepOp const p49_ops[] = {
  {{pot_opinset_m, 0, pu_r2, 9, fh_(53, 54)}, p_dead_r2, 1, 98},
  {{pot_op, pu_r1, pu_r1+pu_r3, 0, J_MOVR}, 0, 1, 166}};
static PeepConstraint const c49[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_peep), 0},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p50_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 63)}, 0, 2, 177},
  {{pot_and, pu_r1, pu_r1, 0, fh_(2, 1)}, 0, 1, 166}};
static PeepConstraint const c50[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0},
  {pct_ge, 0, pft_field, pft_val, fb_(1, pf_r3), -0x3fc},
  {pct_le, 0, pft_field, pft_val, fb_(1, pf_r3), 0x3fc},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r1)}};
static PeepOp const p51_ops[] = {
  {{pot_opinset_m, 0, 0, 5, fh_(67, 68)}, 0, 2, 177},
  {{pot_and, pu_r1, pu_r1, 0, fh_(2, 1)}, 0, 1, 166}};
static PeepConstraint const c51[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 0},
  {pct_ge, 0, pft_field, pft_val, fb_(1, pf_r3), -0xfff},
  {pct_le, 0, pft_field, pft_val, fb_(1, pf_r3), 0xfff},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r1)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p52_ops[] = {
  {{pot_opinset_m, 0, pu_r2, 3, fh_(67, 69)}, p_dead_r2, 2, 175},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(2, 1)}, 0, 1, 166}};
static PeepConstraint const c52[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_ge, 0, pft_exprn, pft_val, 4, -0xfff},
  {pct_le, 0, pft_exprn, pft_val, 4, 0xfff}};
static PeepOp const p53_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, pu_r2, pu_r2, 0, fh_(20, 1)}, 0, 2, 113}};
static PeepConstraint const c53[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r1)},
  {pct_ge, 0, pft_field, pft_val, fb_(0, pf_r3), -0xfff},
  {pct_le, 0, pft_field, pft_val, fb_(0, pf_r3), 0xfff}};
static PeepOp const p54_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, pu_r2, pu_r2, 0, fh_(20, 21)}, 0, 1, 153}};
static PeepConstraint const c54[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r1)},
  {pct_ge, 0, pft_exprn, pft_val, 2, -0xfff},
  {pct_le, 0, pft_exprn, pft_val, 2, 0xfff}};
static PeepOp const p55_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, pu_r2, pu_r2, 0, fh_(22, 1)}, 0, 2, 113}};
static PeepConstraint const c55[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ge, 0, pft_field, pft_val, fb_(0, pf_r3), -0x3fc},
  {pct_le, 0, pft_field, pft_val, fb_(0, pf_r3), 0x3fc}};
static PeepOp const p56_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, pu_r2, pu_r2, 0, fh_(22, 21)}, 0, 1, 153}};
static PeepConstraint const c56[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ge, 0, pft_exprn, pft_val, 2, -0x3fc},
  {pct_le, 0, pft_exprn, pft_val, 2, 0x3fc}};
static PeepOp const p57_ops[] = {
  {{pot_op, 0, 0, 0, J_ANDK}, 0, 1, 166},
  {{pot_opinset_m, 0, pu_r1, 2, fh_(73, 74)}, 0, 0, 0}};
static PeepConstraint const c57[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r3), 255},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p58_ops[] = {
  {{pot_op, 0, pu_r1, 0, J_MOVC}, p_dead_r2, 2, 173},
  {{pot_none, 0, pu_r4, 0, 0}, 0, 6, 0},
  {{pot_and, 0, pu_r1+pu_r3, 0, fh_(3, 6)}, 0, 6, 6}};
static PeepConstraint const c58[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(2, pf_r3), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(2, pf_r1)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(2, 0), fb_(0, pf_r3)}};
static PeepOp const p59_ops[] = {
  {{pot_and, 0, 0, 0, fh_(2, 1)}, 0, 1, 166},
  {{pot_and, pu_r2, pu_r2, 0, fh_(23, 24)}, 0, 1, 151}};
static PeepConstraint const c59[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r3), fb_(0, pf_r3)},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP}};
static PeepOp const p60_ops[] = {
  {{pot_op, 0, 0, 0, J_POPM}, 0, 1, 213},
  {{pot_op, 0, 0, 0, J_PUSHD}, p_dead_r1, 2, 171},
  {{pot_and, pu_r1, pu_r1, 0, fh_(25, 24)}, 0, 3, 137}};
static PeepConstraint const c60[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(2, pf_r1), fb_(1, pf_r1)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_val, fb_(1, 0), 8},
  {pct_proc1, pcp_regset_unused, pft_exprn, pft_none, 5, 0},
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_SP, 0}};
static PeepOp const p61_ops[] = {
  {{pot_op, 0, 0, 0, J_POPM}, 0, 1, 213},
  {{pot_op, 0, pu_r1, 0, J_PUSHD}, p_dead_r1, 4, 93},
  {{pot_op, pu_r1, pu_r1, 0, J_MOVDK}, 0, 2, 169}};
static PeepConstraint const c61[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(2, pf_r1), fb_(1, pf_r1)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_val, fb_(1, 0), 8},
  {pct_proc1, pcp_regset_unused, pft_exprn, pft_none, 5, 0},
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_SP, 0}};
static PeepOp const p62_ops[] = {
  {{pot_and, 0, pu_r3+pu_r4, 0, fh_(26, 14)}, p_dead_r3, 3, 90},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(27, 1)}, 0, 1, 166}};
static PeepConstraint const c62[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p63_ops[] = {
  {{pot_and, 0, pu_r3+pu_r4, 0, fh_(28, 14)}, p_dead_r3, 3, 90},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(27, 1)}, 0, 1, 166}};
static PeepConstraint const c63[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p64_ops[] = {
  {{pot_and, 0, pu_r2+pu_r4, 0, fh_(29, 14)}, p_dead_r2, 4, 89},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(27, 1)}, 0, 1, 166}};
static PeepConstraint const c64[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p65_ops[] = {
  {{pot_and, 0, pu_r2+pu_r4, 0, fh_(30, 14)}, p_dead_r2, 5, 27},
  {{pot_and, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(27, 1)}, 0, 1, 166}};
static PeepConstraint const c65[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p66_ops[] = {
  {{pot_and, 0, pu_r3, 0, fh_(26, 14)}, p_dead_r3, 2, 117},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(31, 1)}, 0, 1, 166}};
static PeepConstraint const c66[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p67_ops[] = {
  {{pot_and, 0, pu_r3, 0, fh_(28, 14)}, p_dead_r3, 2, 117},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(31, 1)}, 0, 1, 166}};
static PeepConstraint const c67[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p68_ops[] = {
  {{pot_and, 0, pu_r2, 0, fh_(29, 14)}, p_dead_r2, 3, 116},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(31, 1)}, 0, 1, 166}};
static PeepConstraint const c68[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p69_ops[] = {
  {{pot_and, 0, pu_r2, 0, fh_(30, 14)}, p_dead_r2, 3, 134},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(31, 1)}, 0, 1, 166}};
static PeepConstraint const c69[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p70_ops[] = {
  {{pot_op, pu_r1, pu_r1, 0, J_ADDK}, p_dead_r2, 1, 166},
  {{pot_opinset, pu_r1, pu_r1, 2, fh_(0, 95)}, 0, 2, 167}};
static PeepConstraint const c70[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p71_ops[] = {
  {{pot_op, 0, pu_r2, 0, J_ADDK}, p_dead_r2, 3, 131},
  {{pot_opinset, pu_r1, pu_r1, 2, fh_(0, 95)}, 0, 1, 166}};
static PeepConstraint const c71[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p72_ops[] = {
  {{pot_op, 0, 0, 0, J_POPM}, 0, 1, 212},
  {{pot_op, 0, 0, 0, J_PUSHM}, 0, 2, 165}};
static PeepConstraint const c72[] = {
  {pct_eq, 0, pft_exprn, pft_field, 6, fb_(1, pf_r3)},
  {pct_proc1, pcp_regset_unkilled, pft_field, pft_none, fb_(1, pf_r3), 0},
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_SP, 0},
  {pct_gt, 0, pft_exprn, pft_field, 8, fb_(1, pf_r3)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_exprn, fb_(1, 0), 9}};
static PeepOp const p73_ops[] = {
  {{pot_op, 0, 0, 0, J_POPM}, 0, 0, 0},
  {{pot_op, 0, 0, 0, J_MOVC}, 0, 1, 211}};
static PeepOp const p74_ops[] = {
  {{pot_op, 0, 0, 0, J_POPM}, 0, 3, 128},
  {{pot_op, pu_r2, pu_r2, 0, J_PUSHC}, 0, 4, 85}};
static PeepConstraint const c74[] = {
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_SP, 0},
  {pct_le, 0, pft_exprn, pft_field, 10, fb_(1, pf_r3)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_exprn, fb_(1, 0), 10}};
static PeepOp const p75_ops[] = {
  {{pot_op, 0, 0, 0, J_POPM}, 0, 3, 125},
  {{pot_op, 0, pu_r1, 0, J_PUSHC}, 0, 5, 22}};
static PeepConstraint const c75[] = {
  {pct_proc1, pcp_regset_unkilled, pft_val, pft_none, M_SP, 0},
  {pct_eq, 0, pft_exprn, pft_field, 10, fb_(1, pf_r3)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(1, 0), fb_(1, pf_r3)},
  {pct_proc1, pcp_regset_unused, pft_exprn, pft_none, 11, 0}};
static PeepOp const p76_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_CALLR}, p_dead_r3, 4, 81},
  {{pot_op_m, pu_r1, pu_r1+pu_r2, 0, fh_(67, 71)}, 0, 1, 166}};
static PeepConstraint const c76[] = {
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_LR},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p77_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_CALLR}, p_dead_r3, 4, 77},
  {{pot_op_m, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(53, 60)}, 0, 1, 166}};
static PeepConstraint const c77[] = {
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_LR},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r3), R_LR},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p78_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_TAILCALLR}, p_dead_r3, 4, 73},
  {{pot_op_m, pu_r1, pu_r1+pu_r2, 0, fh_(67, 71)}, 0, 1, 166}};
static PeepConstraint const c78[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p79_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_TAILCALLR}, p_dead_r3, 4, 69},
  {{pot_op_m, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(53, 60)}, 0, 1, 166}};
static PeepConstraint const c79[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p80_ops[] = {
  {{pot_and, 0, pu_r1+pu_r3, 0, fh_(3, 1)}, 0, 1, 166},
  {{pot_and, 0, pu_r1, 0, fh_(3, 14)}, 0, 0, 0}};
static PeepConstraint const c80[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r3), fb_(0, pf_r1)}};
static PeepOp const p81_ops[] = {
  {{pot_andnot, 0, pu_r2, 0, fh_(32, 6)}, p_dead_r1, 3, 122},
  {{pot_op, pu_r1, pu_r1, 0, J_MOVK}, 0, 1, 166}};
static PeepConstraint const c81[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p82_ops[] = {
  {{pot_opinset_m, pu_r1, pu_r2+pu_r3, 2, fh_(99, 100)}, 0, 5, 17},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0},
  {{pot_op_m, pu_r1, pu_r1, 0, fh_(67, 38)}, 0, 1, 166}};
static PeepConstraint const c82[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r1)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r3), fb_(2, pf_r1)}};
static PeepOp const p83_ops[] = {
  {{pot_op, 0, 0, 0, J_ANDK}, 0, 1, 166},
  {{pot_op_m, 0, pu_r1, 0, fh_(102, 31)}, 0, 0, 0},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c83[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(2, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r2), fb_(1, pf_r1)},
  {pct_eq, 0, pft_exprn, pft_field, 12, fb_(2, pf_r3)}};
static PeepOp const p84_ops[] = {
  {{pot_op, 0, 0, 0, J_ANDK}, p_dead_r2, 0, 0},
  {{pot_op, 0, pu_r1, 0, J_SHRK+J_SIGNED}, 0, 1, 210},
  {{pot_op_m, pu_r1, pu_r1, 0, fh_(67, 38)}, 0, 1, 166}};
static PeepConstraint const c84[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(2, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_exprn, pft_exprn, 13, 15}};
static PeepOp const p85_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 103)}, 0, 1, 207},
  {{pot_opinset, 0, 0, 2, fh_(0, 107)}, p_dead_r2, 1, 166},
  {{pot_and, pu_r1, pu_r1, 0, fh_(18, 16)}, 0, 2, 163}};
static PeepConstraint const c85[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(2, pf_r1)},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_val, fb_(2, pf_cond), Q_AL}};
static PeepOp const p86_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 103)}, 0, 1, 207},
  {{pot_opinset, 0, 0, 2, fh_(0, 107)}, 0, 1, 166},
  {{pot_and, 0, pu_r1, 0, fh_(18, 16)}, 0, 1, 156}};
static PeepConstraint const c86[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(2, pf_r1)},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_val, fb_(2, pf_cond), Q_AL}};
static PeepOp const p87_ops[] = {
  {{pot_opinset, 0, 0, 6, fh_(0, 109)}, 0, 2, 161},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c87[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r3), fb_(0, pf_r3)}};
static PeepOp const p88_ops[] = {
  {{pot_and, 0, pu_r2, 0, fh_(33, 34)}, 0, 3, 119},
  {{pot_and, 0, pu_r1+pu_r2, 0, fh_(35, 24)}, 0, 0, 0}};
static PeepConstraint const c88[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r3), fb_(0, pf_r3)},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r2), R_SP}};
static PeepOp const p89_ops[] = {
  {{pot_and, 0, 0, 0, fh_(26, 14)}, p_dead_r3, 1, 160},
  {{pot_op, pu_r1, pu_r1, 0, J_MULK}, 0, 1, 209}};
static PeepConstraint const c89[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_ne, 0, pft_exprn, pft_val, 17, 1}};
static PeepOp const p90_ops[] = {
  {{pot_and, 0, 0, 0, fh_(28, 14)}, p_dead_r3, 1, 160},
  {{pot_op, pu_r1, pu_r1, 0, J_MULK}, 0, 1, 209}};
static PeepConstraint const c90[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)},
  {pct_ne, 0, pft_exprn, pft_val, 17, 1}};
static PeepOp const p91_ops[] = {
  {{pot_and, 0, 0, 0, fh_(29, 14)}, p_dead_r2, 2, 159},
  {{pot_op, pu_r1, pu_r1, 0, J_MULK}, 0, 1, 209}};
static PeepConstraint const c91[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_exprn, pft_val, 17, 1}};
static PeepOp const p92_ops[] = {
  {{pot_and, 0, 0, 0, fh_(30, 14)}, p_dead_r2, 2, 157},
  {{pot_op, pu_r1, pu_r1, 0, J_MULK}, 0, 1, 209}};
static PeepConstraint const c92[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_exprn, pft_val, 17, 1}};
static PeepOp const p93_ops[] = {
  {{pot_and, 0, 0, 0, fh_(36, 37)}, 0, 1, 208},
  {{pot_op, 0, pu_r1, 0, J_ADCON}, 0, 0, 0}};
static PeepConstraint const c93[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_exprn, pft_val, 18, 0}};
static PeepOp const p94_ops[] = {
  {{pot_and, 0, 0, 0, fh_(38, 37)}, 0, 1, 208},
  {{pot_op, 0, pu_r1, 0, J_ADCON}, 0, 0, 0}};
static PeepConstraint const c94[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_exprn, pft_val, 19, 0}};
static PeepOp const p95_ops[] = {
  {{pot_and, 0, 0, 0, fh_(36, 37)}, 0, 1, 208}};
static PeepConstraint const c95[] = {
  {pct_or, 0, pft_val, pft_val, 1, 2},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r2), R_FP}};
static PeepOp const p96_ops[] = {
  {{pot_and, 0, 0, 0, fh_(38, 37)}, 0, 1, 208}};
static PeepConstraint const c96[] = {
  {pct_or, 0, pft_val, pft_val, 1, 2},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(0, pf_r2), R_FP}};
static PeepOp const p97_ops[] = {
  {{pot_and, 0, pu_r2+pu_r3, 0, fh_(39, 40)}, 0, 4, 65},
  {{pot_none, 0, 0, 0, 0}, 0, 5, 12}};
static PeepConstraint const c97[] = {
  {pct_or, 0, pft_val, pft_val, 2, 3},
  {pct_proc1, pcp_config, pft_val, pft_none, CONFIG_NO_UNALIGNED_LOADS, 0},
  {pct_negate, 0, pft_val, pft_none, 1, 0},
  {pct_ne, 0, pft_exprn, pft_val, 20, 0}};
static PeepOp const p98_ops[] = {
  {{pot_and, 0, pu_r2+pu_r3, 0, fh_(41, 40)}, 0, 4, 61},
  {{pot_none, 0, 0, 0, 0}, 0, 5, 12}};
static PeepConstraint const c98[] = {
  {pct_or, 0, pft_val, pft_val, 2, 3},
  {pct_proc1, pcp_config, pft_val, pft_none, CONFIG_NO_UNALIGNED_LOADS, 0},
  {pct_negate, 0, pft_val, pft_none, 1, 0},
  {pct_ne, 0, pft_exprn, pft_val, 20, 0}};
static PeepOp const p99_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 103)}, 0, 1, 207},
  {{pot_opinset, 0, 0, 2, fh_(0, 107)}, p_dead_r2, 1, 166},
  {{pot_and, 0, pu_r3, 0, fh_(3, 1)}, 0, 2, 155}};
static PeepConstraint const c99[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(2, pf_r3)},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_val, fb_(2, pf_cond), Q_AL}};
static PeepOp const p100_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 103)}, 0, 1, 207},
  {{pot_opinset, 0, 0, 2, fh_(0, 107)}, 0, 1, 166},
  {{pot_and, 0, pu_r3, 0, fh_(3, 1)}, 0, 1, 156}};
static PeepConstraint const c100[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(2, pf_r3)},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_val, fb_(2, pf_cond), Q_AL}};
static PeepOp const p101_ops[] = {
  {{pot_and, 0, pu_r3, 0, fh_(42, 14)}, p_dead_r3, 2, 117},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(31, 1)}, 0, 1, 166}};
static PeepConstraint const c101[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p102_ops[] = {
  {{pot_and, 0, pu_r2, 0, fh_(42, 14)}, p_dead_r2, 3, 116},
  {{pot_and, pu_r1, pu_r1+pu_r2, 0, fh_(31, 1)}, 0, 1, 166}};
static PeepConstraint const c102[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r2)}};
static PeepOp const p103_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_CALLR}, p_dead_r3, 4, 57},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_ADDK}, 0, 1, 166}};
static PeepConstraint const c103[] = {
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_LR},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p104_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_CALLR}, p_dead_r3, 4, 53},
  {{pot_op_m, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(102, 26)}, 0, 1, 166}};
static PeepConstraint const c104[] = {
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_LR},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r3), R_LR},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p105_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_CALLR}, p_dead_r3, 4, 49},
  {{pot_op_m, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(102, 27)}, 0, 1, 166}};
static PeepConstraint const c105[] = {
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r2), R_LR},
  {pct_ne, 0, pft_field, pft_val, fb_(1, pf_r3), R_LR},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p106_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_TAILCALLR}, p_dead_r3, 4, 45},
  {{pot_op, pu_r1, pu_r1+pu_r2, 0, J_ADDK}, 0, 1, 166}};
static PeepConstraint const c106[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p107_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_TAILCALLR}, p_dead_r3, 4, 41},
  {{pot_op_m, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(102, 26)}, 0, 1, 166}};
static PeepConstraint const c107[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p108_ops[] = {
  {{pot_op, 0, pu_r3+pu_r4, 0, J_TAILCALLR}, p_dead_r3, 4, 37},
  {{pot_op_m, pu_r1, pu_r1+pu_r2+pu_r3, 0, fh_(102, 27)}, 0, 1, 166}};
static PeepConstraint const c108[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r3)}};
static PeepOp const p109_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, 0, 0, 0, fh_(20, 1)}, 0, 3, 113}};
static PeepConstraint const c109[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r1)},
  {pct_ge, 0, pft_field, pft_val, fb_(0, pf_r3), -0xfff},
  {pct_le, 0, pft_field, pft_val, fb_(0, pf_r3), 0xfff},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(1, 0), fb_(0, pf_r3)}};
static PeepOp const p110_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, 0, 0, 0, fh_(20, 21)}, 0, 2, 153}};
static PeepConstraint const c110[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ne, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r1)},
  {pct_ge, 0, pft_exprn, pft_val, 2, -0xfff},
  {pct_le, 0, pft_exprn, pft_val, 2, 0xfff},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(1, 0), fb_(0, pf_r3)}};
static PeepOp const p111_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, 0, 0, 0, fh_(22, 1)}, 0, 3, 113}};
static PeepConstraint const c111[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r3), 0},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ge, 0, pft_field, pft_val, fb_(0, pf_r3), -0x3fc},
  {pct_le, 0, pft_field, pft_val, fb_(0, pf_r3), 0x3fc},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(1, 0), fb_(0, pf_r3)}};
static PeepOp const p112_ops[] = {
  {{pot_op, 0, 0, 0, J_ADDK}, 0, 1, 166},
  {{pot_and, 0, 0, 0, fh_(22, 21)}, 0, 2, 153}};
static PeepConstraint const c112[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(1, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_ge, 0, pft_exprn, pft_val, 2, -0x3fc},
  {pct_le, 0, pft_exprn, pft_val, 2, 0x3fc},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(1, 0), fb_(0, pf_r3)}};
static PeepOp const p113_ops[] = {
  {{pot_and, 0, 0, 0, fh_(2, 1)}, 0, 1, 166},
  {{pot_and, 0, pu_r2, 0, fh_(23, 24)}, 0, 2, 151}};
static PeepConstraint const c113[] = {
  {pct_eq, 0, pft_field, pft_val, fb_(1, pf_r2), R_SP},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r2), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(0, pf_r1), fb_(0, pf_r2)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r3), fb_(0, pf_r3)},
  {pct_proc2, pcp_nostackrefsbelow, pft_inst, pft_field, fb_(1, 0), fb_(0, pf_r3)}};
static PeepOp const p114_ops[] = {
  {{pot_op, 0, 0, 0, J_MOVK}, 0, 1, 166},
  {{pot_op, 0, pu_r1, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c114[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r3), fb_(0, pf_r3)}};
static PeepOp const p115_ops[] = {
  {{pot_opinset, 0, 0, 4, fh_(0, 130)}, p_dead_r1, 2, 149},
  {{pot_op, 0, 0, 0, J_MOVK}, 0, 1, 166},
  {{pot_op, 0, 0, 0, J_MOVK}, 0, 0, 0}};
static PeepConstraint const c115[] = {
  {pct_eq, 0, pft_field, pft_field, fb_(2, pf_r3), fb_(1, pf_r3)},
  {pct_eq, 0, pft_field, pft_field, fb_(1, pf_r1), fb_(0, pf_r1)}};
static PeepHole const patterns[] = {
  {&p1_ops[0], &c1[0], 1, 1, 0, 0},
  {&p2_ops[0], &c2[0], 1, 1, 0, 0},
  {&p3_ops[0], &c3[0], 1, 1, 0, 0},
  {&p4_ops[0], &c4[0], 1, 1, 0, 0},
  {&p5_ops[0], &c5[0], 1, 1, 0, 0},
  {&p6_ops[0], &c6[0], 2, 1, 0, 0},
  {&p7_ops[0], &c7[0], 2, 1, 0, 0},
  {&p8_ops[0], &c8[0], 2, 1, 0, 0},
  {&p9_ops[0], &c9[0], 2, 1, 0, 0},
  {&p10_ops[0], &c10[0], 2, 1, 0, 0},
  {&p11_ops[0], &c11[0], 2, 1, 0, 0},
  {&p12_ops[0], &c12[0], 2, 1, 0, 0},
  {&p13_ops[0], &c13[0], 2, 2, 0, 0},
  {&p14_ops[0], &c14[0], 2, 1, 0, 0},
  {&p15_ops[0], &c15[0], 2, 2, 0, 0},
  {&p16_ops[0], &c16[0], 2, 2, 0, 0},
  {&p17_ops[0], &c17[0], 2, 2, 0, 0},
  {&p18_ops[0], &c18[0], 2, 3, 0, 0},
  {&p19_ops[0], &c19[0], 2, 1, 0, 0},
  {&p20_ops[0], &c20[0], 2, 2, 0, 0},
  {&p21_ops[0], &c21[0], 2, 3, 0, 0},
  {&p22_ops[0], &c22[0], 2, 2, 0, 0},
  {&p23_ops[0], &c23[0], 2, 3, 0, 0},
  {&p24_ops[0], &c24[0], 2, 5, 0, 0},
  {&p25_ops[0], &c25[0], 2, 4, 0, 0},
  {&p26_ops[0], &c26[0], 2, 1, 0, 0},
  {&p27_ops[0], 0, 2, 0, 0, 0},
  {&p28_ops[0], &c28[0], 2, 1, 0, 0},
  {&p29_ops[0], &c29[0], 2, 1, 0, 0},
  {&p30_ops[0], &c30[0], 2, 1, 0, 0},
  {&p31_ops[0], &c31[0], 2, 1, 0, 0},
  {&p32_ops[0], &c32[0], 2, 3, 0, 0},
  {&p33_ops[0], &c33[0], 2, 4, 0, 0},
  {&p34_ops[0], &c34[0], 2, 4, 0, 0},
  {&p35_ops[0], &c35[0], 2, 1, 0, 0},
  {&p36_ops[0], &c36[0], 2, 2, 0, 0},
  {&p37_ops[0], &c37[0], 2, 1, 0, 0},
  {&p38_ops[0], &c38[0], 2, 1, 0, 0},
  {&p39_ops[0], &c39[0], 2, 1, 0, 0},
  {&p40_ops[0], &c40[0], 2, 1, 0, 0},
  {&p41_ops[0], &c41[0], 2, 1, 0, 0},
  {&p42_ops[0], &c42[0], 2, 1, 0, 0},
  {&p43_ops[0], &c43[0], 2, 1, 0, 0},
  {&p44_ops[0], &c44[0], 2, 2, 0, 0},
  {&p45_ops[0], &c45[0], 2, 1, 0, 0},
  {&p46_ops[0], 0, 2, 0, 0, 0},
  {&p47_ops[0], &c47[0], 2, 2, 0, 0},
  {&p48_ops[0], &c48[0], 2, 1, 0, 0},
  {&p49_ops[0], &c49[0], 2, 2, 0, 0},
  {&p50_ops[0], &c50[0], 2, 5, 0, 0},
  {&p51_ops[0], &c51[0], 2, 6, 0, 0},
  {&p52_ops[0], &c52[0], 2, 3, 0, 0},
  {&p53_ops[0], &c53[0], 2, 7, 0, 0},
  {&p54_ops[0], &c54[0], 2, 6, 0, 0},
  {&p55_ops[0], &c55[0], 2, 6, 0, 0},
  {&p56_ops[0], &c56[0], 2, 5, 0, 0},
  {&p57_ops[0], &c57[0], 2, 3, 0, 0},
  {&p58_ops[0], &c58[0], 3, 3, 0, 0},
  {&p59_ops[0], &c59[0], 2, 4, 0, 0},
  {&p60_ops[0], &c60[0], 3, 4, 0, 0},
  {&p61_ops[0], &c61[0], 3, 4, 0, 0},
  {&p62_ops[0], &c62[0], 2, 1, 0, 0},
  {&p63_ops[0], &c63[0], 2, 1, 0, 0},
  {&p64_ops[0], &c64[0], 2, 1, 0, 0},
  {&p65_ops[0], &c65[0], 2, 1, 0, 0},
  {&p66_ops[0], &c66[0], 2, 1, 0, 0},
  {&p67_ops[0], &c67[0], 2, 1, 0, 0},
  {&p68_ops[0], &c68[0], 2, 1, 0, 0},
  {&p69_ops[0], &c69[0], 2, 1, 0, 0},
  {&p70_ops[0], &c70[0], 2, 1, 0, 0},
  {&p71_ops[0], &c71[0], 2, 1, 0, 0},
  {&p72_ops[0], &c72[0], 2, 5, 0, 0},
  {&p73_ops[0], 0, 2, 0, 0, 0},
  {&p74_ops[0], &c74[0], 2, 3, 0, 0},
  {&p75_ops[0], &c75[0], 2, 4, 0, 0},
  {&p76_ops[0], &c76[0], 2, 2, 0, 0},
  {&p77_ops[0], &c77[0], 2, 3, 0, 0},
  {&p78_ops[0], &c78[0], 2, 1, 0, 0},
  {&p79_ops[0], &c79[0], 2, 1, 0, 0},
  {&p80_ops[0], &c80[0], 2, 2, 0, 0},
  {&p81_ops[0], &c81[0], 2, 1, 0, 0},
  {&p82_ops[0], &c82[0], 3, 3, 0, 0},
  {&p83_ops[0], &c83[0], 3, 4, 0, 0},
  {&p84_ops[0], &c84[0], 3, 3, 0, 0},
  {&p85_ops[0], &c85[0], 3, 3, 0, 0},
  {&p86_ops[0], &c86[0], 3, 3, 0, 0},
  {&p87_ops[0], &c87[0], 2, 1, 0, 0},
  {&p88_ops[0], &c88[0], 2, 3, 0, G_STR},
  {&p89_ops[0], &c89[0], 2, 2, 0, 0},
  {&p90_ops[0], &c90[0], 2, 2, 0, 0},
  {&p91_ops[0], &c91[0], 2, 2, 0, 0},
  {&p92_ops[0], &c92[0], 2, 2, 0, 0},
  {&p93_ops[0], &c93[0], 2, 2, 0, 0},
  {&p94_ops[0], &c94[0], 2, 2, 0, 0},
  {&p95_ops[0], &c95[0], 1, 1, 0, 0},
  {&p96_ops[0], &c96[0], 1, 1, 0, 0},
  {&p97_ops[0], &c97[0], 2, 1, 0, 0},
  {&p98_ops[0], &c98[0], 2, 1, 0, 0},
  {&p99_ops[0], &c99[0], 3, 3, 0, 0},
  {&p100_ops[0], &c100[0], 3, 3, 0, 0},
  {&p101_ops[0], &c101[0], 2, 1, 0, 0},
  {&p102_ops[0], &c102[0], 2, 1, 0, 0},
  {&p103_ops[0], &c103[0], 2, 2, 0, 0},
  {&p104_ops[0], &c104[0], 2, 3, 0, 0},
  {&p105_ops[0], &c105[0], 2, 3, 0, 0},
  {&p106_ops[0], &c106[0], 2, 1, 0, 0},
  {&p107_ops[0], &c107[0], 2, 1, 0, 0},
  {&p108_ops[0], &c108[0], 2, 1, 0, 0},
  {&p109_ops[0], &c109[0], 2, 8, 0, 0},
  {&p110_ops[0], &c110[0], 2, 7, 0, 0},
  {&p111_ops[0], &c111[0], 2, 7, 0, 0},
  {&p112_ops[0], &c112[0], 2, 6, 0, 0},
  {&p113_ops[0], &c113[0], 2, 5, 0, 0},
  {&p114_ops[0], &c114[0], 2, 2, 0, 0},
  {&p115_ops[0], &c115[0], 3, 2, 0, G_ANY}
};

#define PeepholeMax 115
#define MaxInst 3
#if pcp_argct_movc_pres_r1r2 != 2
 # error wrong argument count for pcp_movc_pres_r1r2
#endif
#if pcp_argct_notcall != 1
 # error wrong argument count for pcp_notcall
#endif
#if pcp_argct_regset_unused != 1
 # error wrong argument count for pcp_regset_unused
#endif
#if pcp_argct_notleafproc != 0
 # error wrong argument count for pcp_notleafproc
#endif
#if pcp_argct_regset_unkilled != 1
 # error wrong argument count for pcp_regset_unkilled
#endif
#if pcp_argct_difficult_constant != 1
 # error wrong argument count for pcp_difficult_constant
#endif
#if pcp_argct_nostackrefsbelow != 2
 # error wrong argument count for pcp_nostackrefsbelow
#endif
#if pcp_argct_config != 1
 # error wrong argument count for pcp_config
#endif
#if pep_argct_bit != 1
 # error wrong argument count for pep_bit
#endif
#if pep_argct_lsbpair != 1
 # error wrong argument count for pep_lsbpair
#endif
#if pep_argct_lsb != 1
 # error wrong argument count for pep_lsb
#endif
#if pep_argct_log2 != 1
 # error wrong argument count for pep_log2
#endif
#if pep_argct_shift_p != 1
 # error wrong argument count for pep_shift_p
#endif
#if pep_argct_shift_k != 2
 # error wrong argument count for pep_shift_k
#endif
#if pep_argct_bitcount != 1
 # error wrong argument count for pep_bitcount
#endif
static int const po_2[] = { /* B */
	23,
	25,
	84,
	85,
	98,
	99
};
static int const po_4[] = { /* LDRK */
	5,
	8,
	15,
	50,
	51,
	87
};
static int const po_5[] = { /* LDRR */
	5,
	6,
	8,
	9,
	15,
	48,
	100,
	101
};
static int const po_6[] = { /* LDRVK */
	15
};
static int const po_7[] = { /* LDRV */
	15
};
static int const po_8[] = { /* LDRBK */
	5,
	8,
	15,
	50,
	51,
	93,
	95,
	97
};
static int const po_9[] = { /* LDRBR */
	5,
	6,
	8,
	9,
	15,
	48,
	97,
	100,
	101
};
static int const po_10[] = { /* LDRBVK */
	15
};
static int const po_11[] = { /* LDRBV */
	15
};
static int const po_12[] = { /* LDRWK */
	5,
	8,
	15,
	50,
	51,
	92,
	94,
	96
};
static int const po_13[] = { /* LDRWR */
	5,
	6,
	8,
	9,
	15,
	48,
	96
};
static int const po_14[] = { /* LDRWVK */
	15
};
static int const po_15[] = { /* LDRWV */
	15
};
static int const po_16[] = { /* LDRLK */
	5,
	8,
	15
};
static int const po_17[] = { /* LDRLR */
	5,
	6,
	8,
	9,
	15
};
static int const po_18[] = { /* LDRLVK */
	15
};
static int const po_19[] = { /* LDRLV */
	15
};
static int const po_20[] = { /* LDRFK */
	5,
	8,
	15,
	49
};
static int const po_21[] = { /* LDRFR */
	5,
	6,
	8,
	9,
	15,
	48
};
static int const po_22[] = { /* LDRFVK */
	15
};
static int const po_23[] = { /* LDRFV */
	15
};
static int const po_24[] = { /* LDRDK */
	5,
	8,
	15,
	49
};
static int const po_25[] = { /* LDRDR */
	5,
	6,
	8,
	9,
	15,
	48
};
static int const po_26[] = { /* LDRDVK */
	15
};
static int const po_27[] = { /* LDRDV */
	15
};
static int const po_28[] = { /* STRK */
	5,
	7,
	8,
	10,
	50,
	114
};
static int const po_29[] = { /* STRR */
	5,
	6,
	7,
	8,
	9,
	10,
	48,
	100,
	101,
	114
};
static int const po_30[] = { /* STRVK */
	7,
	10
};
static int const po_31[] = { /* STRV */
	7,
	10
};
static int const po_32[] = { /* STRBK */
	5,
	7,
	8,
	10,
	46,
	50,
	114
};
static int const po_33[] = { /* STRBR */
	5,
	6,
	7,
	8,
	9,
	10,
	48,
	100,
	101,
	114
};
static int const po_34[] = { /* STRBVK */
	7,
	10
};
static int const po_35[] = { /* STRBV */
	7,
	10
};
static int const po_36[] = { /* STRWK */
	5,
	7,
	8,
	10
};
static int const po_37[] = { /* STRWR */
	5,
	6,
	7,
	8,
	9,
	10
};
static int const po_38[] = { /* ST8WVK */
	7,
	10
};
static int const po_39[] = { /* STRWV */
	7,
	10
};
static int const po_40[] = { /* STRLK */
	5,
	7,
	8,
	10
};
static int const po_41[] = { /* STRLR */
	5,
	6,
	7,
	8,
	9,
	10
};
static int const po_42[] = { /* STRLVK */
	7,
	10
};
static int const po_43[] = { /* STRLV */
	7,
	10
};
static int const po_44[] = { /* STRFK */
	5,
	7,
	8,
	10,
	49
};
static int const po_45[] = { /* STRFR */
	5,
	6,
	7,
	8,
	9,
	10,
	48
};
static int const po_46[] = { /* STRFVK */
	7,
	10
};
static int const po_47[] = { /* STRFV */
	7,
	10
};
static int const po_48[] = { /* STRDK */
	5,
	7,
	8,
	10,
	49
};
static int const po_49[] = { /* STRDR */
	5,
	6,
	7,
	8,
	9,
	10,
	48
};
static int const po_50[] = { /* STRDVK */
	7,
	10
};
static int const po_51[] = { /* STRDV */
	7,
	10
};
static int const po_52[] = { /* LDRV1 */
	15
};
static int const po_53[] = { /* PUSHR */
	7,
	10
};
static int const po_54[] = { /* MOVK */
	15,
	113
};
static int const po_55[] = { /* MOVR */
	4,
	6,
	9,
	15,
	16,
	17,
	18,
	79
};
static int const po_56[] = { /* CMPK */
	5,
	8,
	31,
	32,
	33,
	45
};
static int const po_57[] = { /* CMPR */
	5,
	6,
	8,
	9,
	45,
	62,
	66,
	81,
	89
};
static int const po_58[] = { /* CHKLK */
	5,
	8
};
static int const po_59[] = { /* CHKLR */
	5,
	6,
	8,
	9
};
static int const po_60[] = { /* CHKUK */
	5,
	8
};
static int const po_61[] = { /* CHKUR */
	5,
	6,
	8,
	9
};
static int const po_66[] = { /* CASEBRANCH */
	7,
	10
};
static int const po_67[] = { /* USE */
	7,
	10
};
static int const po_68[] = { /* LDRFV1 */
	15
};
static int const po_69[] = { /* PUSHF */
	7,
	10
};
static int const po_70[] = { /* MOVFK */
	15
};
static int const po_71[] = { /* MOVFR */
	6,
	9,
	15
};
static int const po_72[] = { /* LDRDV1 */
	15
};
static int const po_73[] = { /* PUSHD */
	7,
	10,
	47
};
static int const po_74[] = { /* MOVDK */
	15
};
static int const po_75[] = { /* MOVDR */
	6,
	9,
	15
};
static int const po_76[] = { /* ANDK */
	0,
	5,
	8,
	15,
	34,
	36,
	40,
	56,
	82,
	83,
	86
};
static int const po_77[] = { /* ANDR */
	5,
	6,
	8,
	9,
	15,
	27,
	28,
	29,
	30,
	61,
	63,
	65,
	67,
	88,
	90
};
static int const po_78[] = { /* ORRK */
	5,
	8,
	15,
	35,
	37,
	41,
	86
};
static int const po_79[] = { /* ORRR */
	5,
	6,
	8,
	9,
	15,
	61,
	63,
	65,
	67,
	88,
	90
};
static int const po_80[] = { /* EORK */
	5,
	8,
	15,
	38,
	42,
	86
};
static int const po_81[] = { /* EORR */
	5,
	6,
	8,
	9,
	15,
	61,
	63,
	65,
	67,
	88,
	90
};
static int const po_82[] = { /* ADDK */
	3,
	5,
	8,
	15,
	39,
	43,
	52,
	53,
	54,
	55,
	58,
	69,
	70,
	86,
	108,
	109,
	110,
	111,
	112
};
static int const po_83[] = { /* ADDR */
	2,
	5,
	6,
	8,
	9,
	15,
	19,
	20,
	21,
	22,
	61,
	63,
	65,
	67,
	88,
	90
};
static int const po_84[] = { /* CALLK */
	15,
	26
};
static int const po_85[] = { /* CALLR */
	15,
	75,
	76,
	102,
	103,
	104
};
static int const po_86[] = { /* MULK */
	5,
	8,
	15
};
static int const po_87[] = { /* MULR */
	15
};
static int const po_88[] = { /* CMPFK */
	5,
	8,
	45
};
static int const po_89[] = { /* CMPFR */
	5,
	6,
	8,
	9,
	45
};
static int const po_90[] = { /* CHKNEFK */
	5,
	8
};
static int const po_91[] = { /* CHKNEFR */
	5,
	6,
	8,
	9
};
static int const po_92[] = { /* CHKNEDK */
	5,
	8
};
static int const po_93[] = { /* CHKNEDR */
	5,
	6,
	8,
	9
};
static int const po_94[] = { /* CHKNEK */
	5,
	8
};
static int const po_95[] = { /* CHKNER */
	5,
	6,
	8,
	9
};
static int const po_96[] = { /* OPSYSK */
	15
};
static int const po_97[] = { /* CSE_LOADR */
	15
};
static int const po_98[] = { /* INIT */
	15
};
static int const po_101[] = { /* ADCONF */
	15
};
static int const po_102[] = { /* ADCOND */
	15
};
static int const po_103[] = { /* STRING */
	15
};
static int const po_104[] = { /* SUBK */
	5,
	8,
	15,
	86
};
static int const po_105[] = { /* SUBR */
	5,
	6,
	8,
	9,
	15,
	44,
	61,
	64,
	65,
	68,
	88,
	91
};
static int const po_106[] = { /* DIVK */
	5,
	8,
	15
};
static int const po_107[] = { /* DIVR */
	5,
	6,
	8,
	9,
	15
};
static int const po_108[] = { /* RSBK */
	5,
	8,
	15,
	86
};
static int const po_109[] = { /* RSBR */
	5,
	6,
	8,
	9,
	15,
	61,
	64,
	65,
	68,
	88,
	91
};
static int const po_110[] = { /* REMK */
	5,
	8,
	15
};
static int const po_111[] = { /* REMR */
	5,
	6,
	8,
	9,
	15
};
static int const po_112[] = { /* SHLK */
	5,
	8,
	15
};
static int const po_113[] = { /* SHLR */
	5,
	6,
	8,
	9,
	15
};
static int const po_114[] = { /* SHRK */
	5,
	8,
	15
};
static int const po_115[] = { /* SHRR */
	5,
	6,
	8,
	9,
	15
};
static int const po_116[] = { /* INLINE1 */
	5,
	8,
	15
};
static int const po_117[] = { /* NEGR */
	6,
	9,
	15
};
static int const po_118[] = { /* NOTR */
	6,
	9,
	15,
	61,
	65,
	88
};
static int const po_119[] = { /* ADCONV */
	15
};
static int const po_120[] = { /* USEF */
	7,
	10
};
static int const po_121[] = { /* INITF */
	15
};
static int const po_122[] = { /* ADDFK */
	5,
	8,
	15
};
static int const po_123[] = { /* ADDFR */
	5,
	6,
	8,
	9,
	15
};
static int const po_124[] = { /* MULFK */
	5,
	8,
	15
};
static int const po_125[] = { /* MULFR */
	5,
	6,
	8,
	9,
	15
};
static int const po_126[] = { /* INLINE1F */
	5,
	8,
	15
};
static int const po_127[] = { /* SUBFK */
	5,
	8,
	15
};
static int const po_128[] = { /* SUBFR */
	5,
	6,
	8,
	9,
	15
};
static int const po_129[] = { /* DIVFK */
	5,
	8,
	15
};
static int const po_130[] = { /* DIVFR */
	5,
	6,
	8,
	9,
	15
};
static int const po_131[] = { /* NEGFR */
	6,
	9,
	15
};
static int const po_132[] = { /* FLTFR */
	6,
	9,
	15
};
static int const po_133[] = { /* FIXFR */
	6,
	9,
	15
};
static int const po_134[] = { /* MOVDFR */
	6,
	9,
	15
};
static int const po_135[] = { /* MOVIFR */
	6,
	9,
	15
};
static int const po_136[] = { /* ADCON */
	15
};
static int const po_137[] = { /* USED */
	7,
	10
};
static int const po_138[] = { /* INITD */
	15
};
static int const po_139[] = { /* CMPDK */
	5,
	8,
	45
};
static int const po_140[] = { /* CMPDR */
	5,
	6,
	8,
	9,
	45
};
static int const po_141[] = { /* ADDDK */
	5,
	8,
	15
};
static int const po_142[] = { /* ADDDR */
	5,
	6,
	8,
	9,
	15
};
static int const po_143[] = { /* MULDK */
	5,
	8,
	15
};
static int const po_144[] = { /* MULDR */
	5,
	6,
	8,
	9,
	15
};
static int const po_145[] = { /* MOVIDR */
	5,
	6,
	8,
	9,
	15
};
static int const po_146[] = { /* INLINE1D */
	5,
	8,
	15
};
static int const po_147[] = { /* SUBDK */
	5,
	8,
	15
};
static int const po_148[] = { /* SUBDR */
	5,
	6,
	8,
	9,
	15
};
static int const po_149[] = { /* DIVDK */
	5,
	8,
	15
};
static int const po_150[] = { /* DIVDR */
	5,
	6,
	8,
	9,
	15
};
static int const po_151[] = { /* NEGDR */
	6,
	9,
	15
};
static int const po_152[] = { /* FLTDR */
	6,
	9,
	15
};
static int const po_153[] = { /* FIXDR */
	6,
	9,
	15
};
static int const po_154[] = { /* MOVFDR */
	6,
	9,
	15
};
static int const po_155[] = { /* CSE_WORD1 */
	6,
	9,
	15
};
static int const po_156[] = { /* CSE_WORD2 */
	6,
	9,
	15
};
static int const po_157[] = { /* CLRC */
	13,
	14
};
static int const po_158[] = { /* MOVC */
	11,
	12,
	13,
	14,
	57
};
static int const po_159[] = { /* TAILCALLK */
	15,
	24
};
static int const po_160[] = { /* TAILCALLR */
	6,
	9,
	15,
	24,
	77,
	78,
	105,
	106,
	107
};
static int const po_165[] = { /* RESULT2 */
	6,
	9,
	15
};
static int const po_166[] = { /* FNCON */
	15
};
static int const po_167[] = { /* MOVDIR */
	6,
	9,
	15
};
static int const po_168[] = { /* MOVFIR */
	6,
	9,
	15
};
static int const po_169[] = { /* SCCK */
	15
};
static int const po_170[] = { /* EXTEND */
	5,
	8,
	15
};
static int const po_171[] = { /* RORK */
	5,
	8,
	15
};
static int const po_172[] = { /* RORR */
	5,
	6,
	8,
	9,
	15
};
static int const po_173[] = { /* BZ */
	5,
	8
};
static int const po_176[] = { /* POPM */
	1,
	59,
	60,
	71,
	72,
	73,
	74
};
static int const po_178[] = { /* CONDEXEC */
	84,
	85,
	98,
	99
};
static int const po_180[] = { /* MOVLIR */
	6,
	9,
	15
};
static int const po_181[] = { /* MOVILR */
	5,
	6,
	8,
	9,
	15
};
static int const po_182[] = { /* MLA */
	15
};
static int const po_183[] = { /* BICR */
	5,
	6,
	8,
	9,
	15
};
static int const po_184[] = { /* POPMB */
	5,
	8
};
static int const po_185[] = { /* PUSHC */
	1,
	11,
	12
};
static int const po_186[] = { /* CALLI */
	15
};
static int const po_187[] = { /* CALLIR */
	6,
	9,
	15
};
static int const po_188[] = { /* TAILCALLI */
	15
};
static int const po_189[] = { /* TAILCALLIR */
	6,
	9,
	15
};
static int const po_190[] = { /* CALLX */
	15
};
static int const po_191[] = { /* CALLXR */
	6,
	9,
	15
};
static int const po_192[] = { /* TAILCALLX */
	15
};
static int const po_193[] = { /* TAILCALLXR */
	6,
	9,
	15
};

static struct { int i; int const *peepv; } const peepholeperop[] = {
	{0, 0},
	{0, 0},
	{6, &po_2[0]},
	{0, 0},
	{6, &po_4[0]},
	{8, &po_5[0]},
	{1, &po_6[0]},
	{1, &po_7[0]},
	{8, &po_8[0]},
	{9, &po_9[0]},
	{1, &po_10[0]},
	{1, &po_11[0]},
	{8, &po_12[0]},
	{7, &po_13[0]},
	{1, &po_14[0]},
	{1, &po_15[0]},
	{3, &po_16[0]},
	{5, &po_17[0]},
	{1, &po_18[0]},
	{1, &po_19[0]},
	{4, &po_20[0]},
	{6, &po_21[0]},
	{1, &po_22[0]},
	{1, &po_23[0]},
	{4, &po_24[0]},
	{6, &po_25[0]},
	{1, &po_26[0]},
	{1, &po_27[0]},
	{6, &po_28[0]},
	{10, &po_29[0]},
	{2, &po_30[0]},
	{2, &po_31[0]},
	{7, &po_32[0]},
	{10, &po_33[0]},
	{2, &po_34[0]},
	{2, &po_35[0]},
	{4, &po_36[0]},
	{6, &po_37[0]},
	{2, &po_38[0]},
	{2, &po_39[0]},
	{4, &po_40[0]},
	{6, &po_41[0]},
	{2, &po_42[0]},
	{2, &po_43[0]},
	{5, &po_44[0]},
	{7, &po_45[0]},
	{2, &po_46[0]},
	{2, &po_47[0]},
	{5, &po_48[0]},
	{7, &po_49[0]},
	{2, &po_50[0]},
	{2, &po_51[0]},
	{1, &po_52[0]},
	{2, &po_53[0]},
	{2, &po_54[0]},
	{8, &po_55[0]},
	{6, &po_56[0]},
	{9, &po_57[0]},
	{2, &po_58[0]},
	{4, &po_59[0]},
	{2, &po_60[0]},
	{4, &po_61[0]},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{2, &po_66[0]},
	{2, &po_67[0]},
	{1, &po_68[0]},
	{2, &po_69[0]},
	{1, &po_70[0]},
	{3, &po_71[0]},
	{1, &po_72[0]},
	{3, &po_73[0]},
	{1, &po_74[0]},
	{3, &po_75[0]},
	{11, &po_76[0]},
	{15, &po_77[0]},
	{7, &po_78[0]},
	{11, &po_79[0]},
	{6, &po_80[0]},
	{11, &po_81[0]},
	{19, &po_82[0]},
	{16, &po_83[0]},
	{2, &po_84[0]},
	{6, &po_85[0]},
	{3, &po_86[0]},
	{1, &po_87[0]},
	{3, &po_88[0]},
	{5, &po_89[0]},
	{2, &po_90[0]},
	{4, &po_91[0]},
	{2, &po_92[0]},
	{4, &po_93[0]},
	{2, &po_94[0]},
	{4, &po_95[0]},
	{1, &po_96[0]},
	{1, &po_97[0]},
	{1, &po_98[0]},
	{0, 0},
	{0, 0},
	{1, &po_101[0]},
	{1, &po_102[0]},
	{1, &po_103[0]},
	{4, &po_104[0]},
	{12, &po_105[0]},
	{3, &po_106[0]},
	{5, &po_107[0]},
	{4, &po_108[0]},
	{11, &po_109[0]},
	{3, &po_110[0]},
	{5, &po_111[0]},
	{3, &po_112[0]},
	{5, &po_113[0]},
	{3, &po_114[0]},
	{5, &po_115[0]},
	{3, &po_116[0]},
	{3, &po_117[0]},
	{6, &po_118[0]},
	{1, &po_119[0]},
	{2, &po_120[0]},
	{1, &po_121[0]},
	{3, &po_122[0]},
	{5, &po_123[0]},
	{3, &po_124[0]},
	{5, &po_125[0]},
	{3, &po_126[0]},
	{3, &po_127[0]},
	{5, &po_128[0]},
	{3, &po_129[0]},
	{5, &po_130[0]},
	{3, &po_131[0]},
	{3, &po_132[0]},
	{3, &po_133[0]},
	{3, &po_134[0]},
	{3, &po_135[0]},
	{1, &po_136[0]},
	{2, &po_137[0]},
	{1, &po_138[0]},
	{3, &po_139[0]},
	{5, &po_140[0]},
	{3, &po_141[0]},
	{5, &po_142[0]},
	{3, &po_143[0]},
	{5, &po_144[0]},
	{5, &po_145[0]},
	{3, &po_146[0]},
	{3, &po_147[0]},
	{5, &po_148[0]},
	{3, &po_149[0]},
	{5, &po_150[0]},
	{3, &po_151[0]},
	{3, &po_152[0]},
	{3, &po_153[0]},
	{3, &po_154[0]},
	{3, &po_155[0]},
	{3, &po_156[0]},
	{2, &po_157[0]},
	{5, &po_158[0]},
	{2, &po_159[0]},
	{9, &po_160[0]},
	{0, 0},
	{0, 0},
	{0, 0},
	{0, 0},
	{3, &po_165[0]},
	{1, &po_166[0]},
	{3, &po_167[0]},
	{3, &po_168[0]},
	{1, &po_169[0]},
	{3, &po_170[0]},
	{3, &po_171[0]},
	{5, &po_172[0]},
	{2, &po_173[0]},
	{0, 0},
	{0, 0},
	{7, &po_176[0]},
	{0, 0},
	{4, &po_178[0]},
	{0, 0},
	{3, &po_180[0]},
	{5, &po_181[0]},
	{1, &po_182[0]},
	{5, &po_183[0]},
	{2, &po_184[0]},
	{3, &po_185[0]},
	{1, &po_186[0]},
	{3, &po_187[0]},
	{1, &po_188[0]},
	{3, &po_189[0]},
	{1, &po_190[0]},
	{3, &po_191[0]},
	{1, &po_192[0]},
	{3, &po_193[0]}
};
@
