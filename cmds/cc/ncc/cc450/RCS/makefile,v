head	1.38;
access;
symbols
	Helios_C40_1_3_Official_Release:1.30
	Alenia_release:1.25
	C40_Field_Test_2:1.25
	C40_Field_Test_R1:1.20;
locks; strict;
comment	@# @;


1.38
date	93.11.17.17.17.29;	author nickc;	state Exp;
branches;
next	1.37;

1.37
date	93.08.06.15.01.23;	author nickc;	state Exp;
branches;
next	1.36;

1.36
date	93.08.05.08.30.36;	author nickc;	state Exp;
branches;
next	1.35;

1.35
date	93.07.27.17.39.55;	author nickc;	state Exp;
branches;
next	1.34;

1.34
date	93.07.27.17.30.17;	author nickc;	state Exp;
branches;
next	1.33;

1.33
date	93.07.27.15.09.50;	author nickc;	state Exp;
branches;
next	1.32;

1.32
date	93.07.07.10.39.13;	author nickc;	state Exp;
branches;
next	1.31;

1.31
date	93.06.24.11.16.42;	author nickc;	state Exp;
branches;
next	1.30;

1.30
date	93.05.12.10.35.58;	author nickc;	state Exp;
branches;
next	1.29;

1.29
date	93.05.12.10.10.31;	author nickc;	state Exp;
branches;
next	1.28;

1.28
date	93.04.20.10.23.21;	author nickc;	state Exp;
branches;
next	1.27;

1.27
date	93.04.14.13.58.34;	author nickc;	state Exp;
branches;
next	1.26;

1.26
date	93.02.17.11.49.40;	author nick;	state Exp;
branches;
next	1.25;

1.25
date	92.09.11.09.25.03;	author nickc;	state Exp;
branches;
next	1.24;

1.24
date	92.08.04.18.08.35;	author paul;	state Exp;
branches;
next	1.23;

1.23
date	92.07.10.08.31.15;	author paul;	state Exp;
branches;
next	1.22;

1.22
date	92.07.08.14.51.36;	author paul;	state Exp;
branches;
next	1.21;

1.21
date	92.07.01.23.40.06;	author paul;	state Exp;
branches;
next	1.20;

1.20
date	92.07.01.15.12.24;	author nickc;	state Exp;
branches;
next	1.19;

1.19
date	92.07.01.14.39.13;	author nickc;	state Exp;
branches;
next	1.18;

1.18
date	92.07.01.11.17.11;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	92.06.30.16.04.19;	author nickc;	state Exp;
branches;
next	1.16;

1.16
date	92.06.30.15.47.35;	author nickc;	state Exp;
branches;
next	1.15;

1.15
date	92.05.13.15.30.34;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	92.05.13.14.01.42;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	92.04.30.13.34.08;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	92.04.29.08.56.16;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	92.04.22.17.25.57;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	92.04.15.17.47.58;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	92.04.15.17.20.55;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.04.14.07.53.31;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	92.04.13.15.50.44;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.04.13.15.46.45;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.04.07.13.06.55;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	92.04.07.12.51.22;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	92.04.07.10.06.15;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	92.04.03.15.05.02;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	92.03.26.14.28.32;	author nickc;	state Exp;
branches;
next	;


desc
@makefile for the Helios C40 C Compiler
,.
@


1.38
log
@fixed sources declaration
@
text
@#
# Makefile for the Helios C compilers
#
# Copyright (c) 1992-1993 by Perihelion Software Ltd.
#  All Rights Reserved
#
# Author: N Clifton
# RCS Id: $Id: makefile,v 1.37 1993/08/06 15:01:23 nickc Exp nickc $
#

#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Norcroft C compiler
#
# File: /HSRC/cmds/cc/ncc/cc450/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.37 1993/08/06 15:01:23 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = cmds/cc/ncc/cc450

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
 HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

SOURCES.c = mip/aetree.c mip/aoutobj.c mip/bind.c mip/builtin.c mip/cg.c mip/codebuf.c \
	  mip/coffobj.c mip/compiler.c mip/cse.c mip/csescan.c mip/dbx.c mip/driver.c \
	  mip/flowgraf.c mip/fname.c mip/heliobj.c mip/ieeeflt.c mip/jopprint.c mip/misc.c \
	  mip/prgname.c mip/regalloc.c mip/regsets.c mip/store.c mip/version.c \
	  cfe/lex.c cfe/pp.c cfe/sem.c cfe/simplify.c cfe/syn.c cfe/vargen.c \
	  util/datenow.c util/genhdrs.c util/peepgen.c util/striphdr.c util/toansi.c util/topcc.c

HEADERS.c = mip/aeops.h mip/aetree.h mip/aout.h mip/bind.h mip/builtin.h mip/cg.h mip/cgdefs.h \
	  mip/codebuf.h mip/coff.h mip/compiler.h mip/cse.h mip/cseguts.h mip/defaults.h \
	  mip/defs.h mip/drivhelp.h mip/flowgraf.h mip/fname.h mip/globals.h mip/helios.h \
	  mip/host.h mip/jopcode.h mip/mcdep.h mip/miperrs.h mip/mipvsn.h mip/module.h \
	  mip/optproto.h mip/prgname.h mip/regalloc.h mip/regsets.h mip/sixchar.h mip/store.h \
	  mip/util.h mip/version.h mip/xrefs.h \
	  cfe/feerrs.h cfe/fevsn.h cfe/lex.h cfe/pp.h cfe/sem.h cfe/simplify.h cfe/syn.h \
	  cfe/vargen.h 

SOURCES.odd = makefile mip/makefile cfe/makefile util/Makefile RS6000/makefile HP/makefile \
	    SUN4/makefile

# Target specific sources

ifeq ($(HPROC),ARM)
  SOURCES.c	:= $(SOURCES.c) arm/aaof.c arm/asd.c arm/asm.c arm/gen.c arm/mcdep.c \
		   arm/peephole.c arm/peeppat.c arm/peeptest.c arm/uasm.c
  HEADERS.c	:= $(HEADERS.c) arm/errors.h arm/mcdpriv.h arm/mcerrs.h arm/mcvsn.h arm/ops.h \
		   arm/options.h arm/target.h
  SOURCES.odd   := $(SOURCES.odd) arm/makefile ARM/makefile
else
  ifeq ($(HPROC),C40)
    SOURCES.c	:= $(SOURCES.c) c40/asm.c c40/debug.c c40/gen.c c40/mcdep.c c40/peep.c
    HEADERS.c	:= $(HEADERS.c) c40/errors.h c40/mcdpriv.h c40/mcerrs.h c40/mcvsn.h c40/ops.h \
		   c40/options.h c40/peep.h c40/target.h
    SOURCES.odd := $(SOURCES.odd) c40/makefile C40/makefile

  else
    ifeq ($(HPROC),M68K)
      SOURCES.c	:= $(SOURCES.c) 68k/asm.c 68k/decins.c 68k/gen.c 68k/mcdep.c 68k/unixins.c
      HEADERS.c	:= $(HEADERS.c) 68k/errors.h 68k/mcdpriv.h 68k/mcerrs.h 68k/mcvsn.h 68k/ops.h \
		   68k/options.h 68k/target.h
      SOURCES.odd := $(SOURCES.odd) 68k/makefile M68K/makefile
    else
      echo *** unknown target for compiler
    endif
  endif
endif

#-----------------------------------------------------------------------------
# Other generic component variables:

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

.SUFFIXES:
.SUFFIXES: .src .rs6000_obj .snake_obj .sparc_obj .c40_obj .arm_obj .68k_obj

# programs

SNAKE_CC	= cc
SPARC_CC	= gcc
RS6000_CC	= xlc
C40_CC		= ccc40
ARM_CC		= ccarm
68K_CC		= ccm68k

SNAKE_LN	= cc
SPARC_LN	= gcc
RS6000_LN	= xlc
C40_LN		= ldc40
ARM_LN		= ldarm
68K_LN		= ldm68k

RM		= rm
MV		= mv
CD		= cd
CP		= cp

# command line flags for the programs

SNAKE_CFLAGS	= -Aa +w1
SPARC_CFLAGS	= -ansi  
RS6000_CFLAGS	= 
C40_CFLAGS	= -Ffao -Zpz1 -Zpl1 -Zps1 -Zpw0
ARM_CFLAGS      = -D__HELIOS
68K_CFLAGS      =

#SNAKE_DEFINES	= -DDEBUG
SNAKE_DEFINES	=
SPARC_DEFINES	= -D__SPARC
RS6000_DEFINES	= 
C40_DEFINES	= -I$(HPROD)/include
ARM_DEFINES	= -I$(HPROD)/include
68K_DEFINES     = -I$(HPROD)/include

# NB/ we must use -Bdynamic as Solaris 2.0 is only able to run dymanically linked SunOs 4.0 executables

SNAKE_LDOPTS	= -Aa 
SPARC_LDOPTS	= -ansi -Bdynamic
RS6000_LDOPTS	= 
C40_LDOPTS	= $(HPROD)/lib/c0.o -l$(HPROD)/lib/helios.lib -l$(HPROD)/lib/c.lib
ARM_LDOPTS	= $(HPROD)/lib/c0.o -l$(HPROD)/lib/helios.lib -l$(HPROD)/lib/c.lib
68K_LDOPTS	= $(HPROD)/lib/c0.o -l$(HPROD)/lib/helios.lib -l$(HPROD)/lib/c.lib

# generic command line flags

ifeq ($(HPROC),ARM)
  CFLAGS		= -I../mip -I../cfe -I../arm
else
  ifeq ($(HPROC),C40)
    CFLAGS		= -I../mip -I../cfe -I../c40
  else
    ifeq ($(HPROC),M68K)
      CFLAGS		= -I../mip -I../cfe -I../68k
    endif
  endif
endif

ifeq ($(HPROC),M68K)
  DEFINES		= -DCOMPILING_ON_UNIX -DNO_VERSION_STRINGS
else
  DEFINES		= -DCOMPILING_ON_UNIX -DNO_VERSION_STRINGS -D__SMT
endif

LDOPTS		=

# compiler names

ifeq ($(HPROC),ARM)
  SNAKE_NCC	= ccarm
  SPARC_NCC	= ccarm 
  RS6000_NCC	= ccarm
  FOREIGN_CC    = ccc40 ccm68k
else
  ifeq ($(HPROC),C40)
    SNAKE_NCC	= ccc40
    SPARC_NCC	= ccc40 
    RS6000_NCC	= ccc40
    FOREIGN_CC  = ccarm ccm68k
  else
    ifeq ($(HPROC),M68K)
      SNAKE_NCC	 = ccm68k
      SPARC_NCC	 = ccm68k
      RS6000_NCC = ccm68k
      FOREIGN_CC = ccarm ccc40
    endif
  endif
endif

C40_NCC		= ncc
ARM_NCC		= ncc
68K_NCC         = ncc

#rules

.src.snake_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(SNAKE_DEFINES) $(DEFINES)" \
			  DEST=../HP

.src.sparc_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(SPARC_CC) CFLAGS="$(SPARC_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(SPARC_DEFINES) $(DEFINES)" \
			  DEST=../SUN4

.src.rs6000_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(RS6000_CC) CFLAGS="$(RS6000_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(RS6000_DEFINES) $(DEFINES)" \
			  DEST=../RS6000

.src.c40_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(C40_CC) CFLAGS="$(C40_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(C40_DEFINES) $(DEFINES)" \
			  DEST=../C40

.src.arm_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(ARM_CC) CFLAGS="$(ARM_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(ARM_DEFINES) $(DEFINES)" \
			  DEST=../ARM

.src.68k_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(68K_CC) CFLAGS="$(68K_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(68K_DEFINES) $(DEFINES)" \
			  DEST=../M68K

# components

ifeq ($(HPROC),ARM)
  SNAKE_OBJS	= arm.snake_obj  mip.snake_obj  cfe.snake_obj 
  SPARC_OBJS	= arm.sparc_obj  mip.sparc_obj  cfe.sparc_obj 
  RS6000_OBJS	= arm.rs6000_obj mip.rs6000_obj cfe.rs6000_obj
else
  ifeq ($(HPROC),C40)
    SNAKE_OBJS	= c40.snake_obj  mip.snake_obj  cfe.snake_obj 
    SPARC_OBJS	= c40.sparc_obj  mip.sparc_obj  cfe.sparc_obj 
    RS6000_OBJS	= c40.rs6000_obj mip.rs6000_obj cfe.rs6000_obj
  else
    ifeq ($(HPROC),M68K)
      SNAKE_OBJS  = 68k.snake_obj  mip.snake_obj  cfe.snake_obj 
      SPARC_OBJS  = 68k.sparc_obj  mip.sparc_obj  cfe.sparc_obj 
      RS6000_OBJS = 68k.rs6000_obj mip.rs6000_obj cfe.rs6000_obj
    endif
  endif
endif

C40_OBJS	= c40.c40_obj    mip.c40_obj    cfe.c40_obj   
ARM_OBJS	= arm.arm_obj    mip.arm_obj    cfe.arm_obj   
68K_OBJS	= 68k.68k_obj    mip.68k_obj    cfe.68k_obj   


#targets

ifeq ($(HHOST),HP)
    all: $(SNAKE_NCC) 

    $(SNAKE_NCC): test-clean-HP $(SNAKE_OBJS)
	$(CD) ../HP; $(SNAKE_LN) $(SNAKE_LDOPTS) $(LDOPTS) *.o -o $(SNAKE_NCC)
else
  ifeq ($(HHOST),SUN4)
    all: $(SPARC_NCC) 

    $(SPARC_NCC): test-clean-SUN4 $(SPARC_OBJS)
	$(CD) ../SUN4; $(SPARC_LN) $(SPARC_LDOPTS) $(LDOPTS) *.o -o $(SPARC_NCC)
  else
    ifeq ($(HHOST),RS6000)
      all: $(RS6000_NCC) 

      $(RS6000_NCC): test-clean-RS6000 $(RS6000_OBJS)
	  $(CD) ../RS6000; $(RS6000_LN) $(RS6000_LDOPTS) $(LDOPTS) *.o -o $(RS6000_NCC)
    endif
  endif
endif

ifeq ($(HPROC),ARM)
  $(ARM_NCC):   $(ARM_OBJS)
	$(CD) ../ARM; $(ARM_LN) -s20000 $(ARM_LDOPTS) $(LDOPTS) *.o -o $(ARM_NCC)
else
  ifeq ($(HPROC),C40)
    $(C40_NCC):   $(C40_OBJS)
	$(CD) ../C40; $(C40_LN) -s20000 $(C40_LDOPTS) $(LDOPTS) *.o -o $(C40_NCC)
  else
    ifeq ($(HPROC),M68K)
      $(68K_NCC):   $(68K_OBJS)
	$(CD) ../M68K; $(68K_LN) -s20000 $(68K_LDOPTS) $(LDOPTS) *.o -o $(68K_NCC)
    endif
  endif
endif


install-C40: $(C40_NCC)
	-$(MV) $(C40_NCC) $(HPROD)/bin/ncc

install-ARM: $(ARM_NCC)
	-$(MV) $(ARM_NCC) $(HPROD)/bin/ncc

install-68K: $(68K_NCC)
	-$(MV) $(68K_NCC) $(HPROD)/bin/ncc

install-SUN4: $(SPARC_NCC)

install-HP: $(SNAKE_NCC)
	-$(MV) $(HHOSTBIN)/$(SNAKE_NCC) $(HHOSTBIN)/$(SNAKE_NCC).old
	$(CP) ../HP/$(SNAKE_NCC) $(HHOSTBIN)

install-RS6000: $(RS6000_NCC)
	-$(MV) $(HHOSTBIN)/$(RS6000_NCC) $(HHOSTBIN)/$(RS6000_NCC).old
	$(CP) ../RS6000/$(RS6000_NCC) $(HHOSTBIN)

ifeq ($(HPROC),ARM)
  DEF_INSTALL = install-ARM
  DEF_CLEAN   = clean-ARM
else
  ifeq ($(HPROC),C40)
    DEF_INSTALL = install-C40
    DEF_CLEAN   = clean-C40
  else
    ifeq ($(HPROC),M68K)
      DEF_INSTALL = install-68K
      DEF_CLEAN   = clean-68K
    endif
  endif
endif

install: $(DEF_INSTALL)


clean-C40:
	$(CD) ../C40 ; $(RM) -f *.o $(C40_NCC)

clean-ARM:
	$(CD) ../ARM ; $(RM) -f *.o $(ARM_NCC)

clean-68K:
	$(CD) ../M68K ; $(RM) -f *.o $(68K_NCC)

clean-HP:
	$(CD) ../HP ; $(RM) -f *.o $(SNAKE_NCC)

clean-RS6000:
	$(CD) ../RS6000 ; $(RM) -f *.o $(RS6000_NCC)

clean-SUN4:
	$(CD) ../SUN4 ; $(RM) -f *.o $(SPARC_NCC)

squeekyclean: clean-C40 clean-HP clean-SUN4 clean-RS6000 clean-ARM clean-68K
	$(CD) ../mip   ; $(MAKE) clean
	$(CD) ../cfe   ; $(MAKE) clean
	$(CD) ../c40   ; $(MAKE) clean
	$(CD) ../arm   ; $(MAKE) clean
	$(CD) ../M68k  ; $(MAKE) clean

clean: $(DEF_CLEAN)

test-clean-RS6000:
	$(CD) ../RS6000; $(foreach FOREIGN, $(FOREIGN_CC), if [ -f $(FOREIGN) ] ; then rm *.o $(FOREIGN) ; fi ; )

test-clean-HP:
	$(CD) ../HP; $(foreach FOREIGN, $(FOREIGN_CC), if [ -f $(FOREIGN) ] ; then rm *.o $(FOREIGN) ; fi ; )

test-clean-SUN4:
	$(CD) ../SUN4; $(foreach FOREIGN, $(FOREIGN_CC), if [ -f $(FOREIGN) ] ; then rm *.o $(FOREIGN) ; fi ; )

tags:
	etags -e -t c40/*.[ch] mip/*.[ch] cfe/*.[ch]

# dependencies

mip.snake_obj: mip.src
cfe.snake_obj: cfe.src
c40.snake_obj: c40.src
arm.snake_obj: arm.src
68k.snake_obj: 68k.src

mip.sparc_obj: mip.src
cfe.sparc_obj: cfe.src
c40.sparc_obj: c40.src
arm.sparc_obj: arm.src
68k.sparc_obj: 68k.src

mip.c40_obj: mip.src
cfe.c40_obj: cfe.src
c40.c40_obj: c40.src
arm.c40_obj: arm.src
68k.c40_obj: 68k.src

mip.rs6000_obj: mip.src
cfe.rs6000_obj: cfe.src
c40.rs6000_obj: c40.src
arm.rs6000_obj: arm.src
68k.rs6000_obj: 68k.src

cfe.src:
mip.src:
c40.src:
arm.src:
68k.src:

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.37
log
@changed 68K directory/processor name to M68K
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.36 1993/08/05 08:30:36 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.36 1993/08/05 08:30:36 nickc Exp nickc $
d91 21
a111 1
# C source files
d113 5
a117 2
  SOURCES.c	= mip/*.c cfe/*.c include/*.c arm/*.c
  HEADERS.c	= mip/*.h cfe/*.h include/*.h arm/*.h
d120 5
a124 2
    SOURCES.c	= mip/*.c cfe/*.c include/*.c c40/*.c
    HEADERS.c	= mip/*.h cfe/*.h include/*.h c40/*.h
d127 4
a130 2
      SOURCES.c	= mip/*.c cfe/*.c include/*.c 68k/*.c
      HEADERS.c	= mip/*.h cfe/*.h include/*.h 68k/*.h
a135 4

# Any other source files
SOURCES.odd	= makefile

@


1.36
log
@improved command line options to C40 C compiler
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.35 1993/07/27 17:39:55 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.35 1993/07/27 17:39:55 nickc Exp nickc $
d100 1
a100 1
    ifeq ($(HPROC),68K)
d177 1
a177 1
    ifeq ($(HPROC),68K)
d183 1
a183 1
ifeq ($(HPROC),68K)
d205 1
a205 1
    ifeq ($(HPROC),68K)
d248 1
a248 1
			  DEST=../68K
d262 1
a262 1
    ifeq ($(HPROC),68K)
d306 1
a306 1
    ifeq ($(HPROC),68K)
d308 1
a308 1
	$(CD) ../68K; $(68K_LN) -s20000 $(68K_LDOPTS) $(LDOPTS) *.o -o $(68K_NCC)
d341 1
a341 1
    ifeq ($(HPROC),68K)
d358 1
a358 1
	$(CD) ../68K ; $(RM) -f *.o $(68K_NCC)
d374 1
a374 1
	$(CD) ../68k   ; $(MAKE) clean
@


1.35
log
@fixed name of 68k linker
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.34 1993/07/27 17:30:17 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.34 1993/07/27 17:30:17 nickc Exp nickc $
d148 1
a148 1
C40_CFLAGS	= 
d154 5
a158 5
SPARC_DEFINES	= -DCOMPILING_ON_UNIX -D__SPARC
RS6000_DEFINES	= -DCOMPILING_ON_UNIX
C40_DEFINES	= -I$(HPROD)/include -DCOMPILING_ON_UNIX
ARM_DEFINES	= -I$(HPROD)/include -DCOMPILING_ON_UNIX
68K_DEFINES     = -I$(HPROD)/include -DCOMPILING_ON_UNIX
d184 1
a184 1
  DEFINES		= 
d186 1
a186 1
  DEFINES		= -D__SMT
@


1.34
log
@fixed for 68K building
,
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.33 1993/07/27 15:09:50 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.33 1993/07/27 15:09:50 nickc Exp nickc $
d136 1
a136 1
68K_LN		= ld68k
@


1.33
log
@fixed for multiple target and host building
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.32 1993/07/07 10:39:13 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.32 1993/07/07 10:39:13 nickc Exp nickc $
d100 6
a105 1
    echo *** unknown target for compiler
d120 1
a120 1
.SUFFIXES: .src .rs6000_obj .snake_obj .sparc_obj .c40_obj .arm_obj
d129 1
d136 1
d150 1
d158 1
d167 1
d172 1
a172 1
  CFLAGS		= -I../include-arm -I../mip -I../cfe -I../arm
d175 5
a179 1
    CFLAGS		= -I../include-c40 -I../mip -I../cfe -I../c40
d183 6
a188 1
DEFINES		= -D__SMT
d197 1
a197 1
  FOREIGN_CC    = ccc40
d203 8
a210 1
    FOREIGN_CC  = ccarm
d216 1
a217 1

d245 5
d261 6
d272 1
a281 1

d305 5
d320 3
d340 5
d357 3
d369 1
a369 1
squeekyclean: clean-C40 clean-HP clean-SUN4 clean-RS6000 clean-ARM
d374 1
d379 1
a379 1
	$(CD) ../RS6000; $(foreach FOREIGN, $(FOREIGN_CC), if [ -f $(FOREIGN) ] ; then rm *.o $(FOREIGN) ; fi )
d382 1
a382 1
	$(CD) ../HP; $(foreach FOREIGN, $(FOREIGN_CC), if [ -f $(FOREIGN) ] ; then rm *.o $(FOREIGN) ; fi )
d385 1
a385 1
	$(CD) ../SUN4; $(foreach FOREIGN, $(FOREIGN_CC), if [ -f $(FOREIGN) ] ; then rm *.o $(FOREIGN) ; fi )
d396 1
d402 1
d408 1
d414 1
d420 1
@


1.32
log
@disabled -O for RS6000 as this does not work (core dumps when compiled program compiles gen.c)
@
text
@d2 1
a2 1
# Makefile for the Helios C40 compiler
d4 1
a4 1
# Copyright (c) 1992 by Perihelion Software Ltd.
d8 1
a8 1
# RCS Id: $Id: makefile,v 1.31 1993/06/24 11:16:42 nickc Exp nickc $
d16 1
a16 1
# File: /HSRC/cmds/cc/ncc/makefile
d24 1
a24 1
# RcsId: $Id: makefile,v 1.31 1993/06/24 11:16:42 nickc Exp nickc $
d53 1
a53 1
COMPONENT = cmds/cc/ncc
d92 11
a102 1
SOURCES.c	= mip/*.c cfe/*.c include/*.c mbe/*.c
a103 9
# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= mip/*.h cfe/*.h include/*.h mbe/*.h

# AMPP macro files
HEADERS.m	=

a110 12
# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
else
  NCFLAGS := $(NCFLAGS)
endif

# Note any library def files to be linked with
LIBDEFS	:=

LINKFLAGS := $(LINKFLAGS)

d115 1
a115 1
.SUFFIXES: .src .rs6000_obj .snake_obj .sparc_obj .c40_obj
d121 1
d123 1
a123 1
RS6000_CC	= xlc
d127 1
d129 1
a129 1
RS6000_LN	= xlc
d140 1
d142 1
a142 1
RS6000_CFLAGS	= 
d147 1
d149 1
a149 1
RS6000_DEFINES	= -DCOMPILING_ON_UNIX
d155 1
d157 1
a157 1
RS6000_LDOPTS	= 
d161 8
a168 1
CFLAGS		= -I../include -I../mbe -I../mip -I../cfe
d174 14
a187 2
SNAKE_NCC	= ccc40
SPARC_NCC	= ncc-SUN4 
d189 1
a189 1
RS6000_NCC	= ccc40
d191 1
d204 5
d214 4
a217 4
.src.rs6000_obj:
	@@ $(CD) ../$* ; $(MAKE) all CC=$(RS6000_CC) CFLAGS="$(RS6000_CFLAGS) $(CFLAGS)" \
			  DEFINES="$(RS6000_DEFINES) $(DEFINES)" \
			  DEST=../RS6000
d221 14
a234 4
SNAKE_OBJS	= mbe.snake_obj mip.snake_obj cfe.snake_obj 
SPARC_OBJS	= mbe.sparc_obj mip.sparc_obj cfe.sparc_obj 
C40_OBJS	= mbe.c40_obj   mip.c40_obj   cfe.c40_obj   
RS6000_OBJS	= mbe.rs6000_obj mip.rs6000_obj cfe.rs6000_obj
d236 1
d242 1
a242 1
    $(SNAKE_NCC): $(SNAKE_OBJS)
d249 1
a249 1
    $(SPARC_NCC): $(SPARC_OBJS)
a250 1

d252 2
a253 1
    all: $(RS6000_NCC) 
d255 3
a257 2
    $(RS6000_NCC): $(RS6000_OBJS)
	$(CD) ../RS6000; $(RS6000_LN) $(RS6000_LDOPTS) $(LDOPTS) *.o -o $(RS6000_NCC)
d261 6
a266 4
$(SPARC_NCC): $(SPARC_OBJS)
	$(CD) ../SUN4; $(SPARC_LN) $(SPARC_LDOPTS) $(LDOPTS) *.o -o $(SPARC_NCC)

$(C40_NCC):   $(C40_OBJS)
d268 2
d275 3
d288 12
a299 1
install: install-C40 # install-HP install-SUN4
d304 3
d316 1
a316 1
squeekyclean: clean-C40 clean-HP clean-SUN4 clean-RS6000
d319 10
a328 1
	$(CD) ../mbe   ; $(MAKE) clean
d330 2
a331 1
clean: clean-C40
d334 1
a334 1
	etags -e -t mbe/*.[ch] mip/*.[ch] cfe/*.[ch]
d340 2
a341 1
mbe.snake_obj: mbe.src
d345 2
a346 1
mbe.sparc_obj: mbe.src
d350 2
a351 1
mbe.c40_obj: mbe.src
d355 2
a356 1
mbe.rs6000_obj: mbe.src
d360 2
a361 1
mbe.src:
@


1.31
log
@added -Bdynamic to link options for SUN
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.30 1993/05/12 10:35:58 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.30 1993/05/12 10:35:58 nickc Exp nickc $
d163 1
a163 1
RS6000_LDOPTS	= -bloadmap:loadmap
@


1.30
log
@added -D__SMT to default command line, (why was this ever removed ? )
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.29 1993/05/12 10:10:31 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.29 1993/05/12 10:10:31 nickc Exp nickc $
d158 2
d161 1
a161 1
SPARC_LDOPTS	= -ansi
@


1.29
log
@added creation of loadmap file for detecting link clashes
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.28 1993/04/20 10:23:21 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.28 1993/04/20 10:23:21 nickc Exp nickc $
d166 1
a166 1
DEFINES		= 
@


1.28
log
@fixed for HP builds
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.27 1993/04/14 13:58:34 nickc Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.27 1993/04/14 13:58:34 nickc Exp nickc $
d161 1
a161 1
RS6000_LDOPTS	= 
@


1.27
log
@fixed for sparc compilation
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.26 1993/02/17 11:49:40 nick Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.26 1993/02/17 11:49:40 nick Exp nickc $
d213 2
a214 1
elif ($(HHOST),SUN4)
d220 1
a220 1
else
d225 1
a225 1

@


1.26
log
@RS6000 host compilation options added.
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.25 1992/09/11 09:25:03 nickc Exp nick $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.25 1992/09/11 09:25:03 nickc Exp nick $
d154 1
a154 1
SPARC_DEFINES	= -DCOMPILING_ON_UNIX
d212 6
@


1.25
log
@removed -O from compilation command line
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.24 1992/08/04 18:08:35 paul Exp nickc $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.24 1992/08/04 18:08:35 paul Exp nickc $
d126 1
a126 1
.SUFFIXES: .src .snake_obj .sparc_obj .c40_obj
d133 1
d138 1
d150 1
d156 1
d161 1
d174 1
a175 1

d179 1
a179 1
	@@ $(CD) ../$* ; make all CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
d184 1
a184 1
	@@ $(CD) ../$* ; make all CC=$(SPARC_CC) CFLAGS="$(SPARC_CFLAGS) $(CFLAGS)" \
d189 1
a189 1
	@@ $(CD) ../$* ; make all CC=$(C40_CC) CFLAGS="$(C40_CFLAGS) $(CFLAGS)" \
d193 5
d203 1
a204 1

d207 2
a208 1
all: $(SNAKE_NCC) 
d210 1
a210 1
$(SNAKE_NCC): $(SNAKE_OBJS)
d213 8
d237 4
d249 3
d255 4
a258 4
squeekyclean: clean-C40 clean-HP clean-SUN4
	$(CD) ../mip   ; make clean
	$(CD) ../cfe   ; make clean
	$(CD) ../mbe   ; make clean
d278 4
@


1.24
log
@fixed stack size
/
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.23 1992/07/10 08:31:15 paul Exp $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.23 1992/07/10 08:31:15 paul Exp $
d145 1
a145 1
SNAKE_CFLAGS	= -Aa -O +w1
d154 1
a154 1
SNAKE_LDOPTS	= -Aa -O
@


1.23
log
@fixed directory names for correct install
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.22 1992/07/08 14:51:36 paul Exp $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.22 1992/07/08 14:51:36 paul Exp $
d206 1
a206 1
	$(CD) ../C40;   $(C40_LN)   $(C40_LDOPTS)   $(LDOPTS) *.o -o $(C40_NCC)
@


1.22
log
@fixed hostname CC and clean rule
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.21 1992/07/01 23:40:06 paul Exp $
d24 1
a24 1
# RcsId: $Id: makefile,v 1.21 1992/07/01 23:40:06 paul Exp $
d152 1
a152 1
C40_DEFINES	= -I/hprod/C40/include -DCOMPILING_ON_UNIX
d156 1
a156 1
C40_LDOPTS	= /hprod/C40/lib/c0.o -l/hprod/C40/lib/helios.lib -l/hprod/C40/lib/c.lib
d210 1
a210 1
	-$(MV) C40/$(C40_NCC) /hprod/C40/bin/ncc
@


1.21
log
@converted to generic makefile
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.20 1992/07/01 15:12:24 nickc Exp $
d24 1
a24 1
# RcsId: $Id: generic.template,v 1.1 91/02/12 17:11:17 nick Exp $
d132 1
a132 2
C40_CC		= ncc
#C40_CC		= ccc40
d229 1
a229 1
clean: clean-C40 clean-HP clean-SUN4
d233 2
@


1.20
log
@fixed clean targets (I hope)
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.19 1992/07/01 14:39:13 nickc Exp $
d11 114
d175 1
a175 1
	@@ $(CD) $* ; make all CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
d180 1
a180 1
	@@ $(CD) $* ; make all CC=$(SPARC_CC) CFLAGS="$(SPARC_CFLAGS) $(CFLAGS)" \
d185 1
a185 1
	@@ $(CD) $* ; make all CC=$(C40_CC) CFLAGS="$(C40_CFLAGS) $(CFLAGS)" \
d201 1
a201 1
	$(CD) HP; $(SNAKE_LN) $(SNAKE_LDOPTS) $(LDOPTS) *.o -o $(SNAKE_NCC)
d204 1
a204 1
	$(CD) SUN4; $(SPARC_LN) $(SPARC_LDOPTS) $(LDOPTS) *.o -o $(SPARC_NCC)
d207 1
a207 1
	$(CD) C40;   $(C40_LN)   $(C40_LDOPTS)   $(LDOPTS) *.o -o $(C40_NCC)
d217 1
a217 1
	$(CP) HP/$(SNAKE_NCC) $(HHOSTBIN)
d219 1
a219 1
install: install-HP
d222 1
a222 1
	$(CD) C40 ; $(RM) -f *.o $(C40_NCC)
d225 1
a225 1
	$(CD) HP ; $(RM) -f *.o $(SNAKE_NCC)
d228 1
a228 1
	$(CD) SUN4 ; $(RM) -f *.o $(SPARC_NCC)
d231 3
a233 3
	$(CD) mip   ; make clean
	$(CD) cfe   ; make clean
	$(CD) mbe   ; make clean
d255 3
@


1.19
log
@install targets now build compilers
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.18 1992/07/01 11:17:11 nickc Exp nickc $
d108 1
a108 1
	$(CD) C40 ; $(RM) -f *
d111 1
a111 1
	$(CD) HP ; $(RM) -f *
d114 1
a114 1
	$(CD) SUN4 ; $(RM) -f *
@


1.18
log
@fixed for new environment
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.18 1992/07/01 10:16:10 nickc Exp $
d96 1
a96 1
install-C40:
d99 1
a99 1
install-SUN4:
d101 1
a101 1
install-HP: 
@


1.17
log
@improved clean and install targets
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.16 1992/06/30 15:47:35 nickc Exp nickc $
d23 1
a23 1
C40_LN		= ncc
d43 1
a43 1
C40_LDOPTS	= /hprod/C40/lib/c0.o /hprod/C40/lib/helios.lib /hprod/C40/lib/c.lib
d53 3
a55 3
SNAKE_NCC	= ncc
SPARC_NCC	= ncc-sparc
C40_NCC		= ncc-c40
d63 1
a63 1
			  DEST=../snake
d68 1
a68 1
			  DEST=../sparc
d73 1
a73 1
			  DEST=../c40
d84 1
a84 1
all: $(SNAKE_NCC) install
d87 1
a87 1
	$(CD) snake; $(SNAKE_LN) $(SNAKE_LDOPTS) $(LDOPTS) *.o -o $(SNAKE_NCC)
d90 1
a90 1
	$(CD) sparc; $(SPARC_LN) $(SPARC_LDOPTS) $(LDOPTS) *.o -o $(SPARC_NCC)
d92 2
a93 1
$(C40_NCC):: c40/ncc-c40
a94 2
$(C40_NCC)::   $(C40_OBJS)
	$(CD) c40;   $(C40_LN)   $(C40_LDOPTS)   $(LDOPTS) *.o -o $(C40_NCC)
d96 2
a97 1
bin/ncc: $(SNAKE_NCC) 
d99 1
a99 5
c40/ncc-c40: bin/ncc		 # force full rebuild if a new compiler is present
	$(CD) c40   ; $(RM) -f *.o
	
install-c40:
	-$(MV) bin/$(C40_NCC) /hprod/C40/bin/ncc
d101 3
a103 1
install-sparc:
d105 1
a105 3
install-snake: 
	-$(MV) bin/$(SNAKE_NCC) bin/$(SNAKE_NCC).old
	$(CP) snake/$(SNAKE_NCC) bin
d107 2
a108 1
install: install-snake
d110 2
a111 3
clean-c40:
	$(CD) bin ; $(RM) -f $(C40_NCC)
	$(CD) c40 ; $(RM) -f *
d113 2
a114 3
clean-snake:
	$(CD) bin   ; $(RM) -f $(SNAKE_NCC)
	$(CD) snake ; $(RM) -f *
d116 1
a116 5
clean-sparc:
	$(CD) bin   ; $(RM) -f $(SPARC_NCC)
	$(CD) sparc ; $(RM) -f *

clean: clean-c40 clean-snake clean-sparc
@


1.16
log
@changed c40 linker
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.15 1992/05/13 15:30:34 nickc Exp nickc $
d97 1
d102 6
a107 1
install:
d111 8
a118 2
clean:
	$(CD) bin ; $(RM) -f $(SNAKE_NCC) $(SPARC_NCC) $(C40_NCC)
d120 3
d124 2
a125 1
	$(CD) c40   ; $(RM) -f *
@


1.15
log
@removed -DSMT from general command line
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.14 1992/05/13 14:01:42 nickc Exp nickc $
d23 1
a23 1
C40_LN		= linker
@


1.14
log
@changed order of build
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.13 1992/04/30 13:34:08 nickc Exp nickc $
d48 1
a48 1
DEFINES		= -DSMT
@


1.13
log
@added target to force full rebuild of c40 compiler if new compiler is present
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.12 1992/04/29 08:56:16 nickc Exp nickc $
d77 3
a79 3
SNAKE_OBJS	= mip.snake_obj cfe.snake_obj mbe.snake_obj
SPARC_OBJS	= mip.sparc_obj cfe.sparc_obj mbe.sparc_obj
C40_OBJS	= mip.c40_obj   cfe.c40_obj   mbe.c40_obj
@


1.12
log
@added (commented out) DEBUG define
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.11 1992/04/22 17:25:57 nickc Exp nickc $
d92 3
a94 1
$(C40_NCC):   $(C40_OBJS)
d98 3
@


1.11
log
@added optional compile for native C40 world
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.10 1992/04/15 17:47:58 nickc Exp nickc $
d36 1
@


1.10
log
@fixed install target
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.9 1992/04/15 17:20:55 nickc Exp nickc $
d19 1
d34 1
a34 1
C40_CFLAGS	=  
@


1.9
log
@fixed clean rule
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.8 1992/04/14 07:53:31 nickc Exp nickc $
d95 1
a95 1
	$(MV) bin/$(SNAKE_NCC) bin/$(SNAKE_NCC).old
@


1.8
log
@more cosmetic improvements
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.7 1992/04/13 15:50:44 nickc Exp nickc $
d99 1
a99 1
	$(CD) bin ; $(RM) $(SNAKE_NCC) $(SPARC_NCC) $(C40_NCC)
@


1.7
log
@minor cosmetic change
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.6 1992/04/13 15:46:45 nickc Exp nickc $
d59 1
a59 1
	$(CD) $* ; make all CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
d64 1
a64 1
	$(CD) $* ; make all CC=$(SPARC_CC) CFLAGS="$(SPARC_CFLAGS) $(CFLAGS)" \
d69 1
a69 1
	$(CD) $* ; make all CC=$(C40_CC) CFLAGS="$(C40_CFLAGS) $(CFLAGS)" \
@


1.6
log
@minor cosmetic change
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.5 1992/04/07 13:06:55 nickc Exp nickc $
d60 2
a61 2
			    DEFINES="$(SNAKE_DEFINES) $(DEFINES)" \
			    DEST=../snake
d65 2
a66 2
			    DEFINES="$(SPARC_DEFINES) $(DEFINES)" \
			    DEST=../sparc
d70 2
a71 2
			    DEFINES="$(C40_DEFINES) $(DEFINES)" \
			    DEST=../c40
@


1.5
log
@added target for sub-dir makes
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.4 1992/04/07 12:51:22 nickc Exp nickc $
d59 3
a61 4
	$(CD) $* ; make all \
			CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
			DEFINES="$(SNAKE_DEFINES) $(DEFINES)" \
			DEST=../snake
d64 3
a66 4
	$(CD) $* ; make all \
			CC=$(SPARC_CC) CFLAGS="$(SPARC_CFLAGS) $(CFLAGS)" \
			DEFINES="$(SPARC_DEFINES) $(DEFINES)" \
			DEST=../sparc
d69 3
a71 5
	$(CD) $* ; make all \
			CC=$(C40_CC) CFLAGS="$(C40_CFLAGS) $(CFLAGS)" \
			DEFINES="$(C40_DEFINES) $(DEFINES)" \
			DEST=../c40

@


1.4
log
@now works for C40 build
@
text
@d8 1
a8 1
# RCS Id: $Id: makefile,v 1.3 1992/04/07 10:06:15 nickc Exp nickc $
d59 1
a59 1
	$(CD) $* ; make \
d65 1
a65 1
	$(CD) $* ; make \
d71 1
a71 1
	$(CD) $* ; make \
@


1.3
log
@new style make rules
@
text
@d8 1
a8 1
# RCS Id: $Id$
d12 1
a12 1
.SUFFIXES: .src .snake_obj ,sparc_obj .c40_obj
d33 1
a33 1
C40_CFLAGS	=  -I/hprod/C40/include
d37 1
a37 1
C40_DEFINES	= -DCOMPILING_ON_UNIX
d46 1
a46 1
DEFINES		= -DSMT -DCHECK_FLOAT_OPS
d66 2
a67 2
			CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
			DEFINES="$(SNAKE_DEFINES) $(DEFINES)" \
d72 2
a73 2
			CC=$(SNAKE_CC) CFLAGS="$(SNAKE_CFLAGS) $(CFLAGS)" \
			DEFINES="$(SNAKE_DEFINES) $(DEFINES)" \
d89 1
a89 1
	$(CD) snake; $(LN) $(SNAKE_LDOPTS) $(LDOPTS) snake/*.o -o $(SNAKE_NCC)
d92 1
a92 1
	$(CD) sparc; $(LN) $(SPARC_LDOPTS) $(LDOPTS) sparc/*.o -o $(SPARC_NCC)
d95 1
a95 1
	$(CD) c40;   $(LN) $(C40_LDOPTS)   $(LDOPTS) c40/*.o   -o $(C40_NCC)
@


1.2
log
@unknwon changes
@
text
@a0 3
.SUFFIXES:
.SUFFIXES: .o .c
# .SUFFIXES: .out .o .c .e .r .f .y .l .s .p
d2 1
a2 7
# Change the following symbols to suit your system.
# CC is the C compiler used to compile the compiler.
# LD is the linker used (usually Link or Link590L, or somesuch).
# CLIB is the C library - typically $.arm.clib.o.AnsiLib/l
# CFLAGS are the compiler flags with which to compile each source.
# LINKFLAGS are typically unused (passed to the linker).
# note make coffncc makes a coff generating compiler
d4 2
a5 115

CC = cc -Aa +w1 -O 
#CC = cc -Aa +w1 -g
#CC = gcc -ansi -DCOMPILING_ON_UNIX
#CC = ncc -DCOMPILING_ON_UNIX

NEW = ./bin/ncc
#NEW = ./ncc-c40

LD = cc
#LD = linker

LDOPTS = -Aa -O
#LDOPTS = -Aa -g
#LDOPTS = -ansi
#LDOPTS = src/cstart.o clib/c.lib posix/posix.lib 

NC = c -D__unix
MV = mv

LIB=
CFLAGS = -I./headers -I../c40 -I../mip -I../cfe -c -DSMT
AFLAGS = -I./headers -I../c40 -I../mip -I../cfe -S -DSMT
LINKFLAGS=
GHF=-s -b
AH=../../clib.ansi/
PH=../mip/
PC=../mip/
UC=../util/
MH=../c40/
MC=../c40/
LH=../cfe/
LC=../cfe/
XH=
XC=

ANSIHDRS = \
$(AH)assert.h $(AH)ctype.h  $(AH)errno.h  $(AH)float.h  $(AH)limits.h \
$(AH)locale.h $(AH)math.h   $(AH)setjmp.h $(AH)signal.h $(AH)stdarg.h \
$(AH)stddef.h $(AH)stdio.h  $(AH)stdlib.h $(AH)string.h $(AH)time.h

SOURCES =   ${MC}gen.c \
	    ${MC}mcdep.c \
	    ${MC}asm.c \
	    ${MC}debug.c \
	    $(MC)heliobj.c \
	    ${PC}aetree.c \
	    ${PC}bind.c \
	    ${PC}builtin.c \
	    ${PC}cg.c \
	    ${PC}codebuf.c \
	    ${PC}compiler.c \
	    ${PC}cse.c \
	    ${PC}csescan.c \
	    ${PC}driver.c \
	    ${PC}flowgraf.c \
	    ${PC}fname.c \
	    ${PC}ieeeflt.c \
	    ${PC}jopprint.c \
	    ${PC}misc.c \
	    ${PC}regalloc.c \
	    ${PC}regsets.c \
	    ${PC}store.c \
	    ${PC}version.c \
	    ${LC}lex.c \
	    ${LC}pp.c \
	    ${LC}sem.c \
	    ${LC}simplify.c \
	    ${LC}syn.c \
	    ${LC}vargen.c

HDRFILES = \
assert.h ctype.h  errno.h  float.h limits.h locale.h math.h setjmp.h \
signal.h stdarg.h stddef.h stdio.h stdlib.h string.h time.h

OBJS =  objs/asm.o objs/gen.o objs/mcdep.o objs/debug.o\
	objs/aetree.o objs/bind.o objs/builtin.o objs/cg.o objs/codebuf.o objs/compiler.o \
	objs/cse.o objs/csescan.o objs/driver.o objs/flowgraf.o objs/fname.o \
	objs/ieeeflt.o objs/jopprint.o objs/misc.o objs/regalloc.o objs/regsets.o objs/store.o \
	objs/version.o objs/lex.o objs/pp.o objs/sem.o objs/simplify.o objs/syn.o objs/vargen.o 

SUNOBJS = sunobjs/asm.o sunobjs/gen.o sunobjs/mcdep.o sunobjs/debug.o \
	sunobjs/aetree.o sunobjs/bind.o sunobjs/builtin.o sunobjs/cg.o sunobjs/codebuf.o sunobjs/compiler.o \
	sunobjs/cse.o sunobjs/csescan.o sunobjs/driver.o sunobjs/flowgraf.o sunobjs/fname.o \
	sunobjs/ieeeflt.o sunobjs/jopprint.o sunobjs/misc.o sunobjs/regalloc.o sunobjs/regsets.o \
	sunobjs/store.o sunobjs/version.o sunobjs/lex.o sunobjs/pp.o sunobjs/sem.o sunobjs/simplify.o \
	sunobjs/syn.o sunobjs/vargen.o 

ASMS =  objs/asm.s objs/gen.s objs/mcdep.s objs/debug.s \
	objs/bind.s objs/builtin.s objs/cg.s objs/codebuf.s objs/cse.s objs/csescan.s objs/driver.s \
	objs/fname.s objs/flowgraf.s objs/ieeeflt.s objs/jopprint.s objs/lex.s objs/misc.s \
	objs/pp.s objs/regalloc.s objs/regsets.s objs/sem.s objs/simplify.s objs/store.s \
	objs/compiler.s objs/syn.s objs/aetree.s objs/vargen.s objs/version.s

${NEW}:		${OBJS} objs/heliobj.o
		${LD} ${LDOPTS} -o ${NEW} ${LINKFLAGS} objs/*.o ${LIB}

sunncc:		${SUNOBJS} sunobjs/heliobj.o
		${CC} ${LDOPTS} -o sunncc ${LINKFLAGS} sunobjs/*.o ${LIB}

coffncc:	${OBJS} coffobj.o
		${LD} -o coffncc ${LINKFLAGS} ${OBJS} coffobj.o ${LIB}
		rm version.o

install: ${NEW}

tags:
	cd .. ; etags -e -t c40/*.[ch] mip/*.[ch] cfe/*.[ch]

clean:
	cd ../mip ; make clean
	cd ../cfe ; make clean
	cd ../c40 ; make clean
	rm -f objs/*.o bin/ncc

d7 2
a8 1
# Machine-specific things...
d11 2
a12 15
objs/heliobj.o:	${MC}heliobj.c
		${CC} ${CFLAGS} -I/usr/include -I/helios/include ${MC}heliobj.c -o objs/heliobj.o
#		${CC} ${CFLAGS} -I/helios/include ${MC}heliobj.c -o objs/heliobj.o

objs/aoutobj.o:	${PC}aoutobj.c
		${CC} ${CFLAGS} ${PC}aoutobj.c -o objs/aoutobj.o

objs/coffobj.o:	${PC}coffobj.c
		${CC} ${CFLAGS} ${PC}coffobj.c -o objs/coffobj.o

objs/asm.o:	$(MC)asm.c
		${CC} ${CFLAGS} ${MC}asm.c  -o objs/asm.o

objs/gen.o:	$(MC)gen.c
		${CC} ${CFLAGS} -DCHECK_FLOAT_OPS ${MC}gen.c -o objs/gen.o
d14 1
a14 2
objs/mcdep.o:	${MC}mcdep.c
		${CC} ${CFLAGS} ${MC}mcdep.c  -o objs/mcdep.o
d16 3
a18 2
objs/debug.o:	$(MC)debug.c
		${CC} ${CFLAGS} ${MC}debug.c  -o objs/debug.o
d20 3
a22 3
#
# Machine- and language- independent things
#
d24 4
a27 2
objs/aetree.o:	${PC}aetree.c
		${CC} ${CFLAGS} ${PC}aetree.c -o objs/aetree.o
d29 1
a29 2
objs/bind.o:	${PC}bind.c
		${CC} ${CFLAGS} ${PC}bind.c -o objs/bind.o
d31 3
a33 2
objs/builtin.o:	${PC}builtin.c
		${CC} ${CFLAGS} ${PC}builtin.c -o objs/builtin.o
d35 3
a37 2
objs/cg.o:	${PC}cg.c
		${CC} ${CFLAGS} ${PC}cg.c -o objs/cg.o
d39 3
a41 2
objs/codebuf.o:	${PC}codebuf.c
		${CC} ${CFLAGS} ${PC}codebuf.c -o objs/codebuf.o
d43 1
a43 2
objs/cse.o:	${PC}cse.c
		${CC} ${CFLAGS} ${PC}cse.c -o objs/cse.o
d45 3
a47 2
objs/csescan.o:	${PC}csescan.c
		${CC} ${CFLAGS} ${PC}csescan.c -o objs/csescan.o
d49 1
a49 2
objs/compiler.o: ${PC}compiler.c 
		${CC} ${CFLAGS} ${PC}compiler.c -o objs/compiler.o
d51 3
a53 2
objs/driver.o:	${PC}driver.c
		${CC} ${CFLAGS} ${PC}driver.c -o objs/driver.o
a54 2
objs/fname.o:	${PC}fname.c
		${CC} ${CFLAGS} ${PC}fname.c -o objs/fname.o
d56 1
a56 2
objs/flowgraf.o:	${PC}flowgraf.c
		${CC} ${CFLAGS} ${PC}flowgraf.c -o objs/flowgraf.o
d58 5
a62 2
objs/ieeeflt.o:	${PC}ieeeflt.c
		${CC} ${CFLAGS} ${PC}ieeeflt.c -o objs/ieeeflt.o
d64 5
a68 2
objs/jopprint.o:	${PC}jopprint.c
		${CC} ${CFLAGS} ${PC}jopprint.c -o objs/jopprint.o
d70 5
a74 2
objs/misc.o:	${PC}misc.c
		${CC} ${CFLAGS} ${PC}misc.c -o objs/misc.o
a75 2
objs/regalloc.o:	${PC}regalloc.c
		${CC} ${CFLAGS} ${PC}regalloc.c -o objs/regalloc.o
d77 1
a77 2
objs/regsets.o:	${PC}regsets.c
		${CC} ${CFLAGS} ${PC}regsets.c -o objs/regsets.o
d79 3
a81 2
objs/store.o:	${PC}store.c
		${CC} ${CFLAGS} ${PC}store.c -o objs/store.o
a82 2
objs/version.o:	${PC}version.c always_null_target
		${CC} ${CFLAGS} ${PC}version.c -o objs/version.o
d84 1
a84 1
always_null_target:
d86 1
a86 3
#
# Language-dependent things
#
d88 2
a89 2
objs/lex.o:	${LC}lex.c
		${CC} ${CFLAGS} ${LC}lex.c -o objs/lex.o
d91 2
a92 2
objs/pp.o:	${LC}pp.c
		${CC} ${CFLAGS} ${LC}pp.c -o objs/pp.o
d94 2
a95 2
objs/sem.o:	${LC}sem.c
		${CC} ${CFLAGS} ${LC}sem.c -o objs/sem.o
a96 2
objs/simplify.o:	${LC}simplify.c
		${CC} ${CFLAGS} ${LC}simplify.c -o objs/simplify.o
d98 3
a100 2
objs/syn.o:	${LC}syn.c
		${CC} ${CFLAGS} ${LC}syn.c -o objs/syn.o
d102 8
a109 2
objs/vargen.o:	${LC}vargen.c
		${CC} ${CFLAGS} ${LC}vargen.c -o objs/vargen.o
d111 2
a112 87
#
# SUN targets
#

sunobjs/heliobj.o:	${MC}heliobj.c
		${CC} ${CFLAGS} -I/usr/include -I/helios/include ${MC}heliobj.c -o sunobjs/heliobj.o
#		${CC} ${CFLAGS} -I/helios/include ${MC}heliobj.c -o sunobjs/heliobj.o

sunobjs/aoutobj.o:	${PC}aoutobj.c
		${CC} ${CFLAGS} ${PC}aoutobj.c -o sunobjs/aoutobj.o

sunobjs/coffobj.o:	${PC}coffobj.c
		${CC} ${CFLAGS} ${PC}coffobj.c -o sunobjs/coffobj.o

sunobjs/asm.o:	$(MC)asm.c
		${CC} ${CFLAGS} ${MC}asm.c  -o sunobjs/asm.o

sunobjs/gen.o:	$(MC)gen.c
		${CC} ${CFLAGS} -DCHECK_FLOAT_OPS ${MC}gen.c -o sunobjs/gen.o

sunobjs/mcdep.o:	${MC}mcdep.c
		${CC} ${CFLAGS} ${MC}mcdep.c  -o sunobjs/mcdep.o

#
# Machine- and language- independent things
#

sunobjs/aetree.o:	${PC}aetree.c
		${CC} ${CFLAGS} ${PC}aetree.c -o sunobjs/aetree.o

sunobjs/bind.o:	${PC}bind.c
		${CC} ${CFLAGS} ${PC}bind.c -o sunobjs/bind.o

sunobjs/builtin.o:	${PC}builtin.c
		${CC} ${CFLAGS} ${PC}builtin.c -o sunobjs/builtin.o

sunobjs/cg.o:	${PC}cg.c
		${CC} ${CFLAGS} ${PC}cg.c -o sunobjs/cg.o

sunobjs/codebuf.o:	${PC}codebuf.c
		${CC} ${CFLAGS} ${PC}codebuf.c -o sunobjs/codebuf.o

sunobjs/cse.o:	${PC}cse.c
		${CC} ${CFLAGS} ${PC}cse.c -o sunobjs/cse.o

sunobjs/csescan.o:	${PC}csescan.c
		${CC} ${CFLAGS} ${PC}csescan.c -o sunobjs/csescan.o

sunobjs/compiler.o:	${PC}compiler.c
		${CC} ${CFLAGS} ${PC}compiler.c -o sunobjs/compiler.o

sunobjs/driver.o:	${PC}driver.c
		${CC} ${CFLAGS} ${PC}driver.c -o sunobjs/driver.o

sunobjs/fname.o:	${PC}fname.c
		${CC} ${CFLAGS} ${PC}fname.c -o sunobjs/fname.o

sunobjs/flowgraf.o:	${PC}flowgraf.c
		${CC} ${CFLAGS} ${PC}flowgraf.c -o sunobjs/flowgraf.o

sunobjs/ieeeflt.o:	${PC}ieeeflt.c
		${CC} ${CFLAGS} ${PC}ieeeflt.c -o sunobjs/ieeeflt.o

sunobjs/jopprint.o:	${PC}jopprint.c
		${CC} ${CFLAGS} ${PC}jopprint.c -o sunobjs/jopprint.o

sunobjs/misc.o:	${PC}misc.c
		${CC} ${CFLAGS} ${PC}misc.c -o sunobjs/misc.o

sunobjs/regalloc.o:	${PC}regalloc.c
		${CC} ${CFLAGS} ${PC}regalloc.c -o sunobjs/regalloc.o

sunobjs/regsets.o:	${PC}regsets.c
		${CC} ${CFLAGS} ${PC}regsets.c -o sunobjs/regsets.o

sunobjs/store.o:	${PC}store.c
		${CC} ${CFLAGS} ${PC}store.c -o sunobjs/store.o

sunobjs/version.o:	${PC}version.c
		${CC} ${CFLAGS} ${PC}version.c -o sunobjs/version.o

#
# Language-dependent things
#

sunobjs/lex.o:	${LC}lex.c
		${CC} ${CFLAGS} ${LC}lex.c -o sunobjs/lex.o
d114 1
a114 2
sunobjs/pp.o:	${LC}pp.c
		${CC} ${CFLAGS} ${LC}pp.c -o sunobjs/pp.o
d116 3
a118 2
sunobjs/sem.o:	${LC}sem.c
		${CC} ${CFLAGS} ${LC}sem.c -o sunobjs/sem.o
d120 3
a122 97
sunobjs/simplify.o:	${LC}simplify.c
		${CC} ${CFLAGS} ${LC}simplify.c -o sunobjs/simplify.o

sunobjs/syn.o:	${LC}syn.c
		${CC} ${CFLAGS} ${LC}syn.c -o sunobjs/syn.o

sunobjs/vargen.o:	${LC}vargen.c
		${CC} ${CFLAGS} ${LC}vargen.c -o sunobjs/vargen.o

#------------------------------------------------------------------------

headers.c:	$(ANSIHDRS) ${PH}miperrs.h ${MH}mcerrs.h ${LH}feerrs.h genhdrs
		genhdrs ${GHF} -o headers.c \
			-e errors.h -q ${PH}miperrs.h -q ${LH}feerrs.h \
			-q ${MH}mcerrs.h -I $(AH) $(HDRFILES)

errors.h:	headers.c
	touch errors.h

genhdrs:	${UC}genhdrs.c
		$(CC) -o genhdrs ${UC}genhdrs.c
		${MV} genhdrs bin

objdump: objs/objdump.o objs/objdisas.o
	cc -Aa objs/objdump.o objs/objdisas.o -o objdump
	${MV} objdump bin

objs/objdump.o: src/objdump.c
	cc -Aa -D__HELIOSC40 -c src/objdump.c -o objs/objdump.o

objs/objdisas.o: src/objdisas.c
	cc -Aa -D__HELIOSC40 -c src/objdisas.c -I../c40 -DNICKS_STYLE=3 -o objs/objdisas.o

disas: objs/disas.o
	cc -Aa objs/disas.o -o disas
	${MV} disas bin

objs/disas.o: $(MC)disas.c
	cc -Aa $(CFLAGS) -c $(MC)disas.c -o objs/disas.o

ln: linker/linker
	cp linker/linker ln

linker/linker: linker/link.o linker/genimage.o linker/readfile.o 
	cd linker ; make

linker/link.o:     linker/link.c
	cd linker; make link.o

linker/genimage.o: linker/genimage.c
	cd linker; make genimage.o

linker/readfile.o: linker/readfile.c
	cd linker; make readfile.o

#          /***************************************************/
#          /*                                                 */
#          /*    Define UN*Xmake dependencies                 */
#          /*                                                 */
#          /***************************************************/

depend:
#	  for j in ${ARMSRC}/*.[ch]; do \
#	      echo $$j :  ${REMOTE}/arm/`basename $$j` >> makedep ;\
#	      echo -n '	cp -i ${REMOTE}/arm/' >> makedep ;\
#	      echo `basename $$j` $$j  >> makedep; \
#          done
#	  for j in ${PC}/*.[ch]; do \
#	      echo $$j :  ${REMOTE}/mip/`basename $$j` >> makedep ;\
#	      echo -n '	cp -i ${REMOTE}/mip/' >> makedep ;\
#	      echo `basename $$j` $$j  >> makedep; \
#	  done
#	  for j in ${LC}/*.[ch]; do \
#	      echo $$j :  ${REMOTE}/cfe/`basename $$j` >> makedep ;\
#	      echo -n '	cp -i ${REMOTE}/cfe/' >> makedep ;\
#	      echo `basename $$j` $$j  >> makedep; \
#	  done
#	  for j in ${OPTS}/*.[ch]; do \
#	      echo $$j :  ${REMOTE}/cchelios/`basename $$j` >> makedep ;\
#	      echo -n '	cp -i ${REMOTE}/cchelios/' >> makedep ;\
#	      echo `basename $$j` $$j  >> makedep; \
#	  done
	  rm -f makedep
	  for i in ${SOURCES}; do \
	      ${CC} -M ${CFLAGS} $$i | \
	      awk ' { if ($$1 != prev) \
		  { if (rec != "") print rec; rec = $$0; prev = $$1; } \
		  else { if (length(rec $$2) > 78) { print rec; rec = $$0; } \
		  else rec = rec " " $$2 } } \
		  END { print rec } ' >> makedep; done
	  cp Makefile makefile
	  echo '# DO NOT DELETE THIS LINE' >> makefile
	  echo ' ' >> makefile
	  cat makedep >> makefile
	  echo '# DEPENDENCIES MUST END AT END OF FILE' >> makefile
	  echo '# IF YOU PUT STUFF HERE IT WILL GO AWAY' >> makefile
	  echo '# see make depend above' >> makefile
d124 3
a126 1
# DO NOT DELETE THIS LINE -- make depend uses it
d128 3
a130 1
# DO NOT DELETE THIS LINE
@


1.1
log
@Initial revision
@
text
@d57 1
a66 1
	    ${PC}dbx.c \
d88 1
a88 1
OBJS =  objs/asm.o objs/gen.o objs/mcdep.o \
d90 1
a90 1
	objs/cse.o objs/csescan.o objs/dbx.o objs/driver.o objs/flowgraf.o objs/fname.o \
d94 1
a94 1
SUNOBJS = sunobjs/asm.o sunobjs/gen.o sunobjs/mcdep.o \
d96 1
a96 1
	sunobjs/cse.o sunobjs/csescan.o sunobjs/dbx.o sunobjs/driver.o sunobjs/flowgraf.o sunobjs/fname.o \
d101 1
a101 1
ASMS =  objs/asm.s objs/gen.s objs/mcdep.s objs/dbx.s \
d151 2
a152 2
objs/dbx.o:	$(PC)dbx.c
		${CC} ${CFLAGS} ${PC}dbx.c  -o objs/dbx.o
a257 3

sunobjs/dbx.o:	$(PC)dbx.c
		${CC} ${CFLAGS} ${PC}dbx.c  -o sunobjs/dbx.o
@
