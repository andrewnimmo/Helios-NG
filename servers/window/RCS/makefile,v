head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	93.08.06.14.32.39;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	92.09.15.16.53.30;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	92.09.15.16.38.22;	author paul;	state Exp;
branches;
next	;


desc
@@


1.3
log
@latest version as ported to archi
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: standalone window server
#
# File: /HSRC/servers/window/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.2 1992/09/15 16:53:30 paul Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = servers/window

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = window.i

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(LIB)/window
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of object files
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	= window.c vdev.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= window.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required

NCFLAGS := $(NCFLAGS) -DSTANDALONE #-DINSYSTEMIMAGE

ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
endif

# Note any library def files to be linked with
LIBDEFS	:=

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:


# could move to general server if we wished to use IOservers window if
# connected at boot time. (shouldn't set -DSTANDALONE as no env sent)
# should remove -DINSYSTEMIMAGE if this is done and copy to lib as "window"

window.i: $(LIB)/sstart.o window.o vdev.o
	$(LINK) $(LINKFLAGS) -nWindow -s10000 -h4000 $^ -o$@@


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.2
log
@updated with original rules
- will still need some work
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/09/15 16:38:22 paul Exp paul $
d102 1
a102 1
SOURCES.a	=  displaycode.s	# @@@@@@ needs converting to AMPP
d119 1
a119 1
NCFLAGS := $(NCFLAGS) -DINSYSTEMIMAGE
a133 11
# @@@@@@ NEEDS UPDATING FOR NEW ARM ASSEMBLER AND AMPP
ASMHDRS =	$(HINCLUDE)/listopts.s  $(HINCLUDE)/arm.s \
		$(HINCLUDE)/basic.s     $(HINCLUDE)/structs.s \
		$(HINCLUDE)/module.s    $(HINCLUDE)/exmacros.s \
		$(HINCLUDE)/SWIinfo.s   $(HINCLUDE)/SWI.s \
		$(HINCLUDE)/PCSregs.s

displaycode.si:	displaycode.s $(ASMHDRS)
	hobjasm $< $@@ -hdr $(HINCLUDE)


d137 2
a138 1
window.i : $(SSTART) window.o vdev.o displaycode.o $(LIB)/armlib.def
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 91/03/03 23:35:14 paul Exp $
d73 1
a73 1
TARGETS = 
d77 3
a79 7
install	: installdef $(TARGETS) Xinstall
#	$(CP) $(TARGETS) $(BIN)
#	$(TOUCH) install

installdef:	# If this is a library, enter all .def files here (to install)
#	$(CP) $^ $(LIB)
#	$(TOUCH) installdef
d95 1
a95 3
#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
d99 1
a99 1
SOURCES.c	= window.c vdev.c displaycode.s
d102 1
a102 1
SOURCES.a	=
d118 3
a122 2
else
  NCFLAGS := $(NCFLAGS)
a132 5
# uncomment if you have compiler or makedepend generated dependencies
#include depends



d134 16
@
