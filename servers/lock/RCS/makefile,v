head	1.10;
access;
symbols
	Helios_1_3_1:1.8
	Helios_C40_1_3_Official_Release:1.6
	Alenia_release:1.6
	Helios1_3:1.6
	C40_Field_Test_2:1.6
	C40_Field_Test_R1:1.6
	Helios13_beta:1.5
	Helios1_2_2:1.4;
locks; strict;
comment	@# @;


1.10
date	94.06.07.12.40.53;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	93.12.09.23.07.41;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	93.08.12.11.02.12;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	93.08.06.13.23.59;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	92.06.29.17.00.15;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.06.24.08.40.36;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.11.29.14.31.51;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	91.11.08.13.31.11;	author bart;	state Exp;
branches;
next	1.2;

1.2
date	91.04.15.15.10.09;	author bart;	state Exp;
branches;
next	1.1;

1.1
date	91.03.28.17.22.19;	author bart;	state Exp;
branches;
next	;


desc
@Makefile for the lock server
@


1.10
log
@made rules silent
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: lock server
#
# File: /HSRC/servers/lock/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.9 1993/12/09 23:07:41 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = servers/lock

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = lockserv lock.lib locktest

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
	test -d $(HPROD)/users/guest/examples/servers || mkdir $(HPROD)/users/guest/examples/servers
	test -d $(HPROD)/users/guest/examples/servers/lock || mkdir $(HPROD)/users/guest/examples/servers/lock
	-rm -f $(HPROD)/users/guest/examples/servers/lock/*
	cp $(HSRC)/$(COMPONENT)/lockserv.c $(HPROD)/users/guest/examples/servers/lock
	cp $(HSRC)/$(COMPONENT)/locklib.h $(HPROD)/users/guest/examples/servers/lock
	cp $(HSRC)/$(COMPONENT)/locklib.c $(HPROD)/users/guest/examples/servers/lock
	cp $(HSRC)/$(COMPONENT)/locktest.c $(HPROD)/users/guest/examples/servers/lock
	cp $(HSRC)/$(COMPONENT)/makefile.hel $(HPROD)/users/guest/examples/servers/lock/makefile
	cp $(HSRC)/$(COMPONENT)/readme $(HPROD)/users/guest/examples/servers/lock
	$(TOUCH) install

installdef:	# If this is a library, enter all .def files here (to install)
	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	=	lockserv.c locktest.c locklib.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	=	locklib.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile makefile.hel readme


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
else
  NCFLAGS := $(NCFLAGS)
endif

# Note any library def files to be linked with
LIBDEFS	:= -l$(LIB)/helios.lib

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

ifeq ($(HPROC),TRAN)
lockserv: lockserv.c
	@@ echo Compiling $^ ...
	@@ $(CC) -c $< -DDEBUG -Fs -o lockserv.o
	@@ echo Linking $@@ ...
	@@ $(LINK) -o lockserv -f $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
else
lockserv: lockserv.c
	@@ echo Compiling $^ ...
ifeq ($(HPROC),ARM)
	@@ $(NC) -c $(NCFLAGS) $< -DDEBUG -Fs -o lockserv.o
else
	@@ $(CC) -c $< -DDEBUG -Fs -o lockserv.o
endif
	@@ echo Linking $@@ ...
	@@ $(LINK) -o lockserv $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
endif

lock.lib: locklib.c
	@@ echo Compiling $^ ...
ifeq ($(HPROC),ARM)
	@@ $(NC) -c $(NCFLAGS) $< -I$(HSRC)/$(COMPONENT) -o lock.lib
else
	@@ $(CC) -c $< -I$(HSRC)/$(COMPONENT) -o lock.lib
endif

locktest: locktest.c lock.lib
	@@ echo Compiling $^ ...
ifeq ($(HPROC),ARM)
	@@ $(NC) -c $(NCFLAGS) $< -I$(HSRC)/$(COMPONENT) -o locktest.o
else
	@@ $(CC) -c $< -I$(HSRC)/$(COMPONENT) -o locktest.o
endif
	@@ echo Linking $@@ ...
	@@ $(LINK) -o locktest $(LIB)/c0.o locktest.o \
		-l$(LIB)/helios.lib -l$(LIB)/c.lib -llock.lib

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.9
log
@Use NC and NCFLAGS for ARM builds
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1993/08/12 11:02:12 nickc Exp nickc $
d147 4
a150 2
	$(CC) -c $< -DDEBUG -Fs -o lockserv.o
	$(LINK) -o lockserv -f $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
d153 1
d155 1
a155 1
	$(NC) -c $(NCFLAGS) $< -DDEBUG -Fs -o lockserv.o
d157 1
a157 1
	$(CC) -c $< -DDEBUG -Fs -o lockserv.o
d159 2
a160 1
	$(LINK) -o lockserv $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
d164 1
d166 1
a166 1
	$(NC) -c $(NCFLAGS) $< -I$(HSRC)/$(COMPONENT) -o lock.lib
d168 1
a168 1
	$(CC) -c $< -I$(HSRC)/$(COMPONENT) -o lock.lib
d172 1
d174 1
a174 1
	$(NC) -c $(NCFLAGS) $< -I$(HSRC)/$(COMPONENT) -o locktest.o
d176 1
a176 1
	$(CC) -c $< -I$(HSRC)/$(COMPONENT) -o locktest.o
d178 2
a179 1
	$(LINK) -o locktest $(LIB)/c0.o locktest.o \
@


1.8
log
@fixed mkdir commands
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1993/08/06 13:23:59 paul Exp nickc $
d151 3
d155 1
d160 3
d164 1
d167 3
d171 1
@


1.7
log
@merged with ARM
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/06/29 17:00:15 nickc Exp $
d78 2
a79 2
	-mkdir $(HPROD)/users/guest/examples/servers
	-mkdir $(HPROD)/users/guest/examples/servers/lock
@


1.6
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/11/29 14:31:51 martyn Exp $
d145 1
a145 1
ifeq ($(HPROC),C40)
d148 1
a148 1
	$(LINK) -o lockserv $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
d152 1
a152 1
	$(LINK) -o lockserv -f $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
a164 1

@


1.5
log
@fixed for non transputer processors by removing -f trans. specific flag from
link
@
text
@d145 1
d148 4
a151 1
ifeq ($(HPROC),TRAN)
a152 2
else
	$(LINK) -o lockserv $(LIB)/s0.o lockserv.o -l$(LIB)/helios.lib
@


1.4
log
@ignore rm error in install rule
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1991/11/08 13:31:11 bart Exp martyn $
d147 1
d149 3
@


1.3
log
@The makefile now installs the lock server in the users/guest/examples
directory.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1991/04/15 15:10:09 bart Exp bart $
d80 1
a80 1
	rm -f $(HPROD)/users/guest/examples/servers/lock/*
@


1.2
log
@List of sources was wrong, logger.c instead of lockserv.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1991/03/28 17:22:19 bart Exp bart $
d73 1
a73 1
TARGETS = lockserv
d78 9
a86 1
	$(CP) $(TARGETS) $(LIB)
d112 1
a112 1
SOURCES.c	=	lockserv.c
d118 1
a118 1
HEADERS.c	=
d124 1
a124 1
SOURCES.odd	= makefile
d138 1
a138 1
LIBDEFS	:= -l$(LIB)/helios.lib -l$(LIB)/c.lib
d145 11
a155 2
lockserv: lockserv.o
	$(LINK) -o$@@ $(LIB)/s0.o $^ $(LIBDEFS)
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 91/03/03 23:33:35 paul Exp $
d104 1
a104 1
SOURCES.c	=	logger.c
@
