head	1.7;
access;
symbols
	Helios_1_3_1:1.7
	Helios_C40_1_3_Official_Release:1.7
	Alenia_release:1.7
	Helios1_3:1.7
	C40_Field_Test_2:1.7
	C40_Field_Test_R1:1.7
	Helios13_beta:1.7
	Helios1_2_2:1.7
	Helios1_2_2Beta:1.7
	Helios1_2_1:1.7;
locks; strict;
comment	@# @;


1.7
date	91.03.07.19.14.56;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	91.03.07.18.58.48;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.03.05.18.48.29;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.03.04.15.16.13;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	91.02.28.17.56.23;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.02.28.17.06.37;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.10.17.15.11.23;	author bart;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fixed my bodge
(added servtask.i target that it left out before)
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: server task
#
# File: /HSRC/servers/servtask/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.6 91/03/07 18:58:48 paul Exp Locker: paul $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then we get local defaults from
# ../makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = servers/servtask

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean syslib.i syslib.def
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
 HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here
SSTART := $(LIB)/s0.o
CSTART := $(LIB)/c0.o

# Note all final generic targets here
ifeq ($(HPROC),TRAN)
TARGETS := slumber servtask.i
else
TARGETS :=
endif

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
ifeq ($(HPROC),TRAN)
	$(CP) servtask.i $(LIB)
	$(CP) slumber $(BIN)/slumber
endif
	$(TOUCH) install

installdef: 
	$(TOUCH) installdef

clean	: Xclean
	-$(RM) $(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

# Full set of object files - cheat a little - all possibles
OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p) \
		  $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o) \
		  $(SOURCES.c:.c=.si) $(SOURCES.c:.c=.sa) \
		  $(SOURCES.c:.c=.dl)

SOURCES.c 	= servtask.c window.c slumber.c	

# AMPP source files
SOURCES.a 	= 	

# C header files
HEADERS.c	= keymap.h version.h servtask.h window.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Other generic component variables:

# Other possibles are:
DEFINES	:= $(DEFINES) 

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1
else
 ifeq ($(HPROC),TRAN)
  NCFLAGS := $(NCFLAGS) -ps1 -t4
  LINKFLAGS := $(LINKFLAGS) -f
 else
  NCFLAGS := $(NCFLAGS) -ps1
 endif
endif

# Note any library def files to be linked with

#-----------------------------------------------------------------------------
# Extra server compilation rules:

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

#-----------------------------------------------------------------------------
# A nucleus server:

servtask.i : $(SSTART) servtask.o window.o 
ifeq ($(HPROC),ARM)
	$(LINK) $(LINKFLAGS) -l$(LIB)/helios.lib -nServerTask -s4000 -h50000 $^ -o$@@
else
	$(LINK) $(LINKFLAGS) -l$(LIB)/helios.lib -nServerTask -s2000 -h60000 $^ -o$@@
endif


# Slumber Command:

slumber :	$(CSTART) slumber.o 
	$(LINK) $(LINKFLAGS) -l$(LIB)/helios.lib -l$(LIB)/c.lib -nslumber $^ -o$@@


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.6
log
@moved creation of nucleus.srv to nucleus makefile
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 91/03/05 18:48:29 paul Exp $
d76 1
a76 1
TARGETS := slumber
@


1.5
log
@fixed install
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/04 15:16:13 paul Exp Locker: paul $
d62 1
a62 1
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
d76 1
a76 1
TARGETS := nucleus.srv slumber
d85 1
a85 1
	$(CP) nucleus.srv $(LIB)
a129 2
#NUCLEUS := $(HSRC)/nucleus

a152 4
# uncomment if you have compiler or makedepend generated dependencies
#include depends


d154 1
a154 2
# Resident Modules
# These should be included in the system image in SLOT order
a155 29
SYSLIBS 	:= $(KERNEL)/$(HPROC)/kernel.i $(NUCLEUS)/syslib/$(HPROC)/syslib.i \
		 $(NUCLEUS)/$(HPROC)/servlib.i $(UTIL)/$(HPROC)/util.i 

ifeq ($(HPROC),TRAN)
SYSLIBS		:= $(SYSLIBS) $(BOOT)
endif

ifeq ($(HPROC),ARM)
SYSLIBS		:= $(SYSLIBS) $(FPLIB)/$(HPROC)/fplib.i \
		$(POSIX)/$(HPROC)/posix.i $(CLIB)/$(HPROC)/clib.i \
		$(FAULT)/$(HPROC)/fault.i
endif

# system tasks

SYSTASKS := $(NUCLEUS)/$(HPROC)/procman.i $(NUCLEUS)/$(HPROC)/loader.i

ifeq ($(HPROC),ARM)
SYSTASKS := $(SYSTASKS) window.i rom.i ram.i null.i hserver.i
endif

# Build the nucleus
nucleus.srv : $(SYSLIBS) $(SYSTASKS) servtask.i
	$(SYSBUILD) nucleus.srv $(SYSLIBS) $(SYSTASKS) servtask.i


#-----------------------------------------------------------------------------
# Nucleus servers

d162 3
@


1.4
log
@fixed for arm
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/02/28 17:56:23 martyn Exp $
d163 1
a163 1
SYSLIBS 	:= $(KERNEL)/$(HPROC)/kernel.i $(NUCLEUS)/$(HPROC)/syslib.i \
@


1.3
log
@fixed last fix
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/02/28 17:06:37 paul Exp Locker: martyn $
d59 1
a59 1
VPATH := $(HSRC)/$(COMPONENT)
d62 1
a62 1
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d65 4
d75 1
d77 2
a78 3

ifeq ($(HPROC),TRAN)
TARGETS := $(TARGETS) 
d84 1
d87 1
d203 1
@


1.2
log
@changed for move of dir to /hsrc/servers
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/10/17 15:11:23 bart Exp Locker: paul $
d27 1
a27 1
include ../makeinc/DFLT.mak
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
# File: /HSRC/servtask/makefile
d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 90/10/04 18:46:22 bart Exp $
d43 1
a43 1
COMPONENT = servtask
@
