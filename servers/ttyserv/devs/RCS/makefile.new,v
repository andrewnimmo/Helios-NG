head	1.1;
access;
symbols
	Helios_1_3_1:1.1
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios1_3:1.1
	C40_Field_Test_2:1.1
	C40_Field_Test_R1:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;


1.1
date	91.02.13.16.06.15;	author nick;	state Exp;
branches;
next	;


desc
@Nick C's makefile
@



1.1
log
@Initial revision
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: PTY drivers
#
# File: /HSRC/ios/pty/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id$
#		(C) Copyright 1991 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#
# $Header$
#
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = ios/pty

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
VPATH := $(HSRC)/$(COMPONENT)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = $(RBINS) 

default: $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(RBINS) $(LIB)
	$(TOUCH) install

# Stop no args cleaning the cmds!
newdefault: default


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# AMPP source files
SOURCES.a	= devs.a pdevs.a

# C header files
HEADERS.c	= tpseudev.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile

# Bog standard Regular commands
RSRCS 		= tserdev.c tpseudev.c

# C source files
SOURCES.c	= $(RSRCS)

# Transform to lists of object files
ROBJS = $(RSRCS:.c=.o)

default: $(TARGETS) Xdefault

#transform to lists of binaries
RBINS = $(ROBJS:.o=)

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

OBJECTS	= $(ROBJS)

#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
NCFLAGS := $(NCFLAGS)

%: %.o
	$(LINK) $(LINKFLAGS) -o$@@ -n$@@ -s2000 -h4000 $(CSTART) $@@.o

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

#$(TARGETS): $(CSTART)

# Compile regular and private binaries

$(ROBJS) :

$(RBINS) : $(CSTART)

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@
