head	1.1;
access;
symbols
	Helios_1_3_1:1.1
	Helios_C40_1_3_Official_Release:1.1
	Alenia_release:1.1
	Helios1_3:1.1
	C40_Field_Test_2:1.1
	C40_Field_Test_R1:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.1
date	91.02.13.16.06.01;	author nick;	state Exp;
branches;
next	;


desc
@
@



1.1
log
@Initial revision
@
text
@
#include <helios.h>			/* standard header		*/
#include <stdio.h>
#include <stdlib.h>
#include <syslib.h>
#include <servlib.h>
#include <string.h>
#include <root.h>
#include <message.h>
#include <link.h>
#include <task.h>
#include <sem.h>
#include <protect.h>
#include <codes.h>
#include <gsp.h>
#include <process.h>
#include <attrib.h>
#include <ioevents.h>
#include <nonansi.h>
#include <device.h>
#include <posix.h>
#include <signal.h>

#include "../tty/ttydev.h"

DCB *dcb;
Semaphore Main;

void Terminate(void)
{
	signal(SIGTERM,SIG_IGN);
	(void)CloseDevice(dcb);
	Signal(&Main);
	exit(1);
}

int main (void)
{
	TermDeviceInfo TDI;
	char c;
	int free;
	
	free = Malloc(-1);

	signal(SIGTERM, Terminate);
				
	TDI.NTE_Name = "testpty";
	TDI.read = Heliosno(stdin);
	TDI.write = Heliosno(stdout);
	
	InitSemaphore(&Main, 0);
	
	dcb = OpenDevice("tpseudo.d", &TDI);
	fprintf(stderr, "\n\r\n\rOpenDevice = %p\n", dcb);

	fprintf(stderr, "\n\rpress return to continue\n");
	while((c= getc(stdin)) != '\n')
		if (c > 0) 
			putc(c,stdout);  

	if (dcb){
		raise(SIGTERM);
		Wait(&Main);
	}
	exit(0);	
}
@
