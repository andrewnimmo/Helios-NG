head	1.18;
access;
symbols
	Helios_1_3_1:1.17
	Helios_C40_1_3_Official_Release:1.15
	Alenia_release:1.15
	Helios1_3:1.15
	C40_Field_Test_2:1.15
	C40_Field_Test_R1:1.13
	Helios13_beta:1.13
	Helios1_2_2:1.10
	Helios1_2_2Beta:1.10
	Helios1_2_1:1.10
	Helios1_2:1.7
	V1_2Beta0:1.3;
locks; strict;
comment	@# @;


1.18
date	93.12.08.17.33.14;	author nickc;	state Exp;
branches;
next	1.17;

1.17
date	93.08.11.13.43.18;	author bart;	state Exp;
branches;
next	1.16;

1.16
date	93.08.06.13.09.33;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	92.09.15.17.11.31;	author paul;	state Exp;
branches;
next	1.14;

1.14
date	92.08.19.16.21.42;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	92.06.26.11.26.12;	author bart;	state Exp;
branches;
next	1.12;

1.12
date	92.06.16.14.33.48;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	92.04.16.00.31.20;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	91.03.01.17.45.57;	author martyn;	state Exp;
branches;
next	1.9;

1.9
date	91.02.14.22.56.21;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	91.01.22.18.09.28;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	90.11.26.18.14.35;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	90.11.20.13.32.53;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	90.10.19.21.26.55;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	90.10.02.15.58.13;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	90.09.07.12.57.05;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.07.12.48.27;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.31.05;	author nick;	state Exp;
branches;
next	;


desc
@@


1.18
log
@fixed for ARM6 builds
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Posix Libarary
#
# File: /HSRC/posix/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.17 1993/08/11 13:43:18 bart Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = posix

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HVPATH):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = posix.def posix.i

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
ifeq ($(HLICENSEE),ABC)
	sysstrip posix.i -o$(LIB)/Posix
else
	$(CP) posix.i $(LIB)/Posix
endif
	$(TOUCH) install

installdef: $(LIB)/posix.def
	$(TOUCH) installdef

$(LIB)/posix.def : posix.def
ifeq (HELIOS,$(findstring HELIOS,$(HHOST))) #csh default on Helios hosts
	(cmp $^ $@@ ; if ( $$status ) cp $^ $@@ )
else
	@@ if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
endif

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall $(SAOBJS)

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

#Full set of library object files
#OBJECTS	= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
#OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	= dir.c env.c exec.c fileio.c pwd.c saposix.c scandb.c \
			signal.c socket.c termios.c

# AMPP source files
SOURCES.a	=  pstart.a posixasm.a modend.a saposasm.a

# C header files
HEADERS.c	= pposix.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required. Possible flags are:
# 	-DSTACKEXTENSION	signal handling thread has small stack
#				N.B. THIS REQUIRES STACKCHECKING 

ifeq ($(HPROC),TRAN)
    NCFLAGS := $(NCFLAGS) -ps1 -pf0 -j$(POSIX)/include/,$(INCLUDE)/ -DPOSIX
else
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -Zpw1 -j$(POSIX),$(INCLUDE) -DPOSIX -DSTACKEXTENSION
  else
    ifeq ($(HPROC),ARM)
# -Zt = tiny memory model.
      NCFLAGS := $(NCFLAGS) -j$(POSIX),$(INCLUDE) -DPOSIX -Zt
    else
      ifeq ($(HPROC),ARM6)
        NCFLAGS := $(NCFLAGS) -j$(POSIX),$(INCLUDE) -DPOSIX -Zt
      endif
    endif
  endif
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/kernel.def $(LIB)/syslib.def $(LIB)/util.def


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

OBJECTS = pstart.p posixasm.p fileio.p dir.p pwd.p env.p exec.p signal.p \
	termios.p socket.p scandb.p modend.p

posix.i : $(OBJECTS) $(LIBDEFS)
	$(LINK.LIBRARY) -nPosix $^ -oposix.i


posix.def: pstart.a
	$(MAKE.DEF)


#-----------------------------------------------------------------------------
# Standalone library support

ifeq ($(HPROC),TRAN)

SAOBJS = pstart.p saposasm.p saposix.p modend.p

posix.sa : $(SAOBJS)
	$(ASM) -f -nPosix $(SAOBJS) \
	$(LIB)/kernel.def $(LIB)/syslib.def $(LIB)/util.def -oposix.sa
	$(CP) posix.sa $(LIB)
ifdef SYSDEB
	$(CP) posix.sa /helios/lib
endif
else
SAOBJS =
endif

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.17
log
@C40 version now built with stack extension enabled
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.15 1992/09/15 17:11:31 paul Exp $
d146 4
@


1.16
log
@merged with ARM
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.15 1992/09/15 17:11:31 paul Exp paul $
d133 4
a136 1
# Set any flags required
d141 1
a141 1
    NCFLAGS := $(NCFLAGS) -Zpw1 -j$(POSIX),$(INCLUDE) -DPOSIX
@


1.15
log
@updated for new arm port
,
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.14 1992/08/19 16:21:42 paul Exp $
d140 4
a143 1
    NCFLAGS := $(NCFLAGS) -j$(POSIX),$(INCLUDE) -DPOSIX
@


1.14
log
@added little data pragma for C40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.13 1992/06/26 11:26:12 bart Exp $
d78 1
a78 1
ifeq ($(HPROC),ARM)
@


1.13
log
@now cleans the stand-alone stuff as well
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.12 1992/06/16 14:33:48 nickc Exp bart $
d134 2
a135 2
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1 -j$(POSIX),$(INCLUDE) -DPOSIX
d138 1
a138 1
    NCFLAGS := $(NCFLAGS) -Zps1 -j$(POSIX),$(INCLUDE) -DPOSIX
d140 1
a140 1
    NCFLAGS := $(NCFLAGS) -ps1 -pf0 -j$(POSIX)/include/,$(INCLUDE)/ -DPOSIX
@


1.12
log
@improved rule slightly
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 1992/04/16 00:31:20 paul Exp nickc $
d97 1
a97 1
		core ../mkout install installdef Xinstall
d179 2
@


1.11
log
@fixed for C40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1991/03/01 17:45:57 martyn Exp paul $
d92 1
a92 1
	if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
@


1.10
log
@changed bug in saposasm.a name
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 91/02/14 22:56:21 paul Exp $
d137 5
a141 1
  NCFLAGS := $(NCFLAGS) -ps1 -pf0 -j$(POSIX)/include/,$(INCLUDE)/ -DPOSIX
@


1.9
log
@added support for sysstrip -o option (ARM)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 91/01/22 18:09:28 paul Exp Locker: paul $
d118 1
a118 1
SOURCES.a	=  pstart.a posixasm.a modend.a saposixasm.a
@


1.8
log
@arm version support for patchable nucleus (sysstrip)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 90/11/26 18:14:35 nick Exp $
d79 1
a79 1
	sysstrip posix.i $(LIB)/Posix
@


1.7
log
@standalone stuff fixed
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 90/11/20 13:32:53 martyn Exp Locker: nick $
d78 3
d82 1
@


1.6
log
@*** empty log message ***
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 90/10/19 21:26:55 paul Exp Locker: martyn $
d59 1
a59 1
VPATH := $(HSRC)/$(COMPONENT)
d62 1
a62 1
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d65 4
d114 1
a114 1
SOURCES.a	=  pstart.a posixasm.a modend.a
d166 1
a166 1
	$(KERNEL)/kernel.def $(NUCLEUS)/syslib.def $(UTIL)/util.def -oposix.sa
d168 3
@


1.5
log
@Correct SOURCES.a
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 90/10/02 15:58:13 nick Exp Locker: paul $
@


1.4
log
@uses DFLT.mak for local default, RSRC for remote sources
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 90/09/07 12:57:05 nick Exp Locker: nick $
d110 1
a110 1
SOURCES.a	=  pstart.a posixasm.a modend.a saposixasm.a
@


1.3
log
@buglet in last change fixed
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 90/09/07 12:48:27 nick Exp Locker: nick $
d23 6
a28 16
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif
d61 4
d129 1
a129 1
  NCFLAGS := $(NCFLAGS) -ps1 -pf0 -j$(POSIX)/include/,$(INCLUDE)/ -DT800 -DPOSIX
@


1.2
log
@installdef fixed to cope with empty $(LIB)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/09/05 13:31:05 nick Exp Locker: nick $
d83 1
a83 1
installdef: posix.def
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
a83 1
	$(CP) $^ $(LIB)
d85 7
@
