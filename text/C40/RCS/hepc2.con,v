head	1.12;
access;
symbols
	Helios_1_3_1:1.12
	Helios_C40_1_3_Official_Release:1.12;
locks; strict;
comment	@# @;


1.12
date	93.05.11.10.03.41;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	93.05.06.08.04.30;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	93.05.05.16.59.10;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	93.04.26.09.41.38;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	93.04.22.16.01.17;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	93.04.21.08.02.12;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	93.04.07.15.02.04;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	93.04.07.10.39.32;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	93.04.02.14.52.44;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	93.01.20.13.48.42;	author richardp;	state Exp;
branches;
next	1.2;

1.2
date	93.01.20.12.18.32;	author richardp;	state Exp;
branches;
next	1.1;

1.1
date	93.01.19.16.25.23;	author paul;	state Exp;
branches;
next	;


desc
@Name change from Hunt.con to match documentatio
@


1.12
log
@corrected spelling mistake, and moved "box =" line to head of file
@
text
@# Host.con file for the HEPC2 board
# For more information read the comments below the line of dashes.
# For a quick start just edit the four lines below so that they
# have the correct values.  (Everything from a hash to the end of the
# line is a comment).

link_base        = 0x150	# set to 0x150, 0x200, or 0x300
hepc2_fifo_base  = 0xD0000	# set to 0xC0000, 0xC8000, or 0xD0000
helios_directory = \helios	# where you installed Helios
box              = HEPC2 	# Set to TIM40 if not using FIFO interface

#--------------------------------------------------------------------
#
# This is a configuration file for the MS-DOS and MS-WINDOWS
# versions of the Helios-C40 I/O server program.  It has been set
# up to drive a
#
#	     HUNT ENGINEERING HEPC2 TIM Motherboard
# and a 
#	     HUNT ENGINEERING HEPC2-M TIM Motherboard
#
# Before you can use this file you should read the notes below, and also
# the information in the Helios-C40 Installation Guide.  If you do not
# have a Hunt Engineering HEPC2 board (or HEPC2-M board), but some
# other kind of C40 board then you should not use this file.  Check the
# Helios Installation Guide for the file you should be using.
#
# Note: In order to simplify matters both the HEPC2 and the HEPC2-M
# boards will be referd to as HEPC2 in the rest of this file.
#
# All lines that start with a hash ( # ) is a comment which is ignored
# by the I/O server.  Lines that do not start with a hash are
# instructions to the I/O server telling it how to behave or telling it
# about the C40 board that it is trying to drive.  
#
# In order to use this file you must do the following ...
#
#   1) Rename this file to HOST.CON
#
#   2) Read the notes below (up to, but not beyond the line of
#      asterisks) and ensure that the configuration options mentioned
#      in the notes have the correct values for your set up.
#
#   3) Start Helios by running the server program (server.exe for
#      MS-DOS or winsrvr.exe for MS-WINDOWS).
#
#   4) If Helios boots up then tell all your friends, throw a party
#      and generally have a good time.
#      If Helios does not start, then check this file, reread the
#      installation notes (especially the trouble shooting section),
#      and if all else fails, contact DSL.
#
# The configuraton options at the start of this file must be set up to
# match your system.  The following paragraphs describe those options.
#
# The link_base entry specifies where the link used to communicate
# with the C40 appears in the PC's memory map.  This is set by the
# jumpers JP1 and JP2 on the HEPC2 board.
#
# The hepc2_fifo_base entry specifies where the HEPC2's fast FIFO 
# interface appears in the PC's memory map.  This is set by the
# jumpers JP3 and JP4 on the HEPC2 board.
#
# You should check to make sure that the values in these options agrees
# with the values set by these jumpers.  You may have to change the
# jumper settings if you discover that the address clashes with some
# other board that you have installed in your PC.  The jumpers are
# described in the HEPC User Manual.
#
# Note: Not all PCs are capable of supporting the FIFO interface.  If
# you are unable to boot the HEPC2 board using any of the FIFO base
# settings then you will have to revert to using the slower TIM40
# interface.  To do this change the box option from reading "box = HEPC2"
# to read "box = TIM40".  Helios will still work, it will just have a
# slower interface to the PC. 
#
# The helios_directory entry tells the I/O server where Helios has
# been installed on your hard disk.  If you used the default options
# of the install program on the distribution disks (ie you ran
# a:install a: or b:install b: ), then your copy of Helios will have
# been placed in c:\helios, and you will not need to change this entry.
# If however you decided to install Helios somewhere else on your hard
# disk, then you must change the entry to reflect this. For example,
# if you installed Helios into d:\helios then you should change the line
# to read "helios_directory = d:\helios".  
#
# That's it.  Now save the changes you have made to this file, (if
# any), and try starting Helios.
#

# **************************************************************************
#
#               Customisation Section
#
# If you are installing Helios for the first time you should not need
# to alter any of the entries in this section.  Once you have a
# working Helios system, however, you may find that you want to change
# some of these entries in order to improve Helios' performance.
# These entries are documented in the template.con file and in "The
# Helios Parallel Operating System" book, section 8.4.3

#ethernet			# Enable Ethernet support
#Unix_fileio			# Enable Unix like file I/O
# c40_load_nucleus_local_s0	# \
# c40_load_nucleus_local_s1	#  \ where to load the Helios nucleus
c40_load_nucleus_global_s0	#  / set EXACTLY ONE of these
# c40_load_nucleus_global_s1	# /
server_windows_nopop		# Don't pop up the windows for system messages
message_limit       = 64000	# Reduce this if PC is running out of memory
# coroutine_stack   = 1500 	# Uncomment if the PC is running out of memory
floppies            = ab    	# Floppy disk drives available on the PC
logfile             = logbook	# Name of error log file
logging_destination = screen	# Where to send errors: screen, file, both


# ************************************************************************
#
# 		Fixed Section
#
# You should not need to modify any of the following entries. They are
# here in order to make the HEPC2 board work.  If you really want to
# customise your installation then you should use the template.con
# file.  Edit the template.con file to contain the same values as are
# currently set up in this file, then copy the template.con file to
# host.con, and carry on from there.
#

Server_windows			
no_pc
Target_processor = C40		
host             = AT    	
system_image     = ~\lib\nucleus
bootfile         = ~\lib\c40boot.i

# end of host.con file for the HEPC2 and HEPC2-M boards
@


1.11
log
@another textual improvement
@
text
@d3 1
a3 1
# For a quick start just edit the three lines below so that they
d10 1
d73 3
a75 3
# interface.  To do this change the line reading "box = HEPC2" in the
# Fixed Section below to read "box = TIM40".  Helios will still work, it
# will just have a slower interface to the PC.
a131 1
box              = HEPC2 	# Set to TIM40 if not using FIFO interface
d135 1
a135 1
# end of host.con fiel for the HEPC2 and HEPC2-M boards
@


1.10
log
@updated with suggestions from Judith
@
text
@d30 4
a33 4
# All lines that start with a hash (one of these --> # ) is a comment
# which is ignored by the I/O server.  Lines that do not start with
# a hash are instructions to the I/O server telling it how to behave
# or telling it about the C40 board that it is trying to drive.
@


1.9
log
@updated to include HEPC2-M, and removed explicit page numbers
@
text
@d27 2
a28 2
# (Note for the purposes of this file, the HEPC2 and HEPC2-M boards
# are exactly the same.)
d40 2
a41 2
#      asterisks) and ensure that the entries mentioned in those notes
#      have the correct values for your configuration.
d52 2
a53 2
# Here are the configuration options that you need to check, and
# possibly modify ...
d57 1
a57 13
# jumpers JP1 and JP2 on the HEPC2 board, (see the HEPC2 User
# Manual).  You should check to make sure that the value here agrees
# with the value set by these jumpers.  You may have to change the
# jumper settings on the HEPC2 board if you find that it clashes with
# some other board installed in your PC.
#
# The hepc2_fifo_base entry specifies where the HEPC2's fast FIFO
# interface appears in the PC's memory map.  This is set by the jumpers
# JP3 and JP4 on the HEPC2 board, (see the HEPC2 User Manual).
# You should check to make sure that the value here agrees with the
# value set by these jumpers.  You may have to change the jumper
# settings if you discover that the address clashes with some other
# board that you have installed in your PC.
d59 11
a69 1
# Note/ Not all PCs are capable of supporting the FIFO interface.  If
d80 5
a84 5
# been placed in c:\helios, and you will not need to change the line
# above.  If however you decided to install Helios somewhere else on
# your hard disk, then you must change the line below to reflect this.
# If you installed Helios into d:\helios (for example) then you should
# change the line to read "helios_directory = d:\helios", and so on. 
d135 1
a135 1
# end of host.con
@


1.8
log
@tidied up slightly after installation of Helios by Ian
@
text
@d18 2
d23 3
a25 3
# have a Hunt Engineering HEPC2 board, but some other kind of C40
# board then you should not use this file.  Check the Helios
# Installation Guide for the file you should be using.
d27 3
d57 1
a57 1
# jumpers JP1 and JP2 on the HEPC2 board, (see page 7 of the HEPC2 User
d65 1
a65 1
# JP3 and JP4 on the HEPC2 board, (see page 8 of the HEPC2 User Manual).
@


1.7
log
@changed hepc2_fifo_base to match factory default
@
text
@d19 1
a19 1
# Before you can use this file you must read the notes below, and also
d76 6
a81 6
# a:install a: ), then your copy of Helios will have been placed in
# c:\helios, and you will not need to change the line above.  If
# however you decided to install Helios somewhere else on your hard
# disk, then you must change the line below to reflect this.  If you
# installed Helios into d:\helios (for example) then you should change
# the line to read helios_directory = d:\helios", and so on. 
@


1.6
log
@minor textual change
@
text
@d8 1
a8 1
hepc2_fifo_base  = 0xC8000	# set to 0xC0000, 0xC8000, or 0xD0000
@


1.5
log
@checked on TIM40 type PC
@
text
@d73 3
a75 3
# Finally the helios_directory entry tells the I/O server where
# Helios has been installed on your hard disk.  If you used the default
# options of the install program on the distribution disks (ie you ran
d77 5
a81 5
# c:\helios, and you will not need to change the line below.  If however
# you decided to install Helios somewhere else on your hard disk, then
# you must change the line below to reflect this.  If you installed
# Helios into d:\helios (for example) then you should change the line to
# read "helios_directory = d:\helios", and so on.
@


1.4
log
@New, improved, chatty, terse, in fact all things to all people
@
text
@d1 1
a1 1
# Host.con file for HEPC2 board
d8 1
a8 1
hepc_fifo_base   = 0xC80000	# set to 0xC0000, 0xC8000, or 0xD0000
d56 1
a56 1
# some other board installed in you PC.
d58 1
a58 1
# The hepc_fifo_base entry specifies where the HEPC2's fast FIFO
d64 1
a64 1
# other board that you have installed in your PC.
a125 1
no_t
@


1.3
log
@put back the CRs again!.  oops
@
text
@d1 133
a133 208
# Hunt Engineering HEPC2 default version of host.con
#
# This configuration file is set up to use the fast FIFO interface of
# the HEPC2, as well as the global memory option.
# The board settings are assumed to be as follows:
#	link_base = 0x150
#	hepc2_fifo_base = 0xc8000
#
# Note:	Not all PCs are capable of supporting the FIFO interface.  If
#	you are unable to boot the board using any of the FIFO interface
#	settings, you will have to revert to the slower TIM40 interface.
#	To do this, uncomment the line containing "box = TIM40" and comment
#	the line containing "box = HEPC2".
#
#	If use of the global memory option is not required, comment the line 
#	"c40_load_nucleus_global_s0".
#
# For more information on the options in host.con, refer to "The Helios
# Parallel Operatings System" book, section 8.4.3.

Target_processor = C40

# PC hosted system, hosts can be AT or PC
host          = AT

# The box option can be configured to:
#  TIM40  for most C40 TIM-40 standard boards.
#  HEPC2  for Hunt Engineering HEPC2 board (you should also set
#         hepc2_fifo_base).
#  TDB416 for Transtec / A.G. Electronics TDB416 board (you should
#         also set processor_memory).
#
#box = TIM40
#box = TDB416
box  = HEPC2

# Standard configuration options

# Can be used to reduce the size of messages passed to/from I/O server.
# Reduce this value if the PC is running out of memory
message_limit = 64000

helios_directory    = \helios		# change to where helios is on disk
system_image  = ~\lib\nucleus
bootfile = ~\lib\c40boot.i
#bootlink = 4	# (defaults to boot C40 down link 3, Transputer down link 0)

# Host hardware specific options
# 1) Options for the C40 host interface
link_base = 0x150		# The port used to talk to your C40 board
hepc2_fifo_base = 0xc0000	# Hunt Eng. HEPC2 board's fifo address

# 2) which floppies can be used from Helios, NB only specify one if there is
#    a real physical disk drive
floppies = ab

# 3) Options for the various ports, /printers, /centronics, and /rs232
#default_printer = lpt2
#default_centronics = lpt2
#rs232_ports = 2
#default_rs232 = com2
#rs232_interrupt = 2
#com3_base = ???
#com4_base = ???
#com5_base = ???
#com6_base = ???
#com7_base = ???

# 4) X-windows support devices, the mouse and raw keyboard
#Xsupport
#mouse_resolution = 2
#mouse_divisor = 2

# 5) which drives can be used as raw disks for the filing system
#rawdisk_drive = b


# Misc I/O Server options:

# Windowing system control
Server_windows			# Use I/O Servers windowing server
server_windows_nopop		# dont pop windows for system messages

# Processor names, NB must match the resource maps
#root_processor = /root
#io_processor = /pc

# Options for the error logger
logfile = logbook
logging_destination = screen	# screen, file, both

# Unwanted servers
no_pc
no_t

# Uncomment for Ethernet support
#ethernet

# Uncomment for Unix style file I/O
# if set,  Unix_fileio means data is read/written to disk as the
#         program buffer verbatim
# default is that CRs and ^Z are discarded on read and inserted on write
#         (applies to text files only) 
#Unix_fileio

# If PC runs out of memory, uncomment the next line
# coroutine_stack = 1500 

# Set the target processors memory
# On the C40 this is for local bus strobe 0.
# If this option is not set the information is read from the IDROM
# processor_memory = 0x400000	# 4Mb


# C40 specific configuration items
# ================================

# c40_disable_cache		# disable the C40's instruction cache

# c40_disable_halfduplex	# disable halfduplex protocol on link comms.

# Define where the nucleus is to be loaded. By default it will be loaded
# into local strobe 0, or strobe 1 if strobe 0 is absent. Uncomment ONE
# of the following to put the nucleus into the given strobe. The nucleus
# will always be loaded at the base address of the strobe. Setting one
# of these will cause the loader to also try to put programs into the same
# memory area.

# c40_load_nucleus_local_s0
# c40_load_nucleus_local_s1
c40_load_nucleus_global_s0
# c40_load_nucleus_global_s1


# IDROM configuration.
#
# The TIM-40 specification defines a standard format ROM that contains
# data that characterises a C40 system. Helios uses this to automatically
# configure itself to the target system. If your C40 board doesn't implement
# an IDROM, don't despair, the I/O Server can send a pseudo IDROM so that
# Helios can still configure itself to the target system.

# c40_use_pseudo_idrom		# download and use the following IDROM
				# if target system doesn't implement IDROM

# c40_replace_idrom		# download and use the following IDROM
				# but still go through IDROM setup sequence
				# (reset config line and swap out true IDROM)

# If either of the above two options are set then the following configuration
# items specify the contents of the IDROM to send. The default IDROM values
# are shown in brackets. These are used if you dont give a new value.

# c40_idrom_cpu_id = 	# (0) CPU type (00 = C40)
# c40_idrom_cpu_clk = 	# CPU cycle time 33MHz 59  ;  40MHz=49(default);
#                                        50MHz=39  ;

# c40_idrom_man_id = 	# (0) TIM-40 module manufacturers ID
# c40_idrom_model_no = 	# (0) manufactures module type
# c40_idrom_rev_lvl = 	# (0) module revision level

# c40_idrom_reserved = 	# (0) currently unused (aligns to word boundary)

# A base address of 0xffffffff is used to show no memory on that strobe.
# c40_idrom_gbase0 = 	# (0x80000000) address base of global bus strobe 0
# c40_idrom_gbase1 = 	# (0xffffffff) address base of global bus strobe 1
# c40_idrom_lbase0 = 	# (0x00300000) address base of local bus strobe 0
# c40_idrom_lbase1 = 	# (0xffffffff) address base of local bus strobe 1

# sizes are specified in words (0x100000 = 4Mb)
# c40_idrom_gsize0 = 	# (0x100000) size of memory on global bus strobe 0
# c40_idrom_gsize1 = 	# (0) size of memory on global bus strobe 1
# c40_idrom_lsize0 = 	# (0x100000) size of memory on local bus strobe 0
# c40_idrom_lsize1 = 	# (0) size of memory on local bus strobe 1

# define the size of fast ram pool - can be increased by including also
#     any SRAM located at 30000 (ie immediately after the on-chip).  If you
#     include extra SRAM here,  don not include it also in the 
#     c40_idrom_lbase0 item.
# c40_idrom_fsize = 	# (0x800) word size of fast ram pool (inc. on-chip RAM)

# The following nibble sized items define how many cycles it takes to read a
# word from a given bank of memory. Page mode DRAM is catered for by specifying
# both accesses within the current page and outside the current page. Other
# types of memory have the same values for both.
# c40_idrom_wait_g0 = 	# (2) within page on global bus strobe 0
# c40_idrom_wait_g1 = 	# (2) within page on global bus strobe 1
# c40_idrom_wait_l0 = 	# (2) within page on local bus strobe 0
# c40_idrom_wait_l1 = 	# (2) within page on local bus strobe 1
# c40_idrom_pwait_g0 = 	# (5) outside page on global bus strobe 0
# c40_idrom_pwait_g1 = 	# (5) outside page on global bus strobe 1
# c40_idrom_pwait_l0 = 	# (5) outside page on local bus strobe 0
# c40_idrom_pwait_l1 = 	# (5) outside page on local bus strobe 1

# 33Mhz = 0x203A, 40Mhz = 0x2710, 50Mhz = 0x30D4, 60Mhz = 0x411A
# c40_idrom_timer0_period = 	# (0x2710) timer period value for 1ms interval
# c40_idrom_timer0_ctrl = 	# (0x2c2) contents to set TCLK0 to access RAM

# Setting c40_idrom_timer1_ctrl = 0 disables timer1 auto DRAM refresh
# c40_idrom_timer1_period = 	# (0x80) period for DRAM refresh pulse (option)
# c40_idrom_timer1_ctrl = 	# (0) timer 1 TCR to refresh DRAM (optional)

# These defaults are the same as the C40 uses at reset
# c40_idrom_gbcr = 	# (0x1e39fff0) global bus memory control register
# c40_idrom_lbcr = 	# (0x1e39fff0) local bus memory control register


# end of host.con
@


1.2
log
@fifo base to c0000 which is the Hunt default.  Also tidied up several
comments and reordered a couple of lines
@
text
@d1 208
a208 208
# Hunt Engineering HEPC2 default version of host.con
#
# This configuration file is set up to use the fast FIFO interface of
# the HEPC2, as well as the global memory option.
# The board settings are assumed to be as follows:
#	link_base = 0x150
#	hepc2_fifo_base = 0xc8000
#
# Note:	Not all PCs are capable of supporting the FIFO interface.  If
#	you are unable to boot the board using any of the FIFO interface
#	settings, you will have to revert to the slower TIM40 interface.
#	To do this, uncomment the line containing "box = TIM40" and comment
#	the line containing "box = HEPC2".
#
#	If use of the global memory option is not required, comment the line 
#	"c40_load_nucleus_global_s0".
#
# For more information on the options in host.con, refer to "The Helios
# Parallel Operatings System" book, section 8.4.3.

Target_processor = C40

# PC hosted system, hosts can be AT or PC
host          = AT

# The box option can be configured to:
#  TIM40  for most C40 TIM-40 standard boards.
#  HEPC2  for Hunt Engineering HEPC2 board (you should also set
#         hepc2_fifo_base).
#  TDB416 for Transtec / A.G. Electronics TDB416 board (you should
#         also set processor_memory).
#
#box = TIM40
#box = TDB416
box  = HEPC2

# Standard configuration options

# Can be used to reduce the size of messages passed to/from I/O server.
# Reduce this value if the PC is running out of memory
message_limit = 64000

helios_directory    = \helios		# change to where helios is on disk
system_image  = ~\lib\nucleus
bootfile = ~\lib\c40boot.i
#bootlink = 4	# (defaults to boot C40 down link 3, Transputer down link 0)

# Host hardware specific options
# 1) Options for the C40 host interface
link_base = 0x150		# The port used to talk to your C40 board
hepc2_fifo_base = 0xc0000	# Hunt Eng. HEPC2 board's fifo address

# 2) which floppies can be used from Helios, NB only specify one if there is
#    a real physical disk drive
floppies = ab

# 3) Options for the various ports, /printers, /centronics, and /rs232
#default_printer = lpt2
#default_centronics = lpt2
#rs232_ports = 2
#default_rs232 = com2
#rs232_interrupt = 2
#com3_base = ???
#com4_base = ???
#com5_base = ???
#com6_base = ???
#com7_base = ???

# 4) X-windows support devices, the mouse and raw keyboard
#Xsupport
#mouse_resolution = 2
#mouse_divisor = 2

# 5) which drives can be used as raw disks for the filing system
#rawdisk_drive = b


# Misc I/O Server options:

# Windowing system control
Server_windows			# Use I/O Servers windowing server
server_windows_nopop		# dont pop windows for system messages

# Processor names, NB must match the resource maps
#root_processor = /root
#io_processor = /pc

# Options for the error logger
logfile = logbook
logging_destination = screen	# screen, file, both

# Unwanted servers
no_pc
no_t

# Uncomment for Ethernet support
#ethernet

# Uncomment for Unix style file I/O
# if set,  Unix_fileio means data is read/written to disk as the
#         program buffer verbatim
# default is that CRs and ^Z are discarded on read and inserted on write
#         (applies to text files only) 
#Unix_fileio

# If PC runs out of memory, uncomment the next line
# coroutine_stack = 1500 

# Set the target processors memory
# On the C40 this is for local bus strobe 0.
# If this option is not set the information is read from the IDROM
# processor_memory = 0x400000	# 4Mb


# C40 specific configuration items
# ================================

# c40_disable_cache		# disable the C40's instruction cache

# c40_disable_halfduplex	# disable halfduplex protocol on link comms.

# Define where the nucleus is to be loaded. By default it will be loaded
# into local strobe 0, or strobe 1 if strobe 0 is absent. Uncomment ONE
# of the following to put the nucleus into the given strobe. The nucleus
# will always be loaded at the base address of the strobe. Setting one
# of these will cause the loader to also try to put programs into the same
# memory area.

# c40_load_nucleus_local_s0
# c40_load_nucleus_local_s1
c40_load_nucleus_global_s0
# c40_load_nucleus_global_s1


# IDROM configuration.
#
# The TIM-40 specification defines a standard format ROM that contains
# data that characterises a C40 system. Helios uses this to automatically
# configure itself to the target system. If your C40 board doesn't implement
# an IDROM, don't despair, the I/O Server can send a pseudo IDROM so that
# Helios can still configure itself to the target system.

# c40_use_pseudo_idrom		# download and use the following IDROM
				# if target system doesn't implement IDROM

# c40_replace_idrom		# download and use the following IDROM
				# but still go through IDROM setup sequence
				# (reset config line and swap out true IDROM)

# If either of the above two options are set then the following configuration
# items specify the contents of the IDROM to send. The default IDROM values
# are shown in brackets. These are used if you dont give a new value.

# c40_idrom_cpu_id = 	# (0) CPU type (00 = C40)
# c40_idrom_cpu_clk = 	# CPU cycle time 33MHz 59  ;  40MHz=49(default);
#                                        50MHz=39  ;

# c40_idrom_man_id = 	# (0) TIM-40 module manufacturers ID
# c40_idrom_model_no = 	# (0) manufactures module type
# c40_idrom_rev_lvl = 	# (0) module revision level

# c40_idrom_reserved = 	# (0) currently unused (aligns to word boundary)

# A base address of 0xffffffff is used to show no memory on that strobe.
# c40_idrom_gbase0 = 	# (0x80000000) address base of global bus strobe 0
# c40_idrom_gbase1 = 	# (0xffffffff) address base of global bus strobe 1
# c40_idrom_lbase0 = 	# (0x00300000) address base of local bus strobe 0
# c40_idrom_lbase1 = 	# (0xffffffff) address base of local bus strobe 1

# sizes are specified in words (0x100000 = 4Mb)
# c40_idrom_gsize0 = 	# (0x100000) size of memory on global bus strobe 0
# c40_idrom_gsize1 = 	# (0) size of memory on global bus strobe 1
# c40_idrom_lsize0 = 	# (0x100000) size of memory on local bus strobe 0
# c40_idrom_lsize1 = 	# (0) size of memory on local bus strobe 1

# define the size of fast ram pool - can be increased by including also
#     any SRAM located at 30000 (ie immediately after the on-chip).  If you
#     include extra SRAM here,  don not include it also in the 
#     c40_idrom_lbase0 item.
# c40_idrom_fsize = 	# (0x800) word size of fast ram pool (inc. on-chip RAM)

# The following nibble sized items define how many cycles it takes to read a
# word from a given bank of memory. Page mode DRAM is catered for by specifying
# both accesses within the current page and outside the current page. Other
# types of memory have the same values for both.
# c40_idrom_wait_g0 = 	# (2) within page on global bus strobe 0
# c40_idrom_wait_g1 = 	# (2) within page on global bus strobe 1
# c40_idrom_wait_l0 = 	# (2) within page on local bus strobe 0
# c40_idrom_wait_l1 = 	# (2) within page on local bus strobe 1
# c40_idrom_pwait_g0 = 	# (5) outside page on global bus strobe 0
# c40_idrom_pwait_g1 = 	# (5) outside page on global bus strobe 1
# c40_idrom_pwait_l0 = 	# (5) outside page on local bus strobe 0
# c40_idrom_pwait_l1 = 	# (5) outside page on local bus strobe 1

# 33Mhz = 0x203A, 40Mhz = 0x2710, 50Mhz = 0x30D4, 60Mhz = 0x411A
# c40_idrom_timer0_period = 	# (0x2710) timer period value for 1ms interval
# c40_idrom_timer0_ctrl = 	# (0x2c2) contents to set TCLK0 to access RAM

# Setting c40_idrom_timer1_ctrl = 0 disables timer1 auto DRAM refresh
# c40_idrom_timer1_period = 	# (0x80) period for DRAM refresh pulse (option)
# c40_idrom_timer1_ctrl = 	# (0) timer 1 TCR to refresh DRAM (optional)

# These defaults are the same as the C40 uses at reset
# c40_idrom_gbcr = 	# (0x1e39fff0) global bus memory control register
# c40_idrom_lbcr = 	# (0x1e39fff0) local bus memory control register


# end of host.con
@


1.1
log
@Initial revision
@
text
@d1 208
a208 196
# Hunt Engineering HEPC2 default version of host.con
#
# This configuration file is set up to use the fast FIFO interface of
# the HEPC2, as well as the global memory option.
# The board settings are assumed to be as follows:
#	link_base = 0x150
#	hepc2_fifo_base = 0xc8000
#
# Note:	Not all PCs are capable of supporting the FIFO interface.  If
#	you are unable to boot the board using any of the FIFO interface
#	settings, you will have to revert to the slower TIM40 interface.
#	To do this, uncomment the line containing "box = TIM40" and comment
#	the line containing "box = HEPC2".
#
#	If use of the global memory option is not required, comment the line 
#	"c40_load_nucleus_global_s0".
#
# For more information on the options in host.con, refer to "The Helios
# Parallel Operatings System" book, section 8.4.3.

Target_processor = C40

# PC hosted system, hosts can be AT or PC
host          = AT

# The box option can be configured to:
#  TIM40  for most C40 TIM-40 standard boards.
#  HEPC2  for Hunt Engineering HEPC2 board (you should also set
#         hepc2_fifo_base).
#  TDB416 for Transtec / A.G. Electronics TDB416 board (you should
#         also set processor_memory).
#
#box = TIM40
#box = TDB416
box  = HEPC2

# Standard configuration options
message_limit = 64000
helios_directory    = c:\helios		# change to where helios is on disk
system_image  = ~\lib\nucleus
bootfile = ~\lib\c40boot.i
#bootlink = 4	# (defaults to boot C40 down link 3, Transputer down link 0)

# Host hardware specific options
# 1) Options for the C40 host interface
link_base = 0x150		# The port used to talk to your C40 board
hepc2_fifo_base = 0xc8000	# Hunt Eng. HEPC2 board's fifo address

# 2) which floppies can be used from Helios, NB only specify one if there is
#    a real physical disk drive
floppies = ab

# 3) Options for the various ports, /printers, /centronics, and /rs232
#default_printer = lpt2
#default_centronics = lpt2
#rs232_ports = 2
#default_rs232 = com2
#rs232_interrupt = 2
#com3_base = ???
#com4_base = ???
#com5_base = ???
#com6_base = ???
#com7_base = ???

# 4) X-windows support devices, the mouse and raw keyboard
#Xsupport
#mouse_resolution = 2
#mouse_divisor = 2

# 5) which drives can be used as raw disks for the filing system
#rawdisk_drive = b


# Misc I/O Server options:

# Windowing system control
Server_windows			# Use I/O Servers windowing server
server_windows_nopop		# dont pop windows for system messages

# Processor names, NB must match the resource maps
#root_processor = /root
#io_processor = /pc

# Options for the error logger
logfile = logbook
logging_destination = screen	# screen, file, both

# Unwanted servers
no_pc
no_t

# Uncomment for Ethernet support
#ethernet

# Uncomment for Unix style file I/O
#Unix_fileio

# Set the target processors memory
# On the C40 this is for local bus strobe 0.
# If this option is not set the information is read from the IDROM
# processor_memory = 0x400000	# 4Mb

# If PC runs out of memory, uncomment the next line
# coroutine_stack = 1500 


# C40 specific configuration items
# ================================

# c40_disable_cache		# disable the C40's instruction cache

# c40_disable_halfduplex	# disable halfduplex protocol on link comms.

# Define where the nucleus is to be loaded. By default it will be loaded
# into local strobe 0, or strobe 1 if strobe 0 is absent. Uncomment ONE
# of the following to put the nucleus into the given strobe. The nucleus
# will always be loaded at the base address of the strobe. Setting one
# of these will cause the loader to also try to put programs into the same
# memory area.

# c40_load_nucleus_local_s0
# c40_load_nucleus_local_s1
c40_load_nucleus_global_s0
# c40_load_nucleus_global_s1


# IDROM configuration.
#
# The TIM-40 specification defines a standard format ROM that contains
# data that characterises a C40 system. Helios uses this to automatically
# configure itself to the target system. If your C40 board doesn't implement
# an IDROM, don't despair, the I/O Server can send a pseudo IDROM so that
# Helios can still configure itself to the target system.

# c40_use_pseudo_idrom		# download and use the following IDROM
				# if target system doesn't implement IDROM

# c40_replace_idrom		# download and use the following IDROM
				# but still go through IDROM setup sequence
				# (reset config line and swap out true IDROM)

# If either of the above two options are set then the following configuration
# items specify the contents of the IDROM to send. The default IDROM values
# are shown in brackets. These are used if you dont give a new value.

# c40_idrom_cpu_id = 	# (0) CPU type (00 = C40)
# c40_idrom_cpu_clk = 	# (59) CPU cycle time (60ns = 59 = 40Mhz)

# c40_idrom_man_id = 	# (0) TIM-40 module manufacturers ID
# c40_idrom_model_no = 	# (0) manufactures module type
# c40_idrom_rev_lvl = 	# (0) module revision level

# c40_idrom_reserved = 	# (0) currently unused (aligns to word boundary)

# A base address of 0xffffffff is used to show no memory on that strobe.
# c40_idrom_gbase0 = 	# (0x80000000) address base of global bus strobe 0
# c40_idrom_gbase1 = 	# (0xffffffff) address base of global bus strobe 1
# c40_idrom_lbase0 = 	# (0x00300000) address base of local bus strobe 0
# c40_idrom_lbase1 = 	# (0xffffffff) address base of local bus strobe 1

# sizes are specified in words (0x100000 = 4Mb)
# c40_idrom_gsize0 = 	# (0x100000) size of memory on global bus strobe 0
# c40_idrom_gsize1 = 	# (0) size of memory on global bus strobe 1
# c40_idrom_lsize0 = 	# (0x100000) size of memory on local bus strobe 0
# c40_idrom_lsize1 = 	# (0) size of memory on local bus strobe 1

# 0x800 = 8Kb = just the on-chip memory
# c40_idrom_fsize = 	# (0x800) size of fast ram pool (inc. on-chip RAM)

# The following nibble sized items define how many cycles it takes to read a
# word from a given bank of memory. Page mode DRAM is catered for by specifying
# both accesses within the current page and outside the current page. Other
# types of memory have the same values for both.
# c40_idrom_wait_g0 = 	# (2) within page on global bus strobe 0
# c40_idrom_wait_g1 = 	# (2) within page on global bus strobe 1
# c40_idrom_wait_l0 = 	# (2) within page on local bus strobe 0
# c40_idrom_wait_l1 = 	# (2) within page on local bus strobe 1
# c40_idrom_pwait_g0 = 	# (5) outside page on global bus strobe 0
# c40_idrom_pwait_g1 = 	# (5) outside page on global bus strobe 1
# c40_idrom_pwait_l0 = 	# (5) outside page on local bus strobe 0
# c40_idrom_pwait_l1 = 	# (5) outside page on local bus strobe 1

# 33Mhz = 0x203A, 40Mhz = 0x2710, 50Mhz = 0x30d4, 60Mhz = 0x208d
# c40_idrom_timer0_period = 	# (0x2710) timer period value for 1ms interval
# c40_idrom_timer0_ctrl = 	# (0x2c2) contents to set TCLK0 to access RAM

# Setting c40_idrom_timer1_ctrl = 0 disables timer1 auto DRAM refresh
# c40_idrom_timer1_period = 	# (0x80) period for DRAM refresh pulse (option)
# c40_idrom_timer1_ctrl = 	# (0) timer 1 TCR to refresh DRAM (optional)

# These defaults are the same as the C40 uses at reset
# c40_idrom_gbcr = 	# (0x1e39fff0) global bus memory control register
# c40_idrom_lbcr = 	# (0x1e39fff0) local bus memory control register


# end of host.con
@
