head	1.8;
access;
symbols
	Helios_1_3_1:1.8
	Helios_C40_1_3_Official_Release:1.7
	Helios-C40:1.7
	Alenia_release:1.4
	Helios1_3:1.4
	C40_Field_Test_2:1.4
	C40_Field_Test_R1:1.3
	Helios13_beta:1.3
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;


1.8
date	93.07.22.11.50.11;	author bart;	state Exp;
branches;
next	1.7;

1.7
date	93.04.01.16.46.01;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	93.03.23.15.31.25;	author bart;	state Exp;
branches;
next	1.5;

1.5
date	93.01.06.12.29.00;	author bart;	state Exp;
branches;
next	1.4;

1.4
date	92.07.06.11.08.04;	author craig;	state Exp;
branches;
next	1.3;

1.3
date	91.10.25.14.29.16;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.09.13.15.02.23;	author martyn;	state Exp;
branches;
next	1.1;

1.1
date	90.11.27.16.44.34;	author alan;	state Exp;
branches;
next	;


desc
@a makefile for the sun helios io server
@


1.8
log
@Long overdue clean-up
@
text
@#
# makefile for helios 3.xxx server for SUN3, SUN4, SUN386 running SunOS
#

# start with the makefile configuration
# 1) specify the host and target hardware
#host     = SUN3
host     = SUN4
#host     = SUN386

# 2) default depends on the host
# On Sun3: xview does not work
default: helios.h server hydra hydramon serverwinsv serverwinxaw

# On Sun4: everything
default: helios.h server hydra hydramon serverwinsv serverwinxv \
	 serverwinxaw

# On Sun386
default: helios.h server hydra hydramon serverwinsv serverwinxaw

# 3) the host controls which link I/O modules are needed
# For Sun3 
#linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o \
#		sun/volvox.o sun/telmat.o sun/hunt.o sun/vc40.o \
#		sun/cpswap.o sun/vy86pid.o
# For Sun4
linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o \
		sun/volvox.o sun/telmat.o sun/hunt.o sun/vc40.o sun/vy86pid.o
# and for Sun386
#linkobjs = sun/linklib.o sun/kpar.o

# 4) normally the server would use C coroutines implemented in terms of
# sun light-weight-processes. These do not work under SunOS 4.0,
# so an assembler coroutine library for the Sun3 only is available as
# an alternative 
colibobjs = sun/colib.o
colib_link = sun/colib.o -ltermcap -llwp

#colibobjs = sun/coasm.o 
#colib_link = -Bstatic sun/coasm.o -ltermcap -lX11

# 5) miscellaneous macros
sys      = /usr/include
header   = barthdr
mycc     = cc -c -pipe -D$(host)
mylink   = cc -Bstatic

# these files compile for all the hardware
servobjs = server.o files.o devices.o tload.o cofuns.o \
	debug.o terminal.o linkio.o tcp.o sun/sunlocal.o


server: $(servobjs) $(linkobjs) $(colibobjs)
	$(mylink) -o server $(servobjs) $(linkobjs) $(colib_link)

hydra : sun/hydra.o $(linkobjs)
	$(mylink) -o hydra sun/hydra.o $(linkobjs)

hydramon : sun/hydramon.o
	$(mylink) -o hydramon sun/hydramon.o -Bstatic

serverwinsv: sun/serversv.c
	$(mycc) sun/serversv.c 
	mv serversv.o sun
	$(mylink) -o serverwinsv sun/serversv.o -lsuntool -lsunwindow -lpixrect

# These cannot be built statically, problems with libraries
serverwinxv: sun/serverxv.c
	$(mycc) sun/serverxv.c 
	mv serverxv.o sun
	cc -o serverwinxv sun/serverxv.o -lxview -lX11 -lolgx

serverwinxaw: sun/serverxaw.c
	$(mycc) sun/serverxaw.c 
	mv serverxaw.o sun
	cc -o serverwinxaw sun/serverxaw.o -lXaw -lXt -lXmu -lXext -lX11 -ltermcap

# Release notes. The main release should contain the following files:
#
# server.sun3 hydra.sun3 hydramon.sun3 serverwinsv.sun3 serverwinxaw.sun3
# server.sun4 hydra.sun4 hydramon.sun4 serverwinsv.sun4 serverwinxaw.sun4 
# serverwinxv.sun4
#
# The Sun386 release should contain:
# server.sun386 hydra.sun386 hydramon.sun386 serverwinsv.sun386
#
# In addition all Unix releases should contain suitable host.con files
#

tload.o: tload.c $(header)
	$(mycc) tload.c

server.o: server.c $(header) sccs.h fundefs.h \
	server.h defines.h
	$(mycc) server.c

files.o:       files.c   $(header)
	$(mycc) files.c

devices.o: devices.c $(header)
	$(mycc) devices.c

cofuns.o:     cofuns.c $(header)
	$(mycc) cofuns.c

debug.o : debug.c $(header)
	$(mycc) debug.c

terminal.o: terminal.c $(header)
	$(mycc) terminal.c

tcp.o: tcp.c $(header)
	$(mycc) tcp.c

linkio.o : linkio.c $(header)
	$(mycc) linkio.c

sun/sunasm.o : sun/sunasm.s $(header)
	as -o sun/sunasm.o sun/sunasm.s

sun/colib.o : sun/colib.c $(header)
	$(mycc) -DLWP sun/colib.c
	mv colib.o $@@

sun/sunlocal.o : sun/sunlocal.c $(header)
	$(mycc) sun/sunlocal.c
	mv sunlocal.o $@@

sun/linklib.o : sun/linklib.c $(header) 
	$(mycc) sun/linklib.c
	mv linklib.o $@@

sun/niche.o : sun/niche.c $(header)
	$(mycc) sun/niche.c
	mv niche.o $@@

sun/telmat.o : sun/telmat.c $(header)
	$(mycc) -Isun sun/telmat.c
	mv telmat.o $@@

sun/volvox.o : sun/volvox.c $(header)
	$(mycc) sun/volvox.c
	mv volvox.o $@@

sun/b011.o : sun/b011.c $(header)
	$(mycc) sun/b011.c
	mv b011.o $@@

sun/b014.o : sun/b014.c $(header)
	$(mycc) sun/b014.c
	mv b014.o $@@

sun/b016.o : sun/b016.c $(header)
	$(mycc) sun/b016.c
	mv b016.o $@@

sun/kpar.o : sun/kpar.c $(header)
	$(mycc) sun/kpar.c
	mv kpar.o $@@

sun/hunt.o : sun/hunt.c $(header)
	$(mycc) sun/hunt.c
	mv hunt.o $@@

sun/vc40.o : sun/vc40.c $(header) sml.h smlgen.c
	$(mycc) -I. -Isun sun/vc40.c
	mv vc40.o $@@

sun/cpswap.o : sun/cpswap.s $(header)
	as -o sun/cpswap.o sun/cpswap.s

sun/vy86pid.o : sun/vy86pid.c $(header)
	$(mycc) sun/vy86pid.c
	mv vy86pid.o $@@

sun/hydra.o : sun/hydra.c $(header)
	$(mycc) sun/hydra.c
	mv hydra.o $@@

sun/hydramon.o : sun/hydramon.c $(header)
	$(mycc) sun/hydramon.c
	mv hydramon.o $@@

#
# The order of the header files is important. First I incorporate all the
# C header files. Then comes Defines.h to specify the environment in which the
# server is meant to run, which must come before any of the remaining headers.
# Barthdr declares some miscellaneous odds and ends. Next come all the helios
# header files from directory servinc. Finally the server's private header
# files, including the local one. structs.h declares the server's data
# structures and macros, fundefs declares the functions shared between modules,
# and server.h declares the shared variables.
#
helios.h: barthdr defines.h structs.h fundefs.h server.h debugopt.h \
		sun/sunlocal.h
	cat $(sys)/stdio.h $(sys)/sys/types.h $(sys)/ctype.h $(sys)/setjmp.h \
	$(sys)/sys/time.h $(sys)/errno.h $(sys)/sys/socket.h \
	$(sys)/sys/times.h $(sys)/signal.h $(sys)/fcntl.h \
	$(sys)/unistd.h $(sys)/sys/stat.h $(sys)/sys/param.h \
	$(sys)/sys/file.h $(sys)/memory.h $(sys)/sys/vfs.h \
	$(sys)/netinet/in.h $(sys)/netdb.h $(sys)/sys/un.h \
	$(sys)/dirent.h  $(sys)/termio.h $(sys)/pwd.h $(sys)/sys/wait.h \
	sun/sunlocal.h \
	defines.h barthdr protocol.h \
	structs.h fundefs.h server.h debugopt.h \
	> helios.h

@


1.7
log
@VC40 support added.
@
text
@d2 1
a2 1
# makefile for helios 3.8x server for SUN3, SUN4, SUN386
d7 2
a8 2
host     = SUN3
#host     = SUN4
d11 19
a29 4
# 2) the host controls which link I/O modules are needed
# For Sun3 and Sun4
linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o sun/volvox.o sun/telmat.o \
		sun/hunt.o sun/vc40.o sun/cpswap.o sun/vy86pid.o
d33 1
a33 1
# 3) normally the server would C coroutines implemented in terms of
d38 2
a39 2
#colib_link = -Bstatic sun/colib.o -ltermcap -llwp -lX11
colib_link = -Bstatic sun/colib.o -ltermcap -llwp
d43 1
a43 1
# miscellaneous macros
d46 2
a47 1
mycc     = cc -c -pipe -D$(host) -DETC_DIR
d51 1
a51 1
	debug.o terminal.o linkio.o tcp.o sun/sunlocal.o # x.o
a52 2
default : helios.h server #hydra sun/serverwinsv.sun3 hydramon #sun/serverwinxv.sun3 
#default : helios.h server hydra sun/serverwinsv.sun4 hydramon sun/serverwinxv.sun4 
d55 1
a55 1
	cc -o server $(servobjs) $(linkobjs) $(colib_link)
d58 1
a58 1
	cc -o hydra sun/hydra.o $(linkobjs)
d61 1
a61 1
	cc -o hydramon sun/hydramon.o
d63 1
a63 5
#sun/serverwindow.sun386 : sun/serverwi.c $(header)
#	$(mycc) sun/serverwi.c 
#	mv serverwi.o sun
#	cc -o sun/serverwindow.sun386 sun/serverwi.o -lsuntool -lsunwindow -lpixrect
sun/serverwinsv.sun4 : sun/serversv.c $(header)
d66 4
a69 3
	cc -o sun/serverwinsv.sun4 sun/serversv.o -lsuntool -lsunwindow -lpixrect
 
sun/serverwinxv.sun4 : sun/serverxv.c $(header)
d72 11
a82 24
	cc -o sun/serverwinxv.sun4 sun/serverxv.o -lxview -lX11 -lolgx
 
sun/serverwinsv.sun3 : sun/serversv.c $(header)
	$(mycc) sun/serversv.c 
	mv serversv.o sun
	cc -o sun/serverwinsv.sun3 sun/serversv.o -lsuntool -lsunwindow -lpixrect
 
#sun/serverwinxv.sun3 : sun/serverxv.c $(header)
#	$(mycc) sun/serverxv.c 
#	mv serverxv.o sun
#	cc -o sun/serverwinxv.sun3 sun/serverxv.o -lxview -lX11 -lolgx
 
# a complete set of binaries to cope with all the different hardware would be
# Sun3 and Sun4 options will support, Transtech, B011, B014, and B016. If
# I had the code from Parsytec their board(s) would be supported as well.
# server.sun3
# server.sun4
# server.sun386
# hydra.sun3
# hydra.sun4
# hydra.sun386
# hydramon.sun3
# hydramon.sun4
# hydramon.sun386
a83 3
# serverwinsv.sun4
# serverwinsv.sun3
# serverwindow.sun386
d85 5
a114 3

#x.o: x.c $(header)
#	$(mycc) x.c
@


1.6
log
@Added the VY86PID board
@
text
@d7 2
a8 2
#host     = SUN3
host     = SUN4
d14 1
a14 1
		sun/hunt.o sun/vy86pid.o
d31 1
a31 1
mycc     = cc -c -pipe -O1 -D$(host)
d37 2
a38 2
#default : helios.h server hydra sun/serverwinsv.sun3 hydramon #sun/serverwinxv.sun3 
default : helios.h server hydra sun/serverwinsv.sun4 hydramon sun/serverwinxv.sun4 
d168 7
@


1.5
log
@Added support for the Hunt VME and SBUS C40 boards
@
text
@d14 1
a14 1
		sun/hunt.o
d168 4
@


1.4
log
@Changed to incorporate telmat stuff
@
text
@d13 2
a14 1
linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o sun/volvox.o sun/telmat.o
d164 4
@


1.3
log
@upgraded to cater for the 3.88 internet and xview
@
text
@d7 2
a8 2
host     = SUN3
#host     = SUN4
d13 1
a13 1
linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o sun/volvox.o
d34 1
a34 1
	debug.o terminal.o linkio.o tcp.o sun/sunlocal.o        # x.o
d36 2
a37 2
default : helios.h server hydra sun/serverwinsv.sun3 hydramon #sun/serverwinxv.sun3 
#default : helios.h server hydra sun/serverwinsv.sun4 hydramon sun/serverwinxv.sun4 
d141 1
a141 1
	$(mycc) sun/telmat.c
@


1.2
log
@added telmat driver code
@
text
@d7 2
a8 2
#host     = SUN3
host     = SUN4
d13 1
a13 1
linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o sun/telmat.o sun/volvox.o
d34 1
a34 1
	debug.o terminal.o linkio.o sun/sunlocal.o        # x.o
d36 2
a37 2
default : helios.h server hydra sun/serverwindow.sun4
#hydramon sun/serverwindow.sun3
d52 4
a55 8
#sun/serverwindow.sun3 : sun/serverwi.c $(header)
#	$(mycc) sun/serverwi.c 
#	mv serverwi.o sun
#	cc -o sun/serverwindow.sun3 sun/serverwi.o -lsuntool -lsunwindow -lpixrect
sun/serverwindow.sun4 : sun/serverwi.c $(header)
	$(mycc) sun/serverwi.c 
	mv serverwi.o sun
	cc -o sun/serverwindow.sun4 sun/serverwi.o -lsuntool -lsunwindow -lpixrect
d57 15
d84 3
a86 2
# serverwindow.sun4
# serverwindow.sun3
d112 3
d190 1
a190 1
	$(sys)/dirent.h  $(sys)/termio.h $(sys)/pwd.h \
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
linkobjs = sun/linklib.o sun/niche.o sun/b011.o sun/b014.o sun/b016.o sun/volvox.o
d124 4
@
