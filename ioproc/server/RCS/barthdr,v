head	1.6;
access;
symbols
	Helios_1_3_1:1.4
	Helios_C40_1_3_Official_Release:1.4
	Helios-C40:1.4
	Alenia_release:1.4
	Helios1_3:1.4
	C40_Field_Test_2:1.4
	Helios13_beta:1.3
	Helios1_2_1:1.2;
locks; strict;
comment	@# @;


1.6
date	94.07.06.10.44.59;	author mgun;	state Exp;
branches;
next	1.5;

1.5
date	94.06.29.13.55.37;	author tony;	state Exp;
branches;
next	1.4;

1.4
date	92.10.09.12.20.43;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	92.06.19.10.35.15;	author bart;	state Exp;
branches;
next	1.2;

1.2
date	90.10.18.15.27.00;	author alan;	state Exp;
branches;
next	1.1;

1.1
date	90.10.16.16.38.57;	author alan;	state Exp;
branches;
next	;


desc
@A header of Bart's macros etc
@


1.6
log
@Fixed some bugs introduced by Tony's changes
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--          H E L I O S   I N P U T / O U T P U T   S E R V E R         --
--          ---------------------------------------------------         --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
--      barthdr                                                         --
--                                                                      --
--         A header file for all my C programs, containing odds and     --
--                                                                      --
--         ends to turn C into a slightly less useless language.        --
--                                                                      --
--     Author:  BLV 8/10/87                                             --
--                                                                      --
------------------------------------------------------------------------*/
/* RcsId: $Id: barthdr,v 1.5 1994/06/29 13:55:37 tony Exp $ */
/* Copyright (C) 1987, Perihelion Software Ltd.         		*/

typedef long *ptr;
/* RTE : may not be required */
#if (ST || PC || AMIGA || ARMBSD || MEIKORTE || HELIOS)
typedef unsigned int uint;
#endif
#define eq ==
#define ne !=
#define MAXINT 0x7FFFFFFFL

/**
*** This macro takes care of ANSI prototyping for ANSI and for non-ANSI
*** compilers - I hope. Functions can be defined by e.g.
*** extern void fn(xyz, (char *));
*** which expands to
*** extern void xyz (char *);   or
*** extern void xyz();
*** I have checked these macros using 5 different C compilers, and they
*** seem to work fine.
**/
#if ANSI_prototypes
#define fn(a,b) a b
#else
#define fn(a,b) a()
#endif

/**
*** The following macro is designed to get around problems with compilers
*** that complain about variables not being used. If your compiler suffers from
*** the same problem then you can || your defines.h entry with the #if ST
**/

#if (ST || ARMBSD || MEIKORTE || HELIOS)
#define use(a) a=a;
#else
#if (MAC)
#define use(a) #pragma unused (a)
#else
#define use(a)
#endif /*MAC*/
#endif

/**
*** And another macro for compiler problems : func(x) expands to &x if your
*** compiler expects the address of a function to be passed as argument,
*** or to just x otherwise.
***
*** For C++ compilers, which have stricter type checking, I've also
*** placed the cast of the function to VoidFnPtr here as well.
**/
#if (ST || HELIOS)
#define func(x) (&x)
#else
#  ifdef cplusplus
#    define func(x) ((VoidFnPtr)(x))
#  else
#    define func(x) (x)
#  endif
#endif

/**
*** On some machines, tolower and toupper work only  if the character is
*** already uppercase or lowercase respectively. On others the library bothers
*** to check. The following takes care of this bit of nastiness.
**/

#if (PC)
        /* Microsoft C 5.0 library does it for me */
#define ToLower(x) tolower(x)
#define ToUpper(x) toupper(x)

#else

#ifdef Server_Module

#if ANSI_prototypes
int ToLower (int x)
#else
int ToLower(x)
int x;
#endif
{ return(isupper(x) ? tolower(x) : x);
}

#if ANSI_prototypes
int ToUpper (int x)
#else
int ToUpper(x)
int x;
#endif
{ return(islower(x) ? toupper(x) : x);
}

#else

extern int fn(ToLower, (int));
extern int fn(ToUpper, (int));

#endif /* Server_Module */

#endif

/**
*** Mark Williams C does not support memcpy...
**/
#if (ST)

#ifdef Server_Module
void memcpy(dest, source, count)
char *dest, *source;
int count;
{ for ( ; count > 0; count--) *dest++ = *source++;
}

void memmove(dest, source, count)
char *dest, *source;
int count;
{ if (dest < source)
   for ( ; count > 0; count--) *dest++ = *source++;
  else
    for (dest += count, source += count;  count > 0; count--)
      *(--dest) = *(--source);
}

void memset(dest, val, count)
char *dest;
int val, count;
{ for ( ; count > 0; count--) *dest++ = val;
}

#else
extern void fn(memcpy, (char *dest, char *source, int count));
extern void fn(memmove, (char *dest, char *source, int count));
extern void fn(memset, (char *dest, int val, int count));
#endif /* Server_Module */
#endif /* ST */

#if (SUN || ARMBSD)
  /* These have memcpy() and memset(), but not memmove() ... */
#if (!SOLARIS)
  /* ... which does */
#define memmove(a, b, c) bcopy(b,a,c)
#endif
#endif

#if i486V4
#define bcopy(x, y, l) memcpy(y, x, l)
#define bzero(x, l) memset(x, 0, l)
#endif

#if (PC)
extern long fn( divlong, (long, long));
#else
#define divlong(a, b) (a) / (b)
#endif

@


1.5
log
@Solaris support added
@
text
@d18 1
a18 1
/* RcsId: $Id: barthdr.h,v 1.1 1994/06/29 13:42:25 tony Exp $ */
d73 1
a73 1
#  if ANSI_prototypes
@


1.4
log
@added support for i486 System V.4
@
text
@d18 1
a18 1
/* RcsId: $Id: barthdr,v 1.3 1992/06/19 10:35:15 bart Exp $ */
d41 1
a41 1
#define fn(a, b) a b
d43 1
a43 1
#define fn(a, b) a()
d66 3
d73 5
a77 1
#define func(x) (x)
d95 3
d100 1
d104 3
d109 1
d158 3
a160 1
  /* These have memcpy() and memset(), but not memmove() */
d162 1
@


1.3
log
@Major upgrade to V3.91 :
 1) includes C40 support
 2) now compiles for Helios and for Windows
@
text
@d18 1
a18 1
/* RcsId: $Id: barthdr,v 1.1 1992/06/02 08:37:11 craig Exp $ */
d145 5
@


1.2
log
@add MAC bits
@
text
@d18 1
a18 1
/* RcsId: $Id: barthdr,v 1.1 90/10/16 16:38:57 alan Exp Locker: alan $ */
d23 1
a23 1
#if (ST || PC || AMIGA || ARMBSD || MEIKORTE)
d52 1
a52 1
#if (ST || ARMBSD || MEIKORTE)
d67 1
a67 1
#if ST
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
/* RcsId: $Id$ */
d55 3
d59 1
@
