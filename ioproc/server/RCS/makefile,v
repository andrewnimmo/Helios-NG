head	1.23;
access;
symbols
	Helios_1_3_1:1.22
	Helios_C40_1_3_Official_Release:1.18
	Helios-C40:1.18
	Alenia_release:1.14
	Helios1_3:1.14
	C40_Field_Test_2:1.14
	Helios13_beta:1.13
	Helios1_2_1:1.6;
locks; strict;
comment	@# @;


1.23
date	94.01.06.15.19.22;	author nickc;	state Exp;
branches;
next	1.22;

1.22
date	93.09.28.14.23.40;	author bart;	state Exp;
branches;
next	1.21;

1.21
date	93.07.22.15.46.06;	author bart;	state Exp;
branches;
next	1.20;

1.20
date	93.05.21.10.35.40;	author bart;	state Exp;
branches;
next	1.19;

1.19
date	93.05.13.11.33.00;	author bart;	state Exp;
branches;
next	1.18;

1.18
date	93.04.23.15.18.24;	author nick;	state Exp;
branches;
next	1.17;

1.17
date	93.03.23.15.47.07;	author bart;	state Exp;
branches;
next	1.16;

1.16
date	93.01.15.12.50.21;	author bart;	state Exp;
branches;
next	1.15;

1.15
date	93.01.06.12.37.04;	author bart;	state Exp;
branches;
next	1.14;

1.14
date	92.10.19.09.50.28;	author martyn;	state Exp;
branches;
next	1.13;

1.13
date	92.03.06.11.38.28;	author martyn;	state Exp;
branches;
next	1.12;

1.12
date	91.09.13.15.00.56;	author martyn;	state Exp;
branches;
next	1.11;

1.11
date	91.08.06.14.39.26;	author martyn;	state Exp;
branches;
next	1.10;

1.10
date	91.07.30.10.36.14;	author martyn;	state Exp;
branches;
next	1.9;

1.9
date	91.05.07.11.31.16;	author martyn;	state Exp;
branches;
next	1.8;

1.8
date	91.04.03.15.57.30;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	91.04.03.15.53.45;	author martyn;	state Exp;
branches;
next	1.6;

1.6
date	91.04.03.10.34.57;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.03.14.19.47.04;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.03.12.15.16.50;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	91.03.08.15.06.34;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.03.08.12.58.02;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	91.03.06.10.51.53;	author alan;	state Exp;
branches;
next	;


desc
@Generic GNUMake makefile
@


1.23
log
@added rules to detect unbuild/out-of-date SUN binaries
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC (NATIVE) COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: server
#
# File: /HSRC/ioproc/server/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.22 1993/09/28 14:23:40 bart Exp nickc $
#		(C) Copyright 1990 - 1994 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
#ifndef HPROC
#nclude ../makeinc/DFLT.mak
#endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HHOST)

.DEFAULT:
	@@$(MAKE) -C $(HHOST) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)

COMPONENT = ioproc/server#
SRCHOME   = $(HSRC)/$(COMPONENT)#

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables

# Manditory phoney targets
.PHONY: default clean install Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.

HVPATH := $(HSRC)/$(COMPONENT):$(HSRC)/$(COMPONENT)/sun

ifdef RSRC
 HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)
vpath %.s $(HVPATH)

#
# These are some special rules to cope with the fact that
# although we build the Helios binaries on an RS6000 we
# ship out SUN versions of the IO server's window program
# To add new SUN4 binaries, add the name of the file to
# the Sun4Binaries variable below.  Similarly a SUN3 binary
# should be added to the Sun3Binaries variable.
#
# A quick word about the GNU make specials used below
# $(<F) expands to the file name of the first dependency
# so for example
#
#   target: dir/depend1 dir/depend2
#       echo $(<F)
#
# would echo 'depend1'.
#
# A target of the form 
#     <target names> : <pattern1> : <pattern2>
# says that the following rules should be applied to all of the targets
# in <target names> provided that they match the wildcard string <pattern1>.
# An occurance of % in <pattern1> is a wildcard operator, matching any string.
# If % occurs in <pattern2> it is replaced by the string it represents in
# <pattern1>.  When the rule executes $@@ (the target) is <pattern1> and $^
# (the dependencies) is <pattern2>.  So for example
#
#   dir/fred dir/jim dir/bert : dir/% : src/%
#        echo cp $@@ $^
#
# is the equivalent of
#
#    dir/fred : src/fred
#        echo di dir/fred src/fred
#    dir/jim  : src/jim
#        echo cp dir/jim src/jim
#    dir/bert  : src/bert
#        echo cp dir/bert src/bert
#

Sun4Binaries := serverwinxv serverwinsv serverwinxaw serverwinxt hydra hydramon server
Sun3Binaries := serverwinxv serverwinxaw serverwinxt hydra hydramon server

Sun4DependantBinaries := $(addprefix $(HPROD)/, $(addsuffix .sun4, $(Sun4Binaries) ) )
Sun3DependantBinaries := $(addprefix $(HPROD)/, $(addsuffix .sun3, $(Sun3Binaries) ) )

$(SRCHOME)/SUN4/$(Sun4Binaries):
$(SRCHOME)/SUN3/$(Sun3Binaries):

# ideally we should perform a remote make of these files ...
$(Sun4DependantBinaries) : $(HPROD)/%.sun4 : $(SRCHOME)/SUN4/%
	@@ echo ERROR: SUN4/$(<F) is not up to date.  Please log on to Sparky and rebuild
	@@ false

$(Sun3DependantBinaries) : $(HPROD)/%.sun3 : $(SRCHOME)/SUN3/%
	@@ echo ERROR: SUN3/$(<F) is not up to date.  Please log on to Sparky and rebuild
	@@ false

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
# The actual targets are always machine-specific

TARGETS =

default : $(TARGETS) Xdefault
install	: $(TARGETS) Xinstall $(Sun3DependantBinaries) $(Sun4DependantBinaries)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install Xinstall helios.h *.o

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources (used by main makefile srctar)
SOURCES		= $(SOURCES.c) $(HEADERS.c) $(SOURCES.odd)

# C source files:
SOURCES.c =	server.c terminal.c tload.c cofuns.c debug.c gem.c \
		linkio.c devices.c files.c tcp.c smlgen.c

# C header files:
HEADERS.c =	barthdr debugopt.h defines.h fundefs.h protocol.h \
		sccs.h server.h structs.h sml.h

GENHEADERS.c =	../defines.h ../protocol.h ../barthdr ../debugopt.h \
		../structs.h ../fundefs.h ../server.h

# Any other source files:
SOURCES.odd	= makefile

HOSTCFLAGS := -I$(HSRC)/$(COMPONENT)

# The generic server bits

SERVOBJ	= server.o files.o devices.o tcp.o tload.o cofuns.o \
		  debug.o terminal.o linkio.o

# all unix like hosts use sunlocal.o

ifneq (,$(findstring $(HHOST), SUN4 SUN3 SUN386 SM90 UNIX386 R140 I486V4 RS6000 HP9000))
   SERVOBJ := $(SERVOBJ) sunlocal.o
endif

# link objects

ifneq (,$(findstring $(HHOST), SUN4 SUN3))
  LINKOBJS := linklib.o \
	     niche.o \
	     b011.o \
	     b014.o \
	     b016.o \
	     telmat.o \
	     volvox.o \
	     hunt.o \
	     vc40.o \
	     vy86pid.o
# Sun I/O Servers built by Perihelion and Parsytec include support
# for the Parsytec boards.
  ifeq ( $(HLICENSEE), PARSYTEC)
        LINKOBJS := $(LINKOBJS) parsy.o par_link.o
        HOSTCFLAGS := $(HOSTCFLAGS) -DPARSY -DHELIOS_IOSERVER
  endif
  ifneq (,$(findstring $(HLICENSEE), PERIHELION))
        LINKOBJS := $(LINKOBJS) parsy.o par_link.o
        HOSTCFLAGS := $(HOSTCFLAGS) -DPARSY -DHELIOS_IOSERVER
  endif
endif

ifeq ($(HHOST),SUN3)
  LINKOBJS := $(LINKOBJS) cpswap.o
endif

ifneq (,$(findstring $(HHOST), SM90 UNIX386 R140 I486V4 RS6000 HP9000))
  LINKOBJS := linklib.o 
endif

ifeq ( $(HHOST), SUN386)
  LINKOBJS := linklib.o kpar.o
endif

ifeq ( $(HHOST), SCOUNIX)
  LINKOBJS := linklib.o kparix.o
endif

ifeq ( $(HHOST), I486V4)
  LINKOBJS := linklib.o hepc2.o
endif

# hydra

HYDRAOBJ   = hydra.o

# hydra monitor

HYDRAMON   = hydramon.o
	

#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required



#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

iopsrcnames:
	@@echo $(foreach FILE, $(SOURCES), $(COMPONENT)/$(FILE)) >> $(HSRC)/backedupsrcs

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.22
log
@Added support for Parsytec's Sun boards
@
text
@d13 2
a14 3
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.21 1993/07/22 15:46:06 bart Exp bart $
#		(C) Copyright 1990 Perihelion Software
d70 57
d136 1
a136 2

install	: $(TARGETS) Xinstall
a142 1

d190 1
a190 1
# Sun I/O Servers build by Perihelion and Parsytec include support
@


1.21
log
@Added support for HP9000, RS6000 etc.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.20 1993/05/21 10:35:40 bart Exp bart $
d136 10
@


1.20
log
@Added sml modules
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.19 1993/05/13 11:33:00 bart Exp bart $
d105 1
a105 1
		../structs.h ../fundefs.h ../server.h ../sml.h
a113 2
server.o : sccs.h

d119 1
a119 1
ifneq (,$(findstring $(HHOST), SUN4 SUN3 SUN386 SM90 UNIX386 R140 I486V4))
d142 1
a142 1
ifneq (,$(findstring $(HHOST), SM90 UNIX386 R140 I486V4))
d146 1
a146 1
ifeq ( $(HHOST), SUN386 )
d150 5
a154 1
ifeq ( $(HHOST), I486V4 )
@


1.19
log
@Added support for new module cpswap.s
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.18 1993/04/23 15:18:24 nick Exp bart $
d98 1
a98 1
		linkio.c devices.c files.c tcp.c
d102 1
a102 1
		sccs.h server.h structs.h
d105 1
a105 1
		../structs.h ../fundefs.h ../server.h 
@


1.18
log
@vc40.o added
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.17 1993/03/23 15:47:07 bart Exp nick $
d69 1
d138 4
@


1.17
log
@Added the VY86PID board
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.16 1993/01/15 12:50:21 bart Exp bart $
d109 1
d135 1
d164 2
@


1.16
log
@By default building the I/O Server should be a no-op. The host-specific
makefile should use XTargets if anything has to be done. This is
because the I/O Server has not been ported to all the platforms used
for cross-compilation.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.15 1993/01/06 12:37:04 bart Exp bart $
d133 2
a134 1
	     hunt.o
@


1.15
log
@Added hunt.o file for Hunt VME and SBUS C40 boards
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.14 1992/10/19 09:50:28 martyn Exp bart $
d74 1
a74 5
ifeq ($(HHOST),R140)
 TARGETS = aserver hydra hydramon
else
 TARGETS = server hydra hydramon serverwinxv serverwinsv
endif
d76 2
a80 3
ifeq ($(HHOST),R140)
	$(CP) $(TARGETS) $(HHOSTBIN)
endif
@


1.14
log
@host.con stuff moved to /hsrc/text, I486V4 added.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.13 1992/03/06 11:38:28 martyn Exp martyn $
d137 2
a138 1
	     volvox.o 
@


1.13
log
@removed space after backslash
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.12 1991/09/13 15:00:56 martyn Exp $
d112 1
a112 1
SOURCES.odd	= makefile hostcon.pc hostcon.dft
d124 1
a124 1
ifneq (,$(findstring $(HHOST), SUN4 SUN3 SUN386 SM90 UNIX386 R140))
d140 1
a140 1
ifneq (,$(findstring $(HHOST), SM90 UNIX386 R140))
d146 4
@


1.12
log
@added telmat driver
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 1991/08/06 14:39:26 martyn Exp martyn $
d136 1
a136 1
	     telmat.o \ 
@


1.11
log
@added new xview stuff
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1991/07/30 10:36:14 martyn Exp martyn $
d136 1
@


1.10
log
@added internet support
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 1991/05/07 11:31:16 martyn Exp $
d77 1
a77 1
 TARGETS = server hydra hydramon serverwindow
@


1.9
log
@get header order correct
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1991/04/03 15:57:30 martyn Exp $
d102 1
a102 1
		linkio.c devices.c files.c
d119 1
a119 1
SERVOBJ	= server.o files.o devices.o tload.o cofuns.o \
@


1.8
log
@added host.con for pc and unix
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1991/04/03 15:53:45 martyn Exp martyn $
d108 1
a108 1
GENHEADERS.c =	../protocol.h ../barthdr ../debugopt.h ../defines.h \
@


1.7
log
@added host.con to sources.misc
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1991/04/03 10:34:57 martyn Exp $
d112 1
a112 1
SOURCES.odd	= makefile host.con
@


1.6
log
@correctly ordered include files.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1991/03/14 19:47:04 paul Exp martyn $
d112 1
a112 1
SOURCES.odd	= makefile
@


1.5
log
@quick fixes to make it work with old R140 makefile
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/12 15:16:50 martyn Exp $
d108 2
a109 2
GENHEADERS.c =	../barthdr ../debugopt.h ../defines.h ../fundefs.h \
		../protocol.h ../sccs.h ../server.h ../structs.h
@


1.4
log
@fixed SOURCES rule
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/03/08 15:06:34 martyn Exp $
d74 5
a78 1
TARGETS = server hydra hydramon serverwindow
d83 3
a85 1
#	$(CP) $(TARGETS) $(BIN)
d90 1
a90 1
		core ../mkout install Xinstall
@


1.3
log
@added GENHEADERS, removed installdef
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/03/08 12:58:02 paul Exp Locker: martyn $
d92 1
a92 3
SOURCES		= $(SOURCES.c)
		  $(HEADERS.c)
		  $(SOURCES.odd)
@


1.2
log
@added iopsrcnames rule to hepl tar the generic IO Server sources.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 91/03/06 10:51:53 alan Exp Locker: paul $
d78 1
a78 1
install	: installdef $(TARGETS) Xinstall
d84 1
a84 1
		core ../mkout install installdef Xinstall
d103 3
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: generic.template,v 1.1 91/02/12 17:11:17 nick Exp $
a53 1
# "installdef" - If component is a library, make .def file and install in LIB
d63 1
a63 1
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
d80 1
a80 1
#	$(TOUCH) install
a81 4
installdef:	# If this is a library, enter all .def files here (to install)
#	$(CP) $^ $(LIB)
#	$(TOUCH) installdef

d91 4
a94 8
# Note all sources
SOURCES		= $(SERVOBJ:.o=.c) \
		  $(HYDRAOBJ:.o=.c) \
		  $(HYDRAMONOBJ:.o=.c) \
		  $(HEADERS.c) \
		  $(SOURCES.odd) \
		  $(LINKOBJS:.o=.c) \
		  $(XSOURCES)
d96 3
d100 8
a147 1
# C header files
a148 15
HEADERS.c	=  $(SRCHOME)/defines.h \
                   $(SRCHOME)/barthdr \
		   $(SRCHOME)/protocol.h \
		   $(SRCHOME)/structs.h \
		   $(SRCHOME)/fundefs.h \
		   $(SRCHOME)/server.h \
		   $(SRCHOME)/debugopt.h 
		   


# Any other source files

SOURCES.odd	= makefile


d157 2
a158 7
# uncomment if you have compiler or makedepend generated dependencies
#include depends





@
