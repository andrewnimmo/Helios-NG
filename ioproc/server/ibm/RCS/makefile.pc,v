head	1.12;
access;
symbols
	Helios_1_3_1:1.11
	Helios_C40_1_3_Official_Release:1.10
	Helios-C40:1.10
	Alenia_release:1.6
	Helios1_3:1.6
	C40_Field_Test_2:1.6
	C40_Field_Test_R1:1.4
	Helios13_beta:1.3
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;


1.12
date	94.07.06.10.47.45;	author mgun;	state Exp;
branches;
next	1.11;

1.11
date	93.09.29.11.00.40;	author bart;	state Exp;
branches;
next	1.10;

1.10
date	93.04.30.11.12.14;	author bart;	state Exp;
branches;
next	1.9;

1.9
date	93.04.23.15.27.24;	author bart;	state Exp;
branches;
next	1.8;

1.8
date	93.03.23.14.41.46;	author bart;	state Exp;
branches;
next	1.7;

1.7
date	93.03.10.15.39.46;	author bart;	state Exp;
branches;
next	1.6;

1.6
date	92.07.29.16.13.56;	author bart;	state Exp;
branches;
next	1.5;

1.5
date	92.07.08.16.16.01;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.06.30.10.25.40;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	92.05.05.10.31.25;	author craig;	state Exp;
branches;
next	1.2;

1.2
date	92.05.04.19.28.22;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	90.10.18.11.22.10;	author alan;	state Exp;
branches;
next	;


desc
@makefile for pc
@


1.12
log
@Fixes for sang fifo link code
@
text
@#
# Makefile for the Helios input/output server on an IBM PC or compatible
#
include  = /I. /Ic:\include
headers  = barthdr 
MFLAGS   = $(include) /AL /c /Gs /W2 /Olnot /nologo /G1
DEFINES = /DPC
INCDIR  = c:\c700\include

.c.obj :
	cl $(MFLAGS) $(DEFINES) /Fo$*.obj $*.c

.asm.obj :
	MASM $*,$*.obj,NUL,NUL

default : server.exe
	echo OK

# the Helios IO server
server.exe : helios.h server.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
	     terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
	     ibm\ether.obj ibm\spirit40.obj ibm\spiritas.obj \
	     ibm\vy86pid.obj ibm\qpc.obj ibm\qpcas.obj ibm\sangc40.obj
		   link @@ibm\link.lnk

#
# concatenate all the header files to produce just one, preferably held in
# ram disk. This almost doubles the speed of compilation
#
helios.h: barthdr defines.h structs.h fundefs.h server.h debugopt.h
	type >$@@  $(INCDIR)\stdio.h
	type >>$@@ $(INCDIR)\errno.h
	type >>$@@ $(INCDIR)\time.h
	type >>$@@ $(INCDIR)\ctype.h
	type >>$@@ $(INCDIR)\dos.h
	type >>$@@ $(INCDIR)\direct.h
	type >>$@@ $(INCDIR)\bios.h
	type >>$@@ $(INCDIR)\string.h
	type >>$@@ $(INCDIR)\setjmp.h
	type >>$@@ $(INCDIR)\stdlib.h
	type >>$@@ $(INCDIR)\io.h
	type >>$@@ $(INCDIR)\stdarg.h
	type >>$@@ $(INCDIR)\conio.h
	type >>$@@ defines.h
	type >>$@@ barthdr
	type >>$@@ protocol.h
	type >>$@@ structs.h
	type >>$@@ fundefs.h
	type >>$@@ server.h
	type >>$@@ debugopt.h
	type >>$@@ ibm\pclocal.h

server.obj :            server.c $(headers) sccs.h
files.obj :             files.c   $(headers)
devices.obj :           devices.c $(headers)
cofuns.obj :            cofuns.c $(headers)
tload.obj :             tload.c  $(headers)
debug.obj         :     debug.c $(headers)
terminal.obj :          terminal.c $(headers)
gem.obj      :          gem.c   $(headers)
linkio.obj :            linkio.c $(headers)
ibm\pclocal.obj :       ibm\pclocal.c $(headers)
ibm\ether.obj :         ibm\ether.c $(headers)
ibm\spirit40.obj :      ibm\spirit40.c $(headers)
ibm\vy86pid.obj :       ibm\vy86pid.c $(headers)
ibm\qpc.obj :           ibm\qpc.c $(headers)

ibm\qpcas.obj : ibm\qpcas.cpp $(headers)
	cl /EP /P /DPC ibm\qpcas.cpp
	masm qpcas.i,ibm\qpcas.obj,NUL,NUL

ibm\sangc40.obj :       ibm\sangc40.c $(headers)
	cl $(MFLAGS) $(DEFINES) /G2 /Fo$*.obj $*.c

ibm\pcasm.obj :         ibm\pcasm.cpp $(headers)
	cl /EP /P /DPC ibm\pcasm.cpp
	masm pcasm.i,ibm\pcasm.obj,NUL,NUL

ibm\spiritas.obj :      ibm\spiritas.cpp $(headers)
	cl /EP /P /DPC ibm\spiritas.cpp
	masm spiritas.i,ibm\spiritas.obj,NUL,NUL

#
# A special server for demonstration purposes, which stops after
# ten minutes or so and does not allow writing to files
#
demoserv.exe : helios.h dserver.obj dfiles.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
	     terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj
		   link @@ibm\dlink.lnk

dserver.obj :           server.c $(headers) sccs.h
	cl $(MFLAGS) $(DEFINES) /DDEMONSTRATION /Fodserver.obj server.c
dfiles.obj :            files.c $(headers)
	cl $(MFLAGS) $(DEFINES) /DDEMONSTRATION /Fodfiles.obj files.c

#
# A special server for the Racal-Redac system, supported by Gemini
#
rr_serv.exe : helios.h rserver.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
	     terminal.obj gem.obj ibm\rrlocal.obj ibm\pcasm.obj \
	     gemini\rrlock.obj
		   link @@gemini\rrlink.lnk

rserver.obj :   server.c $(headers) sccs.h
	cl $(MFLAGS) $(DEFINES) /DGEMINI /Forserver.obj server.c

ibm\rrlocal.obj : ibm\pclocal.c $(headers)
	cl $(MFLAGS) $(DEFINES) /DGEMINI /Foibm\rrlocal.obj ibm\pclocal.c

gemini\rrlock.obj : gemini\rrlock.asm

#
# A server which incorporates a device for the synergy board,
# for Leeds General Infirmary
#
synserv.exe : synserv.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
	     terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
	     synergy\synergy.obj synergy\synasm.obj
		   link @@synergy\link.lnk

synergy\synergy.obj :   synergy\synergy.c
synergy\synasm.obj :    synergy\synasm.asm

synserv.obj :           server.c synergy\synergy.h $(headers)
	cl $(MFLAGS) /DPC /DSYNERGY /Fosynserv.obj server.c


@


1.11
log
@major update for another source release
@
text
@d6 1
a6 1
MFLAGS   = $(include) /AL /c /Gs /W2 /Olnot /nologo
d8 1
a8 1
INCDIR	= c:\include
d22 1
a22 1
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
d25 1
a25 1
	     	   link @@ibm\link.lnk
d54 8
a61 8
server.obj :     	server.c $(headers) sccs.h
files.obj :       	files.c   $(headers)
devices.obj : 		devices.c $(headers)
cofuns.obj :       	cofuns.c $(headers)
tload.obj :		tload.c  $(headers)
debug.obj	  : 	debug.c $(headers)
terminal.obj :		terminal.c $(headers)
gem.obj      :     	gem.c   $(headers)
d63 5
a67 5
ibm\pclocal.obj :  	ibm\pclocal.c $(headers)
ibm\ether.obj : 	ibm\ether.c $(headers)
ibm\spirit40.obj : 	ibm\spirit40.c $(headers)
ibm\vy86pid.obj : 	ibm\vy86pid.c $(headers)
ibm\qpc.obj : 		ibm\qpc.c $(headers)
d69 1
a69 1
ibm\qpcas.obj :	ibm\qpcas.cpp $(headers)
d73 1
a73 1
ibm\sangc40.obj :	ibm\sangc40.c $(headers)
d76 1
a76 1
ibm\pcasm.obj :		ibm\pcasm.cpp $(headers)
d80 1
a80 1
ibm\spiritas.obj :	ibm\spiritas.cpp $(headers)
d90 2
a91 2
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj
	     	   link @@ibm\dlink.lnk
d93 1
a93 1
dserver.obj :		server.c $(headers) sccs.h
d95 1
a95 1
dfiles.obj :		files.c $(headers)
d103 1
a103 1
             terminal.obj gem.obj ibm\rrlocal.obj ibm\pcasm.obj \
d105 1
a105 1
	     	   link @@gemini\rrlink.lnk
d107 1
a107 1
rserver.obj :	server.c $(headers) sccs.h
d121 1
a121 1
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
d123 1
a123 1
	     	   link @@synergy\link.lnk
d125 2
a126 2
synergy\synergy.obj :	synergy\synergy.c
synergy\synasm.obj :	synergy\synasm.asm
d128 1
a128 1
synserv.obj : 		server.c synergy\synergy.h $(headers)
@


1.10
log
@Added qpcas.cpp module
@
text
@d1 131
a131 134
#
# Makefile for the Helios input/output server on an IBM PC or compatible
#
include  = /I. /Ic:\include
headers  = barthdr 
#MFLAGS   = $(include) /AL /c /Gs /W2 /Oolsn /nologo
MFLAGS   = $(include) /AL /c /Gs /W2 /Olnot /nologo
#DEFINES = /DPC /DSMALL
DEFINES = /DPC
#INCDIR	= c:\include
INCDIR	= f:\apps\c700\include

.c.obj :
	cl $(MFLAGS) $(DEFINES) /Fo$*.obj $*.c

.asm.obj :
	MASM $*,$*.obj,NUL,NUL

default : server.exe
	echo OK

# the Helios IO server
server.exe : helios.h server.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
	     ibm\ether.obj ibm\spirit40.obj ibm\spiritas.obj \
	     ibm\vy86pid.obj ibm\qpc.obj ibm\qpcas.obj ibm\sangc40.obj
	     	   link @@ibm\link.lnk

#
# concatenate all the header files to produce just one, preferably held in
# ram disk. This almost doubles the speed of compilation
#
helios.h: barthdr defines.h structs.h fundefs.h server.h debugopt.h
	type >$@@  $(INCDIR)\stdio.h
	type >>$@@ $(INCDIR)\errno.h
	type >>$@@ $(INCDIR)\time.h
	type >>$@@ $(INCDIR)\ctype.h
	type >>$@@ $(INCDIR)\dos.h
	type >>$@@ $(INCDIR)\direct.h
	type >>$@@ $(INCDIR)\bios.h
	type >>$@@ $(INCDIR)\string.h
	type >>$@@ $(INCDIR)\setjmp.h
	type >>$@@ $(INCDIR)\stdlib.h
	type >>$@@ $(INCDIR)\io.h
	type >>$@@ $(INCDIR)\stdarg.h
	type >>$@@ $(INCDIR)\conio.h
	type >>$@@ defines.h
	type >>$@@ barthdr
	type >>$@@ protocol.h
	type >>$@@ structs.h
	type >>$@@ fundefs.h
	type >>$@@ server.h
	type >>$@@ debugopt.h
	type >>$@@ ibm\pclocal.h

server.obj :     	server.c $(headers) sccs.h
files.obj :       	files.c   $(headers)
devices.obj : 		devices.c $(headers)
cofuns.obj :       	cofuns.c $(headers)
tload.obj :		tload.c  $(headers)
debug.obj	  : 	debug.c $(headers)
terminal.obj :		terminal.c $(headers)
gem.obj      :     	gem.c   $(headers)
linkio.obj :            linkio.c $(headers)
ibm\pclocal.obj :  	ibm\pclocal.c $(headers)
ibm\ether.obj : 	ibm\ether.c ibm\esupport.c ibm\etherdef.h $(headers)
ibm\spirit40.obj : 	ibm\spirit40.c $(headers)
ibm\vy86pid.obj : 	ibm\vy86pid.c $(headers)
ibm\qpc.obj : 		ibm\qpc.c $(headers)

ibm\qpcas.obj :	ibm\qpcas.cpp $(headers)
	cl /EP /P /DPC ibm\qpcas.cpp
	masm qpcas.i,ibm\qpcas.obj,NUL,NUL

ibm\sangc40.obj :	ibm\sangc40.c $(headers)
	cl $(MFLAGS) $(DEFINES) /G2 /Fo$*.obj $*.c

ibm\pcasm.obj :		ibm\pcasm.cpp ibm\etherdef.h $(headers)
	cl /EP /P /DPC ibm\pcasm.cpp
	masm pcasm.i,ibm\pcasm.obj,NUL,NUL

ibm\spiritas.obj :	ibm\spiritas.cpp $(headers)
	cl /EP /P /DPC ibm\spiritas.cpp
	masm spiritas.i,ibm\spiritas.obj,NUL,NUL

#
# A special server for demonstration purposes, which stops after
# ten minutes or so and does not allow writing to files
#
demoserv.exe : helios.h dserver.obj dfiles.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj
	     	   link @@ibm\dlink.lnk

dserver.obj :		server.c $(headers) sccs.h
	cl $(MFLAGS) $(DEFINES) /DDEMONSTRATION /Fodserver.obj server.c
dfiles.obj :		files.c $(headers)
	cl $(MFLAGS) $(DEFINES) /DDEMONSTRATION /Fodfiles.obj files.c

#
# A special server for the Racal-Redac system, supported by Gemini
#
rr_serv.exe : helios.h rserver.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\rrlocal.obj ibm\pcasm.obj \
	     gemini\rrlock.obj
	     	   link @@gemini\rrlink.lnk

rserver.obj :	server.c $(headers) sccs.h
	cl $(MFLAGS) $(DEFINES) /DGEMINI /Forserver.obj server.c

ibm\rrlocal.obj : ibm\pclocal.c $(headers)
	cl $(MFLAGS) $(DEFINES) /DGEMINI /Foibm\rrlocal.obj ibm\pclocal.c

gemini\rrlock.obj : gemini\rrlock.asm

#
# A server which incorporates a device for the synergy board,
# for Leeds General Infirmary
#
synserv.exe : synserv.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
	     synergy\synergy.obj synergy\synasm.obj
	     	   link @@synergy\link.lnk

synergy\synergy.obj :	synergy\synergy.c
synergy\synasm.obj :	synergy\synasm.asm

synserv.obj : 		server.c synergy\synergy.h $(headers)
	cl $(MFLAGS) /DPC /DSYNERGY /Fosynserv.obj server.c


@


1.9
log
@Added the sangc40 module
@
text
@d27 1
a27 1
	     ibm\vy86pid.obj ibm\qpc.obj ibm\sangc40.obj
d71 4
@


1.8
log
@Added the LSI qpc board
@
text
@d27 1
a27 1
	     ibm\vy86pid.obj ibm\qpc.obj
d71 4
d78 1
@


1.7
log
@Added the spirit40 and vy86pid modules
@
text
@d27 1
a27 1
	     ibm\vy86pid.obj
d70 1
@


1.6
log
@patches to compile under Microsoft C 7.0
@
text
@d25 3
a27 1
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj ibm\ether.obj
d68 2
d73 3
@


1.5
log
@fixed for #line in pcasm.i
@
text
@d1 117
a117 114
#
# Makefile for the Helios input/output server on an IBM PC or compatible
#
include  = /I. /Ic:\include
headers  = barthdr 
MFLAGS   = $(include) /AL /c /Gs /W2
#DEFINES = /DPC /DSMALL
DEFINES = /DPC
.c.obj :
	cl $(MFLAGS) $(DEFINES) /Fo$*.obj $*.c

.asm.obj :
	MASM $*,$*.obj,NUL,NUL

default : server.exe
	echo OK

# the Helios IO server
server.exe : helios.h server.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj ibm\ether.obj
	     	   link @@ibm\link.lnk

#
# concatenate all the header files to produce just one, preferably held in
# ram disk. This almost doubles the speed of compilation
#
helios.h: barthdr defines.h structs.h fundefs.h server.h debugopt.h \
	protocol.h ibm\pclocal.h
	type >$@@ c:\include\stdio.h
	type >>$@@ c:\include\errno.h
	type >>$@@ c:\include\time.h
	type >>$@@ c:\include\ctype.h
	type >>$@@ c:\include\dos.h
	type >>$@@ c:\include\direct.h
	type >>$@@ c:\include\bios.h
	type >>$@@ c:\include\string.h
	type >>$@@ c:\include\setjmp.h
	type >>$@@ c:\include\stdlib.h
	type >>$@@ c:\include\io.h
	type >>$@@ c:\include\stdarg.h
	type >>$@@ c:\include\conio.h
	type >>$@@ defines.h
	type >>$@@ barthdr
	type >>$@@ protocol.h
	type >>$@@ structs.h
	type >>$@@ fundefs.h
	type >>$@@ server.h
	type >>$@@ debugopt.h
	type >>$@@ ibm\pclocal.h

server.obj :     	server.c $(headers) sccs.h
files.obj :       	files.c   $(headers)
devices.obj : 		devices.c $(headers)
cofuns.obj :       	cofuns.c $(headers)
tload.obj :		tload.c  $(headers)
debug.obj	  : 	debug.c $(headers)
terminal.obj :		terminal.c $(headers)
gem.obj      :     	gem.c   $(headers)
linkio.obj :            linkio.c $(headers)
ibm\pclocal.obj :  	ibm\pclocal.c $(headers)
ibm\ether.obj : 	ibm\ether.c ibm\esupport.c ibm\etherdef.h $(headers)
ibm\pcasm.obj :		ibm\pcasm.cpp ibm\etherdef.h $(headers)
	cl /EP /P /DPC ibm\pcasm.cpp
	masm pcasm.i,ibm\pcasm.obj,NUL,NUL

#
# A special server for demonstration purposes, which stops after
# ten minutes or so and does not allow writing to files
#
demoserv.exe : helios.h dserver.obj dfiles.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj
	     	   link @@ibm\dlink.lnk

dserver.obj :		server.c $(headers) sccs.h
	cl $(MFLAGS) $(DEFINES) /DDEMONSTRATION /Fodserver.obj server.c
dfiles.obj :		files.c $(headers)
	cl $(MFLAGS) $(DEFINES) /DDEMONSTRATION /Fodfiles.obj files.c

#
# A special server for the Racal-Redac system, supported by Gemini
#
rr_serv.exe : helios.h rserver.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\rrlocal.obj ibm\pcasm.obj \
	     gemini\rrlock.obj
	     	   link @@gemini\rrlink.lnk

rserver.obj :	server.c $(headers) sccs.h
	cl $(MFLAGS) $(DEFINES) /DGEMINI /Forserver.obj server.c

ibm\rrlocal.obj : ibm\pclocal.c $(headers)
	cl $(MFLAGS) $(DEFINES) /DGEMINI /Foibm\rrlocal.obj ibm\pclocal.c

gemini\rrlock.obj : gemini\rrlock.asm

#
# A server which incorporates a device for the synergy board,
# for Leeds General Infirmary
#
synserv.exe : synserv.obj files.obj  devices.obj \
	     cofuns.obj tload.obj debug.obj linkio.obj \
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj \
	     synergy\synergy.obj synergy\synasm.obj
	     	   link @@synergy\link.lnk

synergy\synergy.obj :	synergy\synergy.c
synergy\synasm.obj :	synergy\synasm.asm

synserv.obj : 		server.c synergy\synergy.h $(headers)
	cl $(MFLAGS) /DPC /DSYNERGY /Fosynserv.obj server.c


@


1.4
log
@\fixed for full header dependecies
@
text
@d64 1
a64 1
	cl /P /DPC ibm\pcasm.cpp
@


1.3
log
@Added dependency to pcasm.obj (ibm\etherdef.h)
@
text
@d28 2
a29 1
helios.h: barthdr defines.h structs.h fundefs.h server.h debugopt.h
@


1.2
log
@Added dependency for ibm\ether.obj (ibm\etherdef.h)
Replaced "!" with "\" (nmake doesn't understand "!")
@
text
@d62 1
a62 1
ibm\pcasm.obj :		ibm\pcasm.cpp $(headers)
@


1.1
log
@Initial revision
@
text
@d19 2
a20 2
server.exe : helios.h server.obj files.obj  devices.obj !
	     cofuns.obj tload.obj debug.obj linkio.obj !
d61 1
a61 1
ibm\ether.obj : 	ibm\ether.c ibm\esupport.c $(headers)
d70 2
a71 2
demoserv.exe : helios.h dserver.obj dfiles.obj  devices.obj !
	     cofuns.obj tload.obj debug.obj linkio.obj !
d83 3
a85 3
rr_serv.exe : helios.h rserver.obj files.obj  devices.obj !
	     cofuns.obj tload.obj debug.obj linkio.obj !
             terminal.obj gem.obj ibm\rrlocal.obj ibm\pcasm.obj !
d101 3
a103 3
synserv.exe : synserv.obj files.obj  devices.obj !
	     cofuns.obj tload.obj debug.obj linkio.obj !
             terminal.obj gem.obj ibm\pclocal.obj ibm\pcasm.obj !
@
