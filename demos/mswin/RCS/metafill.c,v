head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	93.05.12.11.21.43;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	92.12.05.13.08.22;	author craig;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated with JP changes
@
text
@#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <posix.h>
#include <graph.h>
#include <helios.h>
#include <string.h>

int main()
{
  Stream *graph;
  word   num_pts, pts[100], x, hDC;
  char   ch, filename[80];
  
  printf("\n\nmetafill will save a polygonal image in a metafile\n");
  printf("meta.fil and will play it back in the window.\n\n");
  printf("The file will be stored on the ram disk.\n\n");
  printf("Hit return to continue    ^C to exit ...");

  fflush(stdout);
  ch = getchar();
  
  strcpy(filename, "helios/meta.fil");

  if (!InitGraphics(NULL, NULL))
     exit(1);

  graph = OpenGraph(NULL, 0, 0, 300, 300, WS_OVERLAPPEDWINDOW,SW_SHOWNA);

  if (graph == Null(Stream))
     exit(1);

  num_pts = 50;
  for (x = 0; x < num_pts * 2; x+=2)
  {  pts[x]   = (int) (((float) rand()/ (float) RAND_MAX) * 300);
     pts[x+1] = (int) (((float) rand()/ (float) RAND_MAX) * 300);
  }

  hDC = CreateMetaFile(graph, filename);
  if (hDC == 0)
  {  printf("Unable to open meta file %s!\r\n", filename);
     TidyGraphics();
     exit(1);
  }

  SetFillAttr(graph, SOLID, RGB(0, 0, 150));
  SetFillMode(graph, WINDING);
  FillPoly(graph, num_pts, &pts[0]);
  FLUSH();
  CloseMetaFile(graph, hDC);
  hDC = GetMetaFile(graph, filename);
  if (hDC == 0)
  {  printf("Unable to retireve meta file %s!\r\n", filename);
     TidyGraphics();
     exit(1);
  }

  PlayMetaFile(graph, hDC);
  DeleteMetaFile(graph, hDC);
  sleep(3);
  unlink("/helios/meta.fil");
  CloseGraph(graph);
  TidyGraphics();
  exit(0);
}  
  	
@


1.1
log
@Initial revision
@
text
@d2 3
a5 1
#include <stdlib.h>
d11 1
a11 1
  Stream *graph_stream;
d15 3
a17 4
  printf("\n\nmetafill will save a polygonal image in a metafile called \n");
  printf("fill.met and will play it back in the window!\n\n");
  printf("NOTE: The meta file will remain on your disk.\n\n");
  printf("The file will be stored in your HELIOS home directory!\n\n");
d19 1
d23 6
a28 1
  strcpy(filename, "helios/fill.met");
d30 3
a32 4
  if (!InitGraphics(NULL, NULL)) return(0);
  graph_stream = OpenGraph(NULL, 0, 0, 300, 300, WS_OVERLAPPEDWINDOW,
			   SW_SHOWNA);
  if (graph_stream == (Stream *) NULL) return(0);
d34 3
a36 3
  for (x = 0; x < num_pts * 2; x+=2) {
    pts[x]   = (int) (((float) rand()/ (float) RAND_MAX) * 300);
    pts[x+1] = (int) (((float) rand()/ (float) RAND_MAX) * 300);
d39 5
a43 5
  hDC = CreateMetaFile(graph_stream, filename);
  if (hDC == 0) {
    printf("Unable to open meta file %s!\r\n", filename);
    TidyGraphics();
    return(0);
d45 4
a48 3
  SetFillAttr(graph_stream, SOLID, RGB(0, 0, 150));
  SetFillMode(graph_stream, WINDING);
  FillPoly(graph_stream, num_pts, &pts[0]);
d50 4
a53 4
  CloseMetaFile(graph_stream, hDC);
  hDC = GetMetaFile(graph_stream, filename);
  if (hDC == 0) {
     printf("Unable to retireve meta file %s!\r\n", filename);
d55 1
a55 1
     return(0);
d57 6
a62 4
  PlayMetaFile(graph_stream, hDC);
  DeleteMetaFile(graph_stream, hDC);
  Delay(OneSec * 3);
  CloseGraph(graph_stream);
d64 1
@
