head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	93.05.12.11.21.43;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	92.12.05.13.08.22;	author craig;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated with JP changes
@
text
@#include <stdio.h>
#include <stdlib.h>
#include <signal.h>
#include <graph.h>
#include <helios.h>

int main()
{
   Stream *graph;
   int    x1, x2, y1, y2, ct;
   
   if (!InitGraphics(NULL, NULL))
   {  printf("unable to Initialise gaphics\r\n");
      exit(1);
   }	
   graph = OpenGraph("Lines", -1, -1, -1, -1, WS_OVERLAPPEDWINDOW, SW_SHOWNA);

   if (graph == (Stream *) NULL)
   {  printf("Unable to open window\r\n");
      exit(1);
   }

   for (ct = 0; ct < 200; ct++)
   {  /* generate random lines */
      x1 = rand();
      srand(x1);
      y1 = rand();
      srand(y1);
      x2 = rand();
      srand(x2);
      y2 = rand();
      srand(y2);
      x1 = 10 + ((int) (((float) x1 / (float) RAND_MAX) * 500));
      y1 = 10 + ((int) (((float) y1 / (float) RAND_MAX) * 380));
      x2 = 10 + ((int) (((float) x2 / (float) RAND_MAX) * 500));
      y2 = 10 + ((int) (((float) y2 / (float) RAND_MAX) * 380));
      DrawLine(graph, x1, y1, x2, y2);  /* draw random lines */
   }
   FLUSH();
   sleep(3);
   if (!CloseGraph(graph))
   {
   	printf("Unable to Close window\r\n");
   	exit(1);
   }
   TidyGraphics();
   exit(0);
}   
@


1.1
log
@Initial revision
@
text
@a0 2
/* Program to test the DrawLine function */

d2 2
a4 1
#include <stdlib.h>
d9 1
a9 1
   Stream *graph_stream;
d12 3
a14 3
   if (!InitGraphics(NULL, NULL)) {
   	printf("unable to Initialise gaphics\r\n");
   	return(0);
d16 5
a20 5
   graph_stream = OpenGraph("Lines", -1, -1, -1, -1, WS_OVERLAPPEDWINDOW,
			     SW_SHOWNA);
   if (graph_stream == (Stream *) NULL) {
   	printf("Unable to open window\r\n");
   	return(0);
d23 15
a37 14
   for (ct = 0; ct < 200; ct++) {   /* generate random lines */
     x1 = rand();
     srand(x1);
     y1 = rand();
     srand(y1);
     x2 = rand();
     srand(x2);
     y2 = rand();
     srand(y2);
     x1 = 10 + ((int) (((float) x1 / (float) RAND_MAX) * 500));
     y1 = 10 + ((int) (((float) y1 / (float) RAND_MAX) * 380));
     x2 = 10 + ((int) (((float) x2 / (float) RAND_MAX) * 500));
     y2 = 10 + ((int) (((float) y2 / (float) RAND_MAX) * 380));
     DrawLine(graph_stream, x1, y1, x2, y2);  /* draw random lines */
d40 3
a42 2
   Delay(OneSec * 3);
   if (!CloseGraph(graph_stream)) {
d44 1
a44 1
   	return(0);
d47 1
@
