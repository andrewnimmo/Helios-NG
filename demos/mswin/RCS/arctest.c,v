head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	93.05.12.11.21.43;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	92.12.05.13.08.22;	author craig;	state Exp;
branches;
next	;


desc
@@


1.2
log
@updated with JP changes
@
text
@#include <stdio.h>
#include <stdlib.h>
#include <graph.h>
#include <helios.h>
#include <signal.h>

int main()
{
   Stream *graph;
   
   if (!InitGraphics(NULL, NULL))
      exit(1);

   graph = OpenGraph(NULL, 0, 0, 500, 300, WS_OVERLAPPEDWINDOW, SW_SHOWNA);

   if (graph == Null(Stream))
      exit(1);

   SetFillAttr(graph, SOLID, BLUE);
   SetMapMode(graph, M_ISOTROPIC);		/* set mapping mode */
   SetLogicalExt(graph, 4, 1);			/* get equal units on both axes */
   SetDeviceExt(graph, 5, 1); 
   if (!Ellipse(graph, 10, 10, 380, 250)) 
   {  printf("Ellipse failed\r\n");
      exit(1);
   }

   {  int i;
      for(i = 0; i < 100; i = i+9)
         Circle(graph, (250 +i), (150+i), (100-i)); 
      FLUSH();

      for(i = 0; i < 10; i++)
         Rectangle(graph, (10 + 2*i), (100 + 2*i), (150 - 3*i), (200 - 3*i));
   }
   FLUSH();
   sleep(3);

   CloseGraph(graph);   	
   TidyGraphics();
   exit(0);
}   
@


1.1
log
@Initial revision
@
text
@a0 2
/* Program to test the Ellipse, Circle and Rectangle Functions */

d2 1
d5 1
d9 1
a9 1
   Stream *graph_stream;
d11 15
a25 10
   if (!InitGraphics(NULL, NULL)) return(0);
   graph_stream = OpenGraph(NULL, 0, 0, 500, 300,
			    WS_OVERLAPPEDWINDOW, SW_SHOWNA);
   if (graph_stream == (Stream *) NULL) return(0);
   SetMapMode(graph_stream, M_ISOTROPIC);   /* set mapping mode */
   SetLogicalExt(graph_stream, 4, 1);   /* get equal units on both axes */
   SetDeviceExt(graph_stream, 5, 1); 
   if (!Ellipse(graph_stream, 10, 10, 380, 250)) {  /* draw ellipse */
   	printf("Ellipse failed\r\n");
      	return(0);
d27 8
a34 3
   if (!Circle(graph_stream, 200, 130, 100)) {   /* draw circle */
   	printf("Circle failed\r\n");
   	return(0);
a35 1
   Rectangle(graph_stream, 200, 100, 250, 150);  /* draw rectangle */
d37 3
a39 2
   Delay(OneSec * 3);
   CloseGraph(graph_stream);   	
d41 1
@
