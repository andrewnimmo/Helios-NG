head	1.2;
access;
symbols
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.2
date	92.08.19.09.01.00;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.15.25.50;	author jon;	state Exp;
branches;
next	;


desc
@@


1.2
log
@fixed compile time warning
@
text
@void
eval(
     int 	position,
     int	number_workers,
     int	intervals,
     double *	result )
{
  int		first;
  int		current;
  int		last;
  double	width;
  double	sum;
  double	tmp;

  
  sum		  = 0.0;
  number_workers *= intervals;  
  width		  = 1.0 / (double)number_workers;
  first		  = position * intervals;
  last		  = first + intervals;
  
  for (current = first; current < last; current++)
    {
      tmp = (0.5 + (double) current) * width;
      sum = sum + width * (4.0 / (1.0 + tmp * tmp));
    }

  *result = sum;

  return;
  
} /* eval */    

@


1.1
log
@Initial revision
@
text
@d1 14
a14 3
void eval(int position, int number_workers, int intervals, double *result)
{ int		first, current, last;
  double	width, sum, tmp;
d16 5
a20 4
  sum		= 0.0;
  width		= 1.0 / (double) (number_workers * intervals);
  first		= position * intervals;
  last		= first + intervals;
d23 5
a27 3
   { tmp = (0.5 + (double) current) * width;
     sum = sum + width * (4.0 / (1.0 + tmp * tmp));
   }
d29 4
a32 1
}     
@
