head	1.16;
access;
symbols
	Helios_1_3_1:1.16
	Helios_C40_1_3_Official_Release:1.16
	Alenia_release:1.15
	Helios1_3:1.14
	C40_Field_Test_2:1.14
	Helios13_beta:1.13
	Alpha_100:1.4;
locks; strict;
comment	@# @;


1.16
date	93.04.15.15.54.37;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	92.11.05.16.44.01;	author craig;	state Exp;
branches;
next	1.14;

1.14
date	92.09.29.10.16.35;	author bart;	state Exp;
branches;
next	1.13;

1.13
date	92.06.27.12.39.28;	author bart;	state Exp;
branches;
next	1.12;

1.12
date	92.06.26.11.35.17;	author bart;	state Exp;
branches;
next	1.11;

1.11
date	92.06.25.13.13.37;	author nickc;	state Exp;
branches;
next	1.10;

1.10
date	92.06.23.10.26.35;	author nickc;	state Exp;
branches;
next	1.9;

1.9
date	92.06.18.10.32.07;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	92.06.18.10.30.47;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	92.04.08.17.29.46;	author craig;	state Exp;
branches;
next	1.6;

1.6
date	92.03.29.17.12.07;	author craig;	state Exp;
branches;
next	1.5;

1.5
date	92.01.23.13.12.29;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.11.21.12.53.58;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	91.11.21.12.40.44;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	91.11.21.11.28.49;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	91.11.21.11.07.24;	author nick;	state Exp;
branches;
next	;


desc
@@


1.16
log
@fixed for ARM
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: tcpip/nfs
#
# File: /HSRC/tcpip/nfs/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.15 1992/11/05 16:44:01 craig Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = tcpip/nfs

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)
vpath %.x $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
# For now, the system cannot be built under Helios because rpcgen and
# sed are not part of the host utilities

ifeq ($(HHOST),HELIOSTRAN)
 TARGETS =
else
 TARGETS = nfsx hmount
endif

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
ifneq ($(HHOST),HELIOSTRAN)
	$(CP) nfsx $(LIB)/nfs
	$(CP) hmount $(BIN)
endif
	$(TOUCH) install

installdef:	# If this is a library, enter all .def files here (to install)
#	$(CP) $^ $(LIB)
#	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall \
		$(SOURCES.RPC) $(HEADERS.RPC) hmount.o


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o) $(SOURCES.RPC:.c=.o)

# C source files
SOURCES.c	= server.c mount.c dir_server.c file_server.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= nfs.h

# AMPP macro files
HEADERS.m	=

# SUN RPC protocol files
SOURCES.x	= nfs_prot.x mount.x
SOURCES.RPC	= nfs_prot_clnt.c nfs_prot_xdr.c mount_clnt.c mount_xdr.c
HEADERS.RPC	= nfs_prot.h mount.h

# Any other source files
SOURCES.odd	= makefile hmount.c


#-----------------------------------------------------------------------------
# Other generic component variables:

NCFLAGS := $(NCFLAGS) -D_BSD

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -i. -wd
else
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -i. -wd
  else
    ifdef SYSDEB
      NCFLAGS := $(NCFLAGS) -ps1
    endif
    NCFLAGS := -wasdfv -ecpz $(NCFLAGS) 
  endif
endif

# Note any library def files to be linked with
LIBDEFS	:=

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

$(SOURCES.c) : $(HEADERS.RPC) nfs.h
$(SOURCES.RPC) : $(HEADERS.RPC)
$(HEADERS.RPC) $(SOURCES.RPC) : $(SOURCES.x)

nfsx : $(OBJECTS)
	$(LINK.CPROGRAM) -nnfs -l$(LIB)/rpclib.lib -l$(LIB)/bsd.lib -l$(LIB)/helios.lib

%_clnt.c : %.x
ifeq ($(HPROC),TRAN)
	rpcgen -l -o $@@ $*.x
else
	co -u $@@
endif

%_xdr.c : %.x
ifeq ($(HPROC),TRAN)
	rpcgen -c -o $@@ $*.x
else
	co -u $@@
endif

%.h : %.x
ifeq ($(HPROC),TRAN)
	rpcgen -h $*.x | sed "/WFLUSH = 99,/s/,//; /NFFIFO = 8,/s/,//" >$@@
else
	co -u $@@
endif


hmount : hmount.o mount_clnt.o mount_xdr.o
	$(LINK.CPROGRAM) -l$(LIB)/rpclib.lib -l$(LIB)/bsd.lib


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.15
log
@Renamed umount to hmount (ufs conflict)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.14 1992/09/29 10:16:35 bart Exp craig $
d144 1
a144 1
  NCFLAGS := $(NCFLAGS)
d175 3
a177 1
ifeq ($(HPROC),C40)
a178 2
else
	rpcgen -l -o $@@ $*.x
d182 3
a184 1
ifeq ($(HPROC),C40)
a185 2
else
	rpcgen -c -o $@@ $*.x
d189 3
a191 1
ifeq ($(HPROC),C40)
a192 2
else
	rpcgen -h $*.x | sed "/WFLUSH = 99,/s/,//; /NFFIFO = 8,/s/,//" >$@@
d195 1
d199 1
a201 1

@


1.14
log
@The nfs server is now called nfs, not nfsx
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.13 1992/06/27 12:39:28 bart Exp bart $
d80 1
a80 1
 TARGETS = nfsx umount
d88 1
a88 1
	$(CP) umount $(BIN)
d99 1
a99 1
		$(SOURCES.RPC) $(HEADERS.RPC) umount.o
d134 1
a134 1
SOURCES.odd	= makefile umount.c
d195 1
a195 1
umount : umount.o mount_clnt.o mount_xdr.o
@


1.13
log
@Will not attempt to build anything under Helios, until I get rpcgen and
sed sorted out
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.12 1992/06/26 11:35:17 bart Exp bart $
d172 1
a172 1
	$(LINK.CPROGRAM) -l$(LIB)/rpclib.lib -l$(LIB)/bsd.lib -l$(LIB)/helios.lib
@


1.12
log
@Fixed CLEAN option to wipe out umount.o
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 1992/06/25 13:13:37 nickc Exp bart $
d74 2
a75 1
TARGETS = nfsx umount
d77 6
d86 1
d89 1
@


1.11
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1992/06/23 10:26:35 nickc Exp nickc $
d90 1
a90 1
		$(SOURCES.RPC) $(HEADERS.RPC)
@


1.10
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 1992/06/18 10:32:07 nickc Exp nickc $
d125 1
a125 1
SOURCES.odd	= makefile $(SOURCES.x) umount.c
d162 3
d166 3
d170 1
d173 3
d177 1
d180 3
d184 1
a184 3

nfsx : $(OBJECTS)
	$(LINK.CPROGRAM) -l$(LIB)/rpclib.lib -l$(LIB)/bsd.lib -l$(LIB)/helios.lib
@


1.9
log
@removed spurious command line option from C40 rules
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1992/06/18 10:30:47 nickc Exp nickc $
d138 1
a138 1
    NCFLAGS := $(NCFLAGS)
d172 1
a172 1
	$(LINK.CPROGRAM) -l$(LIB)/rpclib.lib -l$(LIB)/bsd.lib
@


1.8
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/04/08 17:29:46 craig Exp nickc $
a136 3
  ifdef SYSDEB
    NCFLAGS := $(NCFLAGS) -ps1
  endif
d140 3
@


1.7
log
@Removed -ps1 (I do not believe that Ethernet II is sufficiently well tested
for stack-checking to be removed)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/03/29 17:12:07 craig Exp craig $
d140 5
a144 1
  NCFLAGS := -wasdfv -ecpz $(NCFLAGS) 
@


1.6
log
@Added -ps1
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1992/01/23 13:12:29 martyn Exp craig $
d137 1
a137 1
  ifndef SYSDEB
@


1.5
log
@changed nfs target to nfsx so that gmake doesn't try to use
/hsrc/tcpip/nfs (the directory) as its output file
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/11/21 12:53:58 nick Exp martyn $
d137 3
@


1.4
log
@install target added
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1991/11/21 12:40:44 nick Exp nick $
d74 1
a74 1
TARGETS = nfs umount
d79 1
a79 1
	$(CP) nfs $(LIB)
d164 1
a164 1
nfs : $(OBJECTS)
@


1.3
log
@vpath %.x added, rules for generated files improved.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1991/11/21 11:28:49 nick Exp $
d79 3
a81 2
#	$(CP) $(TARGETS) $(BIN)
#	$(TOUCH) install
@


1.2
log
@umount added
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1991/11/21 11:07:24 nick Exp nick $
d68 1
d88 2
a89 1
		core ../mkout install installdef Xinstall
d155 1
a155 1
	rpcgen -l -o $@@ $<
d158 1
a158 1
	rpcgen -c -o $@@ $<
d161 1
a161 1
	rpcgen -h -o $@@ $<
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: generic.template,v 1.1 91/02/12 17:11:17 nick Exp $
d73 1
a73 1
TARGETS = nfs
d122 1
a122 1
SOURCES.odd	= makefile $(SOURCES.x)
d162 3
@
