/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _MOUNT_H_RPCGEN
#define	_MOUNT_H_RPCGEN

#include <rpc/rpc.h>
#define	MNTPATHLEN 1024
#define	MNTNAMLEN 255
#define	FHSIZE 32

typedef char fhandle[FHSIZE];

struct fhstatus {
	u_int fhs_status;
	union {
		fhandle fhs_fhandle;
	} fhstatus_u;
};
typedef struct fhstatus fhstatus;

typedef char *dirpath;

typedef char *name;

struct mountlist {
	name ml_hostname;
	dirpath ml_directory;
	struct mountlist *ml_next;
};
typedef struct mountlist mountlist;

typedef struct groupnode *groups;

struct groupnode {
	name gr_name;
	groups *gr_next;
};
typedef struct groupnode groupnode;

struct exports {
	dirpath ex_dir;
	groups ex_groups;
	struct exports *ex_next;
};
typedef struct exports exports;

#define	MOUNTPROG	100005
#define	MOUNTVERS	1
#define	MOUNTPROC_NULL	0
extern  void * mountproc_null_1();
#define	MOUNTPROC_MNT	1
extern  fhstatus * mountproc_mnt_1();
#define	MOUNTPROC_DUMP	2
extern  mountlist * mountproc_dump_1();
#define	MOUNTPROC_UMNT	3
extern  void * mountproc_umnt_1();
#define	MOUNTPROC_UMNTALL	4
extern  void * mountproc_umntall_1();
#define	MOUNTPROC_EXPORT	5
extern  exports * mountproc_export_1();
#define	MOUNTPROC_EXPORTALL	6
extern  exports * mountproc_exportall_1();
extern int mountprog_1_freeresult();

/* the xdr functions */
extern bool_t xdr_fhandle();
extern bool_t xdr_fhstatus();
extern bool_t xdr_dirpath();
extern bool_t xdr_name();
extern bool_t xdr_mountlist();
extern bool_t xdr_groups();
extern bool_t xdr_groupnode();
extern bool_t xdr_exports();

#endif /* !_MOUNT_H_RPCGEN */
