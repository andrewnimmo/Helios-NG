head	1.8;
access;
symbols
	Helios_1_3_1:1.8
	Helios_C40_1_3_Official_Release:1.8
	Alenia_release:1.7
	Helios1_3:1.7
	C40_Field_Test_2:1.7
	Helios13_beta:1.6
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.5;
locks; strict;
comment	@# @;


1.8
date	93.02.25.18.42.31;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.07.26.12.33.38;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.06.08.16.39.52;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	91.03.06.11.55.25;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	91.03.05.14.42.36;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	91.02.27.17.03.01;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	91.02.12.16.39.13;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	91.02.12.16.32.18;	author nick;	state Exp;
branches;
next	;


desc
@@


1.8
log
@fixed for arm
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: sys
#
# File: /HSRC/tcpip/sys/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.7 1992/07/26 12:33:38 nickc Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = tcpip/sys

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = sockets

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) ../../$(HPROC)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	= sys_socket.c uipc_domain.c \
		uipc_socket.c uipc_socket2.c uipc_syscalls.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	=

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile
		# makefile.olduipc_mbuf.c uipc_proto.c uipc_usrreq.c
		# C sources not used in helios version (original bsd versions)

#-----------------------------------------------------------------------------
# Other generic component variables:

INCLUDES := $(TCPIP)/h/,$(TCPIP)/include/sys/,$(INCLUDE)/sys/,$(TCPIP)/,$(INCLUDE)/,../

ifdef RSRC
INCLUDES := $(INCLUDES),$(subst $(TCPIP),$(subst $(HSRC),$(RSRC),$(TCPIP)),$(INCLUDES)),$(RSRC)/$(COMPONENT)/
endif

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -wadfpv -I$(INCLUDES) -J$(INCLUDES) -D_BSD
else
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -I$(INCLUDES) -J$(INCLUDES) -D_BSD -wadfpv -Zpl1
  else
    ifndef SYSDEB
      NCFLAGS := $(NCFLAGS) -ps1
    endif
    NCFLAGS := $(NCFLAGS) -wasdfv -ecpz -I$(INCLUDES) -J$(INCLUDES) -D_BSD
  endif
endif

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:


sockets	: $(OBJECTS)
ifeq ($(HPROC),TRAN)
	asm -p -o sockets $(OBJECTS)	
else
	cat $(OBJECTS) > sockets
endif


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.7
log
@suppressed more warnings and enabled few_modules
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/06/08 16:39:52 nickc Exp nickc $
d129 1
a129 1
  NCFLAGS := $(NCFLAGS) -wasdfv -ecpz -I$(INCLUDES) -J$(INCLUDES) -D_BSD
@


1.6
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1991/03/06 11:55:25 martyn Exp nickc $
d132 1
a132 1
    NCFLAGS := $(NCFLAGS) -I$(INCLUDES) -J$(INCLUDES) -D_BSD
@


1.5
log
@removed old files
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 91/03/05 14:42:36 martyn Exp Locker: martyn $
d131 7
a137 2
  ifndef SYSDEB
    NCFLAGS := $(NCFLAGS) -ps1
a138 1
  NCFLAGS := $(NCFLAGS) -wasdfv -ecpz -I$(INCLUDES) -J$(INCLUDES) -D_BSD
@


1.4
log
@changed line continuation character !!!
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/02/27 17:03:01 nick Exp $
d114 2
a115 2
SOURCES.odd	= makefile makefile.old  \
		  uipc_mbuf.c uipc_proto.c uipc_usrreq.c
@


1.3
log
@stack checking disabled for production version
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/02/12 16:39:13 nick Exp Locker: nick $
d114 1
a114 1
SOURCES.odd	= makefile makefile.old  /
@


1.2
log
@HVAPTH and INCLUDES added
@
text
@d14 1
a14 1
# RcsId: $Id$
d129 1
a129 1
  NCFLAGS := $(NCFLAGS) -wacdfpsvz -I$(INCLUDES) -J$(INCLUDES) -D_BSD
d131 4
a134 1
  NCFLAGS := $(NCFLAGS) -wacdfpsvz -I$(INCLUDES) -J$(INCLUDES) -D_BSD
@


1.1
log
@Initial revision
@
text
@d59 1
a59 1
VPATH := $(HSRC)/$(COMPONENT)
d61 8
d121 6
d129 1
a129 1
  NCFLAGS := $(NCFLAGS) -wacdfpsvz -I../../h/,../../include/sys/,$(INCLUDE)/,$(INCLUDE)/sys/,../../ -D_BSD
d131 1
a131 1
  NCFLAGS := $(NCFLAGS) -wacdfpsvz -I../../h/,../../include/sys/,$(INCLUDE)/,$(INCLUDE)/sys/,../../ -D_BSD
@
