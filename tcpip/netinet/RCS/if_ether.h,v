head	1.4;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.3
	Helios13_beta:1.3
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.4
date	94.04.11.12.37.18;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	92.06.25.13.08.41;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	91.11.18.10.51.56;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	91.02.12.16.40.50;	author nick;	state Exp;
branches;
next	;


desc
@@


1.4
log
@added multiple inclusion prevention
@
text
@/*
 * Copyright (c) 1982, 1986 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that this notice is preserved and that due credit is given
 * to the University of California at Berkeley. The name of the University
 * may not be used to endorse or promote products derived from this
 * software without specific prior written permission. This software
 * is provided ``as is'' without express or implied warranty.
 *
 *	@@(#)if_ether.h	7.2 (Berkeley) 12/7/87
 */

/*
 * Structure of a 10Mb/s Ethernet header.
 */

#ifndef __if_ether_h
#define __if_ether_h

#include <sys/types.h>
#include <net/if_arp.h>
#include <net/if.h>
#include <netinet/in.h>

struct	ether_header
  {
	u_char	ether_dhost[6];
	u_char	ether_shost[6];
	u_short	ether_type;
};

#define	ETHERTYPE_PUP	0x0200		/* PUP protocol */
#define	ETHERTYPE_IP	0x0800		/* IP protocol */
#define ETHERTYPE_ARP	0x0806		/* Addr. resolution protocol */
#define ETHERTYPE_REVARP 0x8035         /* Reverse ARP */
#define ETHERTYPE_NETWARE 0x8137                /* Reverse ARP */

/*
 * The ETHERTYPE_NTRAILER packet types starting at ETHERTYPE_TRAIL have
 * (type-ETHERTYPE_TRAIL)*512 bytes of data followed
 * by an ETHER type (as given above) and then the (variable-length) header.
 */
#define	ETHERTYPE_TRAIL		0x1000		/* Trailer packet */
#define	ETHERTYPE_NTRAILER	16

#ifdef __HELIOS
/* A bug in the Helios IO server restricts ethernet pkts to just 1500	*/
/* bytes, INCLUDING the header, and not 1500 plus the header. Hence we	*/
/* must reduce the maximum packet size to 1486.				*/

#define	ETHERMTU	(1500-14)
#else
#define	ETHERMTU	1500
#endif

#define	ETHERMIN	(60-14)

/*
 * Ethernet Address Resolution Protocol.
 *
 * See RFC 826 for protocol description.  Structure below is adapted
 * to resolving internet addresses.  Field names used correspond to 
 * RFC 826.
 */
struct	ether_arp {
	struct	arphdr ea_hdr;	/* fixed-size header */
	u_char	arp_sha[6];	/* sender hardware address */
	u_char	arp_spa[4];	/* sender protocol address */
	u_char	arp_tha[6];	/* target hardware address */
	u_char	arp_tpa[4];	/* target protocol address */
};
#define	arp_hrd	ea_hdr.ar_hrd
#define	arp_pro	ea_hdr.ar_pro
#define	arp_hln	ea_hdr.ar_hln
#define	arp_pln	ea_hdr.ar_pln
#define	arp_op	ea_hdr.ar_op


/*
 * Structure shared between the ethernet driver modules and
 * the address resolution code.  For example, each ec_softc or il_softc
 * begins with this structure.
 */
struct	arpcom {
	struct 	ifnet ac_if;		/* network-visible interface */
	u_char	ac_enaddr[6];		/* ethernet hardware address */
	struct in_addr ac_ipaddr;	/* copy of ip address- XXX */
};

/*
 * Internet to ethernet address resolution table.
 */
struct	arptab {
	struct	in_addr at_iaddr;	/* internet address */
	u_char	at_enaddr[6];		/* ethernet address */
	u_char	at_timer;		/* minutes since last reference */
	u_char	at_flags;		/* flags */
	struct	mbuf *at_hold;		/* last packet until resolved/timeout */
};

#ifdef	KERNEL
extern u_char etherbroadcastaddr[6];
extern struct	arptab *arptnew();
extern char *ether_sprintf();
#endif

#endif /*  __if_ether_h */
@


1.3
log
@spurious #endif turned into a #else.
@
text
@d18 11
a28 1
struct	ether_header {
d37 2
d108 2
@


1.2
log
@A bug in the Helios IO server restricts ethernet packets to just 1500
bytes, including the header, and not 1500 plus the header. hence we
must reduce the maximum packet size by 14 bytes to allow maximum sized
packets to be sent.
@
text
@d42 1
a42 1
#endif
d45 1
@


1.1
log
@Initial revision
@
text
@d36 7
d44 1
@
