head	1.2;
access;
symbols
	Helios_1_3_1:1.2
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.1
	Helios1_3:1.1
	C40_Field_Test_2:1.1
	Helios13_beta:1.1
	V1_00:1.1
	Beta_100:1.1
	Alpha_100:1.1;
locks; strict;
comment	@ * @;


1.2
date	93.03.10.10.05.28;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	92.01.16.17.35.20;	author craig;	state Exp;
branches;
next	;


desc
@BSD 5.4 Port
@


1.2
log
@Problem: on C40, lprm prints garbage if tcpip server not loaded
Fix: exit if gethostname() fails
@
text
@/*
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifndef __HELIOS
#ifndef lint
char copyright[] =
"@@(#) Copyright (c) 1983 Regents of the University of California.\n\
 All rights reserved.\n";
#endif /* not lint */

#ifndef lint
static char sccsid[] = "@@(#)lprm.c	5.4 (Berkeley) 6/30/88";
#endif /* not lint */
#else
static char *rcsid = "$Header: /hsrc/tcpip/cmds/lpr/RCS/lprm.c,v 1.1 1992/01/16 17:35:20 craig Exp craig $";
#endif

/*
 * lprm - remove the current user's spool entry
 *
 * lprm [-] [[job #] [user] ...]
 *
 * Using information in the lock file, lprm will kill the
 * currently active daemon (if necessary), remove the associated files,
 * and startup a new daemon.  Priviledged users may remove anyone's spool
 * entries, otherwise one can only remove their own.
 */

#include "lp.h"
#include <pwd.h>

/*
 * Stuff for handling job specifications
 */
char	*user[MAXUSERS];	/* users to process */
int	users;			/* # of users in user array */
int	requ[MAXREQUESTS];	/* job number of spool entries */
int	requests;		/* # of spool requests */
char	*person;		/* name of person doing lprm */

static char	luser[16];	/* buffer for person */

#ifndef __HELIOS
struct passwd *getpwuid();
#endif

void usage(void) ;

int main (int argc, char **argv)
{
  register char *arg;
  struct passwd *p;

#ifndef __HELIOS
  struct direct **files;
  int nitems, assasinated = 0;
#else
  extern void rmjob(void);
#endif

  name = argv[0];
#ifndef __HELIOS
  gethostname(host, sizeof(host));
#else
/*
-- crf: 09/03/93
-- Exit if gethostname() fails
*/
  if (gethostname(host, sizeof(host)))
  {
    perror("lprm: gethostname");
    exit(1);
  }
#endif
  openlog("lpd", 0, LOG_LPR);
  if ((p = getpwuid(getuid())) == NULL)
    fatal("Who are you?");
  if (strlen(p->pw_name) >= sizeof(luser))
    fatal("Your name is too long");
  strcpy(luser, p->pw_name);
  person = luser;
  while (--argc) {
    if ((arg = *++argv)[0] == '-')
      switch (arg[1]) {
      case 'P':
        if (arg[2])
          printer = &arg[2];
        else if (argc > 1) {
          argc--;
          printer = *++argv;
        }
        break;
      case '\0':
        if (!users) {
          users = -1;
          break;
        }
      default:
        usage();
      }
    else {
      if (users < 0)
        usage();
      if (isdigit(arg[0])) {
        if (requests >= MAXREQUESTS)
          fatal("Too many requests");
        requ[requests++] = atoi(arg);
      } else {
        if (users >= MAXUSERS)
          fatal("Too many users");
        user[users++] = arg;
      }
    }
  }
  if (printer == NULL && (printer = getenv("PRINTER")) == NULL)
    printer = DEFLP;

  rmjob();
}

#ifndef __HELIOS
static
usage()
#else
void usage()
#endif
{
  printf("usage: lprm [-] [-Pprinter] [[job #] [user] ...]\n");
  exit(2);
}
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
static char *rcsid = "$Header$";
d76 1
d78 11
@
