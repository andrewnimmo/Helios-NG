head	1.9;
access;
symbols
	Helios_1_3_1:1.9
	Helios_C40_1_3_Official_Release:1.9
	Alenia_release:1.8
	Helios1_3:1.8
	C40_Field_Test_2:1.7
	Helios13_beta:1.7
	V1_00:1.3
	Beta_100:1.2
	Alpha_100:1.2;
locks; strict;
comment	@# @;


1.9
date	93.02.26.14.57.59;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	92.10.30.12.21.27;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	92.06.26.12.01.16;	author bart;	state Exp;
branches;
next	1.6;

1.6
date	92.06.22.15.09.54;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.04.08.17.31.32;	author craig;	state Exp;
branches;
next	1.4;

1.4
date	92.03.29.17.16.42;	author craig;	state Exp;
branches;
next	1.3;

1.3
date	92.02.27.16.40.27;	author craig;	state Exp;
branches;
next	1.2;

1.2
date	92.01.22.11.35.44;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	92.01.16.17.44.06;	author craig;	state Exp;
branches;
next	;


desc
@Helios makefile
@


1.9
log
@updated for Helios-ARM port
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: KERNEL
#
# File: /HSRC/tcpip/cmds/lpr/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.8 1992/10/30 12:21:27 martyn Exp paul $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = tcpip/cmds/lpr

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak
include $(HSRC)/makeinc/$(HPROC).mak

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)


#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
LPD=	lpd lpd_aux
LPC=	lpc
OTHERS=	lpr lpq lprm lptest

TARGETS	= utils $(LPD) $(LPC) $(OTHERS) # FILTERS	# VFILTERS

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
	$(CP) lpd $(LIB)
	$(CP) lpd_aux $(LIB)
	$(CP) lpr $(BIN)
	$(CP) lpq $(BIN)
	$(CP) lprm $(BIN)
	$(CP) lpc $(BIN)
	$(CP) lptest $(BIN)
	$(RM) $(ETC)/printcap
	$(CP) ../printcap $(ETC)
	$(TOUCH) install

installdef:
	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) \
		mkout core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

SOURCES	=	$(SOURCES.c) $(SOURCES.a) $(HEADERS.c) $(HEADERS.m) \
		$(SOURCES.odd)

L1OBJS = 	$(L1SRCS.c:.c=.o)
L2OBJS = 	$(L2SRCS.c:.c=.o)
L3OBJS = 	$(L3SRCS.c:.c=.o)
L4OBJS = 	$(L4SRCS.c:.c=.o)
L5OBJS = 	$(L5SRCS.c:.c=.o)
L6OBJS = 	$(L6SRCS.c:.c=.o)
L7OBJS = 	$(L7SRCS.c:.c=.o)
L8OBJS = 	$(L8SRCS.c:.c=.o)
OBJECTS=	${L1OBJS} ${L2OBJS} ${L3OBJS} ${L4OBJS} ${L5OBJS} ${L6OBJS} \
		${L7OBJS} ${L8OBJS}

# C source files
L1SRCS.c =	lpd.c printcap.c version.c
L2SRCS.c =	lpr.c startdaemon.c printcap.c
L3SRCS.c =	lpq.c displayq.c common.c printcap.c
L4SRCS.c =	lprm.c rmjob.c startdaemon.c common.c printcap.c
L5SRCS.c =	lpc.c cmds.c cmdtab.c startdaemon.c common.c printcap.c
L6SRCS.c =	lptest.c
L7SRCS.c =	lpd_aux.c printjob.c startdaemon.c lpdchar.c common.c printcap.c
L8SRCS.c =	utils.c f_lock.c

SOURCES.c=	lpd.c printcap.c version.c lpr.c startdaemon.c lpq.c \
		displayq.c common.c lprm.c rmjob.c lpc.c cmds.c cmdtab.c \
		lptest.c lpd_aux.c printjob.c lpdchar.c utils.c f_lock.c

SOURCES.a =

# C header files
HEADERS.c =	bsd.h common.h lp.h lp_local.h lpc.h lpd.h printcap.h utils.h \
		f_lock.h

# AMPP macro files
HEADERS.m =

SOURCES.odd = makefile printcap

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

# Turn off stack check and function header generation.
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1 -D_BSD
else
#  NCFLAGS := $(NCFLAGS) -wd -D_BSD -DMEM_CHECK -DDEBUG
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -Zps1 -D_BSD
  else
    ifdef SYSDEB
      NCFLAGS := $(NCFLAGS) -ps1
    endif
    NCFLAGS := $(NCFLAGS) -wd -D_BSD
  endif
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/bsd.lib utils

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

$(OBJECTS): $(HEADERS.c)

#lpd: ${L1OBJS} ${CSTART}
#	asm -v -f -s10000 $(CSTART) $(L1OBJS) $(LIBS) -o $@@
#lpr: ${L2OBJS} ${CSTART}
#	asm -v -f -s10000 $(CSTART) $(L2OBJS) $(LIBS) -o $@@
#lpq: ${L3OBJS} ${CSTART}
#	asm -v -f -s10000 $(CSTART) $(L3OBJS) $(LIBS) -o $@@
#lprm: ${L4OBJS} ${CSTART}
#	asm -v -f -s10000 $(CSTART) $(L4OBJS) $(LIBS) -o $@@
#lpc: ${L5OBJS} ${CSTART} 
#	asm -v -f -s10000 $(CSTART) $(L5OBJS) $(LIBS) -o $@@
#lptest: ${L6OBJS} ${CSTART}
#	asm -v -f $(CSTART) $(L6OBJS) $(LIBS) -o $@@
#lpd_aux: ${L7OBJS} ${CSTART
#	asm -v -f -s10000 $(CSTART) $(L7OBJS) $(LIBS) -o $@@
#utils: ${L8OBJS} ${CLIB}
#	asm -v -f -p -l$(CLIB) -l$(DLIB) utils.o -o $@@

lpd: $(CSTART) $(LIBDEFS) $(L1OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^
lpr: $(CSTART) $(LIBDEFS) $(L2OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^
lpq: $(CSTART) $(LIBDEFS) $(L3OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^
lprm: $(CSTART) $(LIBDEFS) $(L4OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^
lpc: $(CSTART) $(LIBDEFS) $(L5OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^
lptest: $(CSTART) $(L6OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ $^
lpd_aux: $(CSTART) $(LIBDEFS) $(L7OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^
utils: $(L8OBJS)
ifeq ($(HPROC),TRAN)
	$(LINK) -v -f -p -o$@@ $^
else
	cat $^ > $@@
endif

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.8
log
@remove repeats in SOURCES.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/06/26 12:01:16 bart Exp $
d153 1
a153 1
  NCFLAGS := $(NCFLAGS) -Zps1
d157 1
a157 1
    NCFLAGS := $(NCFLAGS) -Zps1 -D_BSD 
@


1.7
log
@Fixed clean option
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/06/22 15:09:54 nickc Exp bart $
d129 4
a132 2
SOURCES.c=	${L1SRCS.c} ${L2SRCS.c} ${L3SRCS.c} ${L4SRCS.c} ${L5SRCS.c} \
		${L6SRCS.c} ${L7SRCS.c} ${L8SRCS.c}
@


1.6
log
@fixed to work for C40 builds
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1992/04/08 17:31:32 craig Exp nickc $
d78 1
a78 3
all: utils ${LPD} ${LPC} ${OTHERS} # FILTERS	# VFILTERS

TARGETS	= all
@


1.5
log
@Removed ps1 (I do not believe that Ethernet II is sufficiently well tested
for stack-checking to be removed)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1992/03/29 17:16:42 craig Exp craig $
d156 7
a162 2
  ifdef SYSDEB
    NCFLAGS := $(NCFLAGS) -ps1
a163 1
   NCFLAGS := $(NCFLAGS) -wd -D_BSD
@


1.4
log
@Added -ps1
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1992/02/27 16:40:27 craig Exp craig $
d156 1
a156 1
  ifndef SYSDEB
@


1.3
log
@Thought about reducing heap size ... will leave it alone for now
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1992/01/22 11:35:44 craig Exp craig $
d156 3
@


1.2
log
@Fixed SOURCES.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/01/16 17:44:06 craig Exp craig $
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/03/04 14:13:06 martyn Exp craig $
d131 2
a132 2
SOURCES.c=	${L1SRCS} ${L2SRCS} ${L3SRCS} ${L4SRCS} ${L5SRCS} ${L6SRCS} \
		${L7SRCS} ${L8SRCS}
@
