head	1.8;
access;
symbols
	Helios_1_3_1:1.8
	Helios_C40_1_3_Official_Release:1.8
	Alenia_release:1.7
	Helios1_3:1.7
	C40_Field_Test_2:1.7
	Helios13_beta:1.7
	V1_00:1.3
	Alpha_100:1.2;
locks; strict;
comment	@# @;


1.8
date	93.02.26.14.44.32;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.06.26.12.03.56;	author bart;	state Exp;
branches;
next	1.6;

1.6
date	92.06.22.15.30.21;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.04.08.17.37.50;	author craig;	state Exp;
branches;
next	1.4;

1.4
date	92.03.29.17.14.24;	author craig;	state Exp;
branches;
next	1.3;

1.3
date	92.02.05.20.29.34;	author craig;	state Exp;
branches;
next	1.2;

1.2
date	92.01.22.11.36.51;	author craig;	state Exp;
branches;
next	1.1;

1.1
date	92.01.17.10.48.38;	author craig;	state Exp;
branches;
next	;


desc
@Helios makefile
@


1.8
log
@fix for ARM port
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: KERNEL
#
# File: /HSRC/tcpip/cmds/binmail/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.7 1992/06/26 12:03:56 bart Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = tcpip/cmds/binmail

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak
include $(HSRC)/makeinc/$(HPROC).mak

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)


#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here



TARGETS	= mail

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
	$(CP) mail $(BIN)
	$(TOUCH) install

installdef:
	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) \
		mkout core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

SOURCES	=	$(SOURCES.c) $(SOURCES.a) $(HEADERS.c) $(HEADERS.m) \
		$(SOURCES.odd)

MAIL_OBJS = 	$(MAIL_SRCS.c:.c=.o)
OBJECTS=	${MAIL_OBJS}

# C source files
MAIL_SRCS.c=	binmail.c f_lock.c mktemp.c version.c

SOURCES.c=	${MAIL_SRCS.c}

SOURCES.a =

# C header files
HEADERS.c =	f_lock.h pathnames.h

# AMPP macro files
HEADERS.m =

SOURCES.odd = makefile

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

# Turn off stack check and function header generation.
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1 -D_BSD 
else
#  NCFLAGS := $(NCFLAGS) -wd -D_BSD -DMEM_CHECK -DDEBUG
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -Zps1 -D_BSD
  else
    ifdef SYSDEB
      NCFLAGS := $(NCFLAGS) -ps1
    endif
    NCFLAGS := $(NCFLAGS) -wd -D_BSD
  endif
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/bsd.lib

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

$(OBJECTS): $(HEADERS.c)

#mail: ${OBJS} ${CSTART}
#	asm -v -f -s10000 $(CSTART) $(OBJS) $(LIBS) -o $@@

mail: $(CSTART) $(LIBDEFS) $(MAIL_OBJS)
	$(LINK) $(LINKFLAGS) -o$@@ -s10000 $^

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF
@


1.7
log
@Fixed clean option
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/06/22 15:30:21 nickc Exp bart $
d125 1
a125 1
  NCFLAGS := $(NCFLAGS) -Zps1
@


1.6
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1992/04/08 17:37:50 craig Exp nickc $
a74 1
all: mail
d76 2
a77 1
TARGETS	= all
@


1.5
log
@Removed ps1 (I do believe that Ethernet II is sufficiently well tested for
stack checking to be turned off)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1992/03/29 17:14:24 craig Exp craig $
d128 7
a134 2
  ifdef SYSDEB
    NCFLAGS := $(NCFLAGS) -ps1
a135 1
   NCFLAGS := $(NCFLAGS) -wd -D_BSD
@


1.4
log
@Added -ps1
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1992/02/05 20:29:34 craig Exp craig $
d128 1
a128 1
  ifndef SYSDEB
@


1.3
log
@Added version.c into source list
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 1992/01/22 11:36:51 craig Exp $
d128 3
@


1.2
log
@Fixes SOURCES.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 1992/01/17 10:48:38 craig Exp craig $
d103 1
a103 1
MAIL_SRCS.c=	binmail.c f_lock.c mktemp.c
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/03/04 14:13:06 martyn Exp craig $
d105 1
a105 1
SOURCES.c=	${MAIL_SRCS}
@
