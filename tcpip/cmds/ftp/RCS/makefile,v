head	1.9;
access;
symbols
	Helios_1_3_1:1.9
	Helios_C40_1_3_Official_Release:1.9
	Alenia_release:1.7
	Helios1_3:1.7
	C40_Field_Test_2:1.7
	Helios13_beta:1.6
	Helios1_2_2:1.4
	Helios1_2_2Beta:1.4
	Helios1_2_1:1.4;
locks; strict;
comment	@# @;


1.9
date	93.05.12.14.07.28;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	93.02.26.12.19.01;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.08.03.14.20.53;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.06.11.11.50.01;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	92.03.29.16.39.22;	author craig;	state Exp;
branches;
next	1.4;

1.4
date	91.03.06.11.57.33;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	91.03.05.14.47.05;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.03.04.10.48.28;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	91.02.12.18.58.10;	author nick;	state Exp;
branches;
next	;


desc
@@


1.9
log
@chnaged absolite name of linker program to make variable
,.
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: ftp
#
# File: /HSRC/tcpip/cmds/ftp/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.8 1993/02/26 12:19:01 paul Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = tcpip/cmds/ftp

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = ftp

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(BIN)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	=  cmds.c cmdtab.c ftp.c glob.c main.c ruserpass.c \
		domacro.c ftp_vars.c popen.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= ftp_var.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile # makefile.old dp.c 
		# C sources not used in helios version (original bsd versions)

#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -wadfpv ${INCLUDES} -D_BSD
else
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) ${INCLUDES} -D_BSD -wadfpv 
  else
    ifndef SYSDEB
      NCFLAGS := $(NCFLAGS) -ps1
    endif
    NCFLAGS := $(NCFLAGS) -wasdfv -ecpz ${INCLUDES} -D_BSD
  endif
endif

LINKFLAGS := $(LINKFLAGS)


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:


ftp	: $(OBJECTS)
ifeq ($(HPROC),TRAN)
	asm -v -f -s20000 -o ftp $(LIB)/c0.o $(OBJECTS) \
		-l$(LIB)/helios.lib -l$(LIB)/c.lib -l$(LIB)/bsd.lib
else
	$(LINK) -s20000 -o ftp $(LIB)/c0.o $(OBJECTS) \
		-l$(LIB)/helios.lib -l$(LIB)/c.lib -l$(LIB)/bsd.lib
endif


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.8
log
@fixed for ARM port
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 1992/08/03 14:20:53 nickc Exp paul $
d146 1
a146 2
  ifeq ($(HPROC),C40)
	ldc40 -s20000 -o ftp $(LIB)/c0.o $(OBJECTS) \
a147 3
  else
	cat $(OBJECTS) > ftp
  endif
@


1.7
log
@suppressed warnings on C40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 1992/06/11 11:50:01 nickc Exp nickc $
d122 1
a122 1
  NCFLAGS := $(NCFLAGS) -wasdfv -ecpz  ${INCLUDES} -D_BSD
@


1.6
log
@fixed for C40 compilation
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 1992/03/29 16:39:22 craig Exp nickc $
d125 1
a125 1
    NCFLAGS := $(NCFLAGS) ${INCLUDES} -D_BSD
@


1.5
log
@Added -ps1
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/03/06 11:57:33 martyn Exp craig $
d124 7
a130 2
  ifndef SYSDEB
    NCFLAGS := $(NCFLAGS) -ps1
a131 1
  NCFLAGS := $(NCFLAGS) -wasdfv -ecpz ${INCLUDES} -D_BSD
d146 4
d151 1
@


1.4
log
@removed old files
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 91/03/05 14:47:05 martyn Exp Locker: martyn $
d124 3
@


1.3
log
@changed line terminator character !!!
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/03/04 10:48:28 nick Exp Locker: martyn $
d114 1
a114 2
SOURCES.odd	= makefile makefile.old  \
		dp.c 
@


1.2
log
@error suppression flags fixed
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 91/02/12 18:58:10 nick Exp Locker: nick $
d114 1
a114 1
SOURCES.odd	= makefile makefile.old  /
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
d123 1
a123 1
  NCFLAGS := $(NCFLAGS) -wacdfpsvz  ${INCLUDES} -D_BSD
d125 1
a125 1
  NCFLAGS := $(NCFLAGS) -wacdfpsvz ${INCLUDES} -D_BSD
@
