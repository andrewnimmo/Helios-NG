head	1.14;
access;
symbols
	Helios_1_3_1:1.14
	Helios_C40_1_3_Official_Release:1.13
	Alenia_release:1.12
	C40_Field_Test_2:1.10
	C40_Field_Test_R1:1.7;
locks; strict;
comment	@ * @;


1.14
date	93.10.04.12.12.37;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	93.02.05.11.12.56;	author paul;	state Exp;
branches;
next	1.12;

1.12
date	92.11.25.13.20.15;	author nick;	state Exp;
branches;
next	1.11;

1.11
date	92.11.18.14.40.20;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.08.18.09.53.47;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	92.08.04.18.01.47;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	92.07.30.18.33.39;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.06.26.17.57.32;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	92.06.16.08.43.58;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	92.05.14.13.30.36;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.05.14.08.45.16;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	92.04.28.09.23.10;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	92.04.21.09.54.56;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	91.12.03.11.49.44;	author paul;	state Exp;
branches;
next	;


desc
@c40 executive definitions and function prototypes
@


1.14
log
@added support for max dispatch latency test
@
text
@/*
 * File:	c40exec.h
 * Subsystem:	'C40 Helios executive
 * Author:	P.A.Beskeen
 * Date:	Nov '91
 *
 * Description: 'C40 specific Helios executive manifests. These allow you
 * 		to change the basic parameters of the 'C40 executive.
 *
 * WARNING:	Changes to these values should be reflected in "c40exec.m"
 *
 * RcsId: $Id: c40exec.h,v 1.13 1993/02/05 11:12:56 paul Exp paul $
 *
 * (C) Copyright 1991 Perihelion Software Ltd.
 * 
 * RcsLog: $Log: c40exec.h,v $
 * Revision 1.13  1993/02/05  11:12:56  paul
 * fixed timeslice to 100th of a sec rather than a tenth
 *
 * Revision 1.12  1992/11/25  13:20:15  nick
 * types of _GetAddrBase() and _SetAddrBase() chaged to agree with <c40.h>.
 *
 * Revision 1.11  1992/11/18  14:40:20  paul
 * removed CHECKSS - now use one std CheckSaveState() macro
 *
 * Revision 1.10  1992/08/18  09:53:47  paul
 * added Get/SetAddrBase protos, allowed on-chip ram to be legal position in
 * checks for .pc/.lr
 *
 * Revision 1.9  1992/08/04  18:01:47  paul
 * added proto
 *
 * Revision 1.8  1992/07/30  18:33:39  paul
 * removes idle mon and stops checking savestate address uppper bound
 *
 * Revision 1.7  1992/06/26  17:57:32  paul
 * changed ticksperslice to just a default, not fixed
 *
 * Revision 1.6  1992/06/16  08:43:58  paul
 * added GTrace prototype
 *
 * Revision 1.5  1992/05/14  13:30:36  paul
 *  updated for inline opcode macros
 * ,.
 *
 * Revision 1.4  1992/05/14  08:45:16  paul
 * changed timeslice to 1/10th of a sec
 *
 * Revision 1.3  1992/04/28  09:23:10  paul
 * added CHECKSS macro to check savestate validity
 *
 * Revision 1.2  1992/04/21  09:54:56  paul
 * alpha version
 *
 * Revision 1.1  1991/12/03  11:49:44  paul
 * Initial revision
 *
 *
 */

#ifndef __c40exec_h
#define __c40exec_h

#include <c40.h>
#include <event.h>	/* for IntsOn/Off() */

#define LINKDMA	1	/* define if we are using DMA in concert with links */

#ifndef LINKDMA
# define LINKINTR 1
#endif

#define	LINKIO	1		/* processor has links		*/
#define	PERFMON 1		/* enable performance monitor	*/
#define	ONCHIPRAM 1		/* processor has on-chip RAM	*/

/* Number of priority levels */
#define PRIORITYLEVELS		8

/* Number of on-chip comms links */
#define COMMSLINKS		6

/* number of on-chip DMA engines */
#define DMAENGS			6

/* DEFAULTTICKSPERSLICE defines the default number of clock ticks for each */
/* thread before it is sliced - currently the clock ticks at one millisecond */
/* intervals */
#define DEFAULTTICKSPERSLICE	10	/* 1/100 of a second slice */

/* DISPATCHSTACKSIZE is the maximum size of stack required for a call to */
/* Dispatch(). It is use to allow a thread to stay in the dispatchers idle */
/* loop until a new thread is sheduled, but still allow interrupts to occur */
#define DISPATCHSTACKSIZE	40	/* words of stack space */

/* Enable interrupts and idle until an interrupt occurs */
/* On the 'C40 this means Execute the IDLE instruction */
void IdleUntilInterrupt(void);


/* 'C40 specific internal DMA functions */
#ifdef ALLOCDMA /* @@@@@@ upgrade when we re-implement these functions */
void InitDMA(void);
word _AllocDMA(RootStruct *root, word timeout, word link, word flags);
void _FreeDMA(RootStruct *root, word DMAEng);
word AvailDMA(void);	/* @@@@@@? return number of unused DMA engines */
word MapDMA(void);	/* @@@@@@? return bitmap of available DMA engines */
#endif


/* 'C40 specific link communication functions */
int TxFIFOSpace(Channel);
int RxFIFOSpace(Channel);
#ifdef LINKDMA
void InitLinkDMA(word DMAEng);
#else
void InitLink(word channel);
#endif


/* C40 specific C data address base functions */
MPtr _GetAddrBase(void);
void _SetAddrBase(MPtr addrbase);


/* kernel/exec debugging functions */
void WriteWord(word x);	/* tmp debug */
word ReadWord(void);	/* tmp debug */
word GRead(word addr);	/* tmp debug */
void GTrace(word data); /* tmp dbg - write to global trace buffer */
void GWrite(word addr, word data);			/* tmp debug */
void GWriteB(word addr, word size, word *buffer);	/* tmp debug */
void DumpComms(word size, LinkInfo *link, void *buf);	/* tmp dbg */

#ifdef LATENCYTEST
void DispatchLatTest(void);
#endif


#endif /* __c40exec_h */


/* end of c40exec.h */
@


1.13
log
@fixed timeslice to 100th of a sec rather than a tenth
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.12 1992/11/25 13:20:15 nick Exp $
d17 3
d134 4
@


1.12
log
@types of _GetAddrBase() and _SetAddrBase() chaged to agree with <c40.h>.
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.11 1992/11/18 14:40:20 paul Exp nick $
d17 3
d86 1
a86 1
#define DEFAULTTICKSPERSLICE	100	/* 1/10 of a second slice */
@


1.11
log
@removed CHECKSS - now use one std CheckSaveState() macro
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.10 1992/08/18 09:53:47 paul Exp $
d17 3
d116 2
a117 2
word _GetAddrBase(void);
void _SetAddrBase(word addrbase);
@


1.10
log
@added Get/SetAddrBase protos, allowed on-chip ram to be legal position in
checks for .pc/.lr
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.9 1992/08/04 18:01:47 paul Exp $
d17 4
a125 4
#ifdef SYSDEB
#define CHECKSS(x)	if((x) < (SaveState *)(0x2ff800*4)) \
			{_Trace(0xdeaddddd, (word)x, 0); JTAGHalt();}
#endif
a127 1

@


1.9
log
@added proto
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.8 1992/07/30 18:33:39 paul Exp $
d17 3
a61 1
#define	IDLEMON 0		/* @@@@@@ delete me */
a86 4
#if 0
#define __TIM40		/* define if compiling for TIM40 standard */
#endif

d97 1
d107 7
a113 1
/* Temporary kernel/exec debugging functions */
d123 1
a123 1
#define CHECKSS(x)	if((x) < (SaveState *)(0x312000*4)) \
@


1.8
log
@removes idle mon and stops checking savestate address uppper bound
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.7 1992/06/26 17:57:32 paul Exp $
d17 3
d115 1
@


1.7
log
@changed ticksperslice to just a default, not fixed
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.6 1992/06/16 08:43:58 paul Exp $
d17 3
d56 1
a56 1
#define	IDLEMON 1		/* enable Idle monitor		*/
d114 1
a114 2
#define CHECKSS(x)	if((x)>(SaveState *)(0x400000*4) \
			|| (x) < (SaveState *)(0x312000*4)) \
@


1.6
log
@added GTrace prototype
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.5 1992/05/14 13:30:36 paul Exp $
d17 3
d65 4
a68 3
/* TICKSPERSLICE defines the number of clock ticks for each thread before */
/* it is sliced - currently the clock ticks at one millisecond intervals */
#define TICKSPERSLICE		100	/* 1/10 of a second slice */
@


1.5
log
@ updated for inline opcode macros
,.
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.4 1992/05/14 08:45:16 paul Exp $
d17 4
a98 1
void Output(char *msg);	/* tmp debug */
d102 1
@


1.4
log
@changed timeslice to 1/10th of a sec
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.3 1992/04/28 09:23:10 paul Exp $
d17 3
d36 1
@


1.3
log
@added CHECKSS macro to check savestate validity
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.2 1992/04/21 09:54:56 paul Exp $
d17 3
d34 6
d56 1
a56 1
#define TICKSPERSLICE		25	
d84 1
d86 3
d94 3
d98 1
d100 1
a100 1
			|| (x) < (SaveState *)(0x350000 *4)) \
d102 1
@


1.2
log
@alpha version
@
text
@d12 1
a12 1
 * RcsId: $Id: c40exec.h,v 1.1 1991/12/03 11:49:44 paul Exp $
d17 3
d81 4
@


1.1
log
@Initial revision
@
text
@d12 1
a12 1
 * RcsId: $Id$
d16 3
a18 1
 * RcsLog: $Log$
d20 1
d26 6
a31 5
#if 1	/* when world setup */
# include "c40.h"
#else
# include <c40.h>
#endif
d39 3
d55 24
a83 1

@
