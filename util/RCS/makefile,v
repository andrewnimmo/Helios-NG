head	1.17;
access;
symbols
	Helios_1_3_1:1.17
	Helios_C40_1_3_Official_Release:1.15
	Alenia_release:1.15
	Helios1_3:1.15
	C40_Field_Test_2:1.15
	C40_Field_Test_R1:1.10
	Helios13_beta:1.10
	Helios1_2_2:1.8
	Helios1_2_2Beta:1.8
	Helios1_2_1:1.8
	Helios1_2:1.4
	V1_2Beta0:1.2;
locks; strict;
comment	@# @;


1.17
date	93.08.06.12.37.24;	author bart;	state Exp;
branches;
next	1.16;

1.16
date	93.08.05.13.06.04;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	92.09.15.17.09.41;	author paul;	state Exp;
branches;
next	1.14;

1.14
date	92.08.14.18.07.16;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	92.08.04.16.07.55;	author bart;	state Exp;
branches;
next	1.12;

1.12
date	92.07.31.11.28.46;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	92.07.27.09.38.05;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.04.10.16.47.26;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	92.02.26.17.01.48;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	91.03.01.17.56.51;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	91.03.01.17.22.35;	author martyn;	state Exp;
branches;
next	1.6;

1.6
date	91.02.14.23.02.49;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	91.01.22.18.14.17;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	90.10.19.15.29.08;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.10.02.17.21.40;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.18.12.53.16;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.14.27.48;	author nick;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Sorted out stackchecking options
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Utility Library
#
# File: /HSRC/util/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.15 1992/09/15 17:09:41 paul Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = util

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
  HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS := util.i util.def

default : $(TARGETS) Xdefault


install	: installdef $(TARGETS) Xinstall
ifeq ($(HLICENSEE),ABC)		# depreciated function - delete me
	sysstrip util.i -o$(LIB)/util
else
	$(CP) util.i $(LIB)/util
endif
	$(TOUCH) install


installdef: $(LIB)/util.def
	$(TOUCH) installdef

$(LIB)/util.def : util.def
ifeq (HELIOS,$(findstring HELIOS,$(HHOST))) #csh default on Helios hosts
	(cmp $^ $@@ ; if ( $$status ) cp $^ $@@ )
else
	@@ if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
endif


clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) *.s \
		mkout core ../mkout install installdef Xinstall 

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		   $(HEADERS.c) $(HEADERS.m) \
		   $(SOURCES.odd)

#Full set of library object files
OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
#OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	=  misc.c

# AMPP source files
SOURCES.a	= utilstar.a utilasm.a modend.a

# C header files
HEADERS.c	=

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
# Possible flags are:
#	-DSTACKCHECK
#
ifeq ($(HPROC),TRAN)
    NCFLAGS := $(NCFLAGS) -ps1
endif
ifeq ($(HPROC),C40)
# -Zpw1 = little data < 64k static data optimisation
    NCFLAGS := $(NCFLAGS) -Zpw1 -DSTACKCHECK
endif
ifeq ($(HPROC),ARM)
# -Zt = tiny memory model
    NCFLAGS := $(NCFLAGS) -Zt
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/kernel.def $(LIB)/syslib.def


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

ifeq ($(HPROC),C40)
 UTIL.OBJECTS = utilstar.p utilasm.p misc.p string.p c40string.p modend.p
else
 ifeq ($(HPROC),ARM)
  UTIL.OBJECTS = utilstar.p utilasm.p misc.p string.p pseudtrap.p modend.p
 else
  UTIL.OBJECTS = utilstar.p utilasm.p misc.p string.p modend.p
 endif
endif

util.i: $(UTIL.OBJECTS) $(LIBDEFS)
	$(LINK.LIBRARY) -nUtil $^ -o$@@

util.def: utilstar.a
	$(MAKE.DEF)



endif #InProcMake	# This line must be at EOF
@


1.16
log
@merged with latest ARM port
@
text
@d137 3
d141 3
a143 3
  NCFLAGS := $(NCFLAGS) -ps1
else
  ifeq ($(HPROC),C40)
d145 3
a147 3
    NCFLAGS := $(NCFLAGS) -Zpw1
  else
    ifeq ($(HPROC),ARM)
d149 1
a149 3
      NCFLAGS := $(NCFLAGS) -Zt
    endif
  endif
@


1.15
log
@updated for new arm version
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.14 1992/08/14 18:07:16 paul Exp paul $
d144 4
a147 1
    NCFLAGS := $(NCFLAGS)
d164 5
a168 1
 UTIL.OBJECTS = utilstar.p utilasm.p misc.p string.p modend.p
@


1.14
log
@fixed for littledata pragma on C40
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.12 1992/07/31 11:28:46 nickc Exp $
d80 1
a80 1
ifeq ($(HPROC),ARM)
@


1.13
log
@Fixed for remote source
@
text
@d137 2
a138 2
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
d141 3
a144 2
  else
    NCFLAGS := $(NCFLAGS) -ps1
@


1.12
log
@tidied up util.def rule
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.11 1992/07/27 09:38:05 paul Exp nickc $
d60 1
a60 1
VPATH := $(HSRC)/$(COMPONENT)
d63 1
a63 1
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d65 4
@


1.11
log
@enable stack_cjecking in C40 version.
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.10 1992/04/10 16:47:26 paul Exp $
d91 1
a91 1
	if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
@


1.10
log
@fixed for c40 port
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.9 1992/02/26 17:01:48 paul Exp $
d134 1
a134 1
  NCFLAGS := $(NCFLAGS) -Zps1
d137 1
a137 1
    NCFLAGS := $(NCFLAGS) -Zps1
@


1.9
log
@initial support for C40
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.8 91/03/01 17:56:51 martyn Exp $
d153 5
a157 1
UTIL.OBJECTS = utilstar.p utilasm.p misc.p string.p modend.p
@


1.8
log
@corrected last fix
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.7 91/03/01 17:22:35 martyn Exp $
d96 2
a97 2
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall
d136 5
a140 1
  NCFLAGS := $(NCFLAGS) -ps1
@


1.7
log
@added string.a to SOURCES.a
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.6 91/02/14 23:02:49 paul Exp $
d117 1
a117 1
SOURCES.a	= utilstar.a utilasm.a modend.a string.a
@


1.6
log
@added support for new -o option to sysstrip (ARM)
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.5 91/01/22 18:14:17 paul Exp Locker: paul $
d117 1
a117 1
SOURCES.a	= utilstar.a utilasm.a modend.a
@


1.5
log
@added support for patching individual items in the nucleus (sysstrip)
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.4 90/10/19 15:29:08 paul Exp $
d77 1
a77 1
	sysstrip util.i $(LIB)/util
@


1.4
log
@just a comment typo
@
text
@d15 1
a15 1
# RcsId: $Id: makefile,v 1.3 90/10/02 17:21:40 nick Exp $
d76 3
d80 1
@


1.3
log
@now uses DFLT.mak for local options, RSRC for remote sources
@
text
@a13 4
# *WARNING* The transputer version uses the new autolibrary style of library
# contruction. The ARM version still uses the old style until the -Zl opt is
# available, when this is done utilasm.a and utilstar.a should be updated.
#
d15 1
a15 1
# RcsId: $Id: makefile,v 1.2 90/09/18 12:53:16 nick Exp $
@


1.2
log
@installdef target now allows for empty $(LIB)
@
text
@d19 1
a19 1
# RcsId: $Id: makefile,v 1.1 90/09/05 14:27:48 nick Exp Locker: nick $
d28 6
a33 4
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif
a34 12
  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

d65 4
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
# RcsId: $Id$
d90 1
a90 2
installdef: util.def
	$(CP) $^ $(LIB)
d92 7
@
