head	1.48;
access;
symbols
	Helios_C40_1_3_Official_Release:1.47
	Helios-C40:1.47
	Alenia_release:1.47
	Helios1_3:1.47
	C40_Field_Test_2:1.39
	C40_Field_Test_R1:1.39
	Helios13_beta:1.39
	Helios1_2_2:1.35
	Helios1_2_2Beta:1.30
	Helios1_2_1:1.28
	Helios1_2:1.24;
locks; strict;
comment	@# @;


1.48
date	94.01.07.17.51.34;	author nickc;	state Exp;
branches;
next	1.47;

1.47
date	92.10.30.12.43.09;	author martyn;	state Exp;
branches;
next	1.46;

1.46
date	92.10.30.12.39.19;	author martyn;	state Exp;
branches;
next	1.45;

1.45
date	92.10.28.11.18.15;	author bart;	state Exp;
branches;
next	1.44;

1.44
date	92.10.28.10.24.04;	author bart;	state Exp;
branches;
next	1.43;

1.43
date	92.10.28.10.21.34;	author bart;	state Exp;
branches;
next	1.42;

1.42
date	92.10.27.15.07.22;	author bart;	state Exp;
branches;
next	1.41;

1.41
date	92.10.27.15.01.13;	author bart;	state Exp;
branches;
next	1.40;

1.40
date	92.10.27.11.44.26;	author bart;	state Exp;
branches;
next	1.39;

1.39
date	92.06.27.13.01.04;	author bart;	state Exp;
branches;
next	1.38;

1.38
date	91.12.06.11.15.58;	author martyn;	state Exp;
branches;
next	1.37;

1.37
date	91.12.04.12.46.08;	author martyn;	state Exp;
branches;
next	1.36;

1.36
date	91.12.02.17.10.58;	author martyn;	state Exp;
branches;
next	1.35;

1.35
date	91.11.12.16.34.41;	author martyn;	state Exp;
branches;
next	1.34;

1.34
date	91.11.12.16.05.50;	author martyn;	state Exp;
branches;
next	1.33;

1.33
date	91.08.30.16.02.34;	author martyn;	state Exp;
branches;
next	1.32;

1.32
date	91.08.30.10.52.28;	author bart;	state Exp;
branches;
next	1.31;

1.31
date	91.08.30.10.25.39;	author bart;	state Exp;
branches;
next	1.30;

1.30
date	91.04.07.13.59.17;	author bart;	state Exp;
branches;
next	1.29;

1.29
date	91.04.03.16.45.27;	author martyn;	state Exp;
branches;
next	1.28;

1.28
date	91.04.02.17.50.52;	author martyn;	state Exp;
branches;
next	1.27;

1.27
date	91.04.02.13.36.16;	author martyn;	state Exp;
branches;
next	1.26;

1.26
date	91.04.02.13.28.10;	author martyn;	state Exp;
branches;
next	1.25;

1.25
date	91.03.19.14.59.33;	author martyn;	state Exp;
branches;
next	1.24;

1.24
date	90.12.03.11.26.18;	author martyn;	state Exp;
branches;
next	1.23;

1.23
date	90.11.27.12.06.34;	author martyn;	state Exp;
branches;
next	1.22;

1.22
date	90.11.27.12.02.28;	author martyn;	state Exp;
branches;
next	1.21;

1.21
date	90.11.16.17.56.42;	author martyn;	state Exp;
branches;
next	1.20;

1.20
date	90.11.16.17.49.28;	author martyn;	state Exp;
branches;
next	1.19;

1.19
date	90.11.06.16.32.33;	author martyn;	state Exp;
branches;
next	1.18;

1.18
date	90.11.06.15.55.25;	author martyn;	state Exp;
branches;
next	1.17;

1.17
date	90.10.23.17.45.52;	author martyn;	state Exp;
branches;
next	1.16;

1.16
date	90.10.22.16.43.04;	author martyn;	state Exp;
branches;
next	1.15;

1.15
date	90.10.22.16.37.11;	author martyn;	state Exp;
branches;
next	1.14;

1.14
date	90.10.22.16.30.00;	author martyn;	state Exp;
branches;
next	1.13;

1.13
date	90.10.22.14.38.40;	author martyn;	state Exp;
branches;
next	1.12;

1.12
date	90.10.22.12.51.30;	author martyn;	state Exp;
branches;
next	1.11;

1.11
date	90.10.22.12.20.49;	author martyn;	state Exp;
branches;
next	1.10;

1.10
date	90.10.22.11.50.13;	author martyn;	state Exp;
branches;
next	1.9;

1.9
date	90.10.22.10.39.18;	author martyn;	state Exp;
branches;
next	1.8;

1.8
date	90.10.22.09.46.14;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	90.10.19.17.35.54;	author martyn;	state Exp;
branches;
next	1.6;

1.6
date	90.10.19.17.31.20;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	90.10.19.15.58.11;	author martyn;	state Exp;
branches;
next	1.4;

1.4
date	90.10.19.13.57.49;	author martyn;	state Exp;
branches;
next	1.3;

1.3
date	90.10.19.12.40.32;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	90.10.09.12.52.38;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.10.08.15.44.55;	author nick;	state Exp;
branches;
next	;


desc
@Helios release desription file
@


1.48
log
@updated to 1.3.1 sources and added EXTRAS option
@
text
@/*{{{  Introductory Comment */

/*--------------------------------------------------------------*/
/* Helios V1.3.1 release description file			*/
/*								*/
/* This file contains the names of all the files which		*/
/* constitute a release of Helios. Only the files named here	*/
/* should be on a release master disc. 				*/
/*								*/
/* This file is written as input to cpp, the output will be a	*/
/* shell script which will perform the required actions when	*/
/* sourced.							*/
/* 								*/
/* The possible commands are:					*/
/*								*/
/* $(CPP) -DHELIOS=XXX [-DHPROC=YYY] ...			*/
/*		Test that all release files exist		*/
/*								*/
/* $(CPP) -DCOPY -DHELIOS=XXX -DRELDIR=ZZZ [-DHPROC=YYY] ...	*/
/* 		Copy release to given RELease DIRectory		*/
/*								*/
/* $(CPP) -DTAR -DHELIOS=XXX -DTARFILE=ZZZ [-DHPROC=YYY] ...	*/
/*		Generate a TAR file of the release		*/
/*								*/
/* $(CPP) -DEXTRAS -DHELIOS=XXX -DTARFILE=ZZZ [-DHPROC=YYY] ...	*/
/*		Test that no extra files exist		    	*/
/*								*/
/* Defines:							*/
/*								*/
/* HELIOS	- pathname of helios system to release		*/
/* RELDIR	- pathname of destination release directory	*/
/* TARFILE	- pathname of destination tar file		*/
/* HPROC	- optional processor type (default = TRAN)	*/
/*								*/
/* Any further -D options define the components to be released	*/
/*								*/
/* SYSTEM	- Standard system, multi-user multi-processor	*/
/* BASIC	- Cut down system without any network software	*/
/* TINY		- Tiny Helios, single-user single-processor	*/
/* MULTI_SINGLE - multi-user single-processor			*/
/* DEBUG	- debugger					*/
/* FS		- File System					*/
/* TCPIP	- TCP/IP system					*/
/* X11R4	- X Windows V11 Release 4			*/
/* PC		- Include PC specific files			*/
/*								*/
/*--------------------------------------------------------------*/
/* $Id: Files,v 1.47 1992/10/30 12:43:09 martyn Exp $ */

/*}}}*/
/*{{{  Setup */

#ifdef unix
#undef unix
#endif

#ifndef HELIOS
# ifdef HPROC
#  define HELIOS /hrel/V1.3.1/HPROC/Binaries
# else
#  error Must define the HELIOS parameter
# endif
#endif

/* NB/ must use $dir rather than HELIOS in macros below as we
 * define C40 and TRAN and these will be substituted into any
 * use of HELIOS.
 */

set dir = HELIOS

/*}}}*/
/*{{{  RELEASE macros */

#ifdef COPY
#  ifndef RELDIR
#    error Must define a RELDIR parameter when creating COPY script
#  endif
   set reldir = RELDIR
   echo Copying Helios 1.3.1 files from $dir to $reldir
#  define RELEASE(x) cp $dir/x  $reldir/x
#  define RELEASE2(x,y) cp $dir/x $reldir/y
#  define RELEASEDIR(x) mkdir $reldir/x
#elif defined TAR
#  define RELEASE(x) echo x >> relfiles
#  define RELEASE2(x,y) cp $dir/x $dir/y ; echo y >> relfiles
#  define RELEASEDIR(x) echo Processing x ...
#elif defined LIST 
   echo Creating \"listfiles\" of expected contents of Helios 1.3.1 release
#  define RELEASE(x) echo x >> listfiles
#  define RELEASE2(x,y) echo x y >> listfiles
#  define RELEASEDIR(x) echo Processing x ...
#elif defined EXTRAS
   echo Creating \"extrafiles\" containing a list of non-Helios 1.3.1 files in $dir
#  define RELEASE(x)    rm -f found/x
#  define RELEASE2(x,y) rm -f found/x ; rm -f found/y
#  define RELEASEDIR(x) 
#  define SYSTEM
#  define DEBUG
#  define CC
#  define TCPIP
#  define MULTI_SINGLE
#else
   echo Testing for omissions of Helios 1.3.1 files in $dir
#  define RELEASE(x) test -f $dir/x || echo File $dir/x does not exist
#  define RELEASE2(x,y) test -f $dir/x || echo File $dir/x does not exist
#  define RELEASEDIR(x) test -d $dir/x || echo Directory $dir/x does not exist
#endif

/*}}}*/
/*{{{  Pre Processing */

#ifdef TAR
rm -f relfiles
#endif

#if defined LIST
rm -f listfiles list.rel
#endif

#ifdef EXTRAS
rm -f expected
rm -fr found
mkdir found
lndir -silent $dir found
#endif

#if defined(SYSTEM) || defined(BASIC) || defined(TINY) || defined(MULTI_SINGLE)
#  define BIN
#  define LIB
#  define ETC
#  define LOCAL
#  define MISC
#  define EXAMPLES
#  define HELP
#endif

#define TRAN 1
#define C40  2

#ifdef HPROC
# if HPROC != TRAN && HPROC != C40 
   echo Unknown processor type in HPROC parameter
# endif
#else
# define HPROC TRAN
  echo Assuming that processor type is Transputer
#endif

#if defined(CC)
#  define SA
#  define INCLUDE
#endif

/*}}}*/
/*{{{  Directories */

#ifdef BIN
/*{{{  bin */

RELEASEDIR(bin)

/* Standard commands						*/

RELEASE(bin/ascii)
RELEASE(bin/atob)
RELEASE(bin/basename)
RELEASE(bin/bsplit)
RELEASE(bin/btoa)
RELEASE(bin/c)
RELEASE(bin/cache)
RELEASE(bin/cal)
RELEASE(bin/cat)
RELEASE(bin/chmod)
RELEASE(bin/clear)
RELEASE(bin/cmp)
RELEASE(bin/colrm)
RELEASE(bin/comm)
RELEASE(bin/compress)
RELEASE(bin/compress.14)
RELEASE(bin/cp)
RELEASE(bin/date)
RELEASE(bin/df)
RELEASE(bin/diff)
RELEASE(bin/dirname)
RELEASE(bin/du)
RELEASE(bin/dump)
RELEASE(bin/egrep)
RELEASE(bin/emacs)
RELEASE(bin/emacs.old)
RELEASE(bin/false)
RELEASE(bin/fgrep)
RELEASE(bin/find)
RELEASE(bin/fold)
RELEASE(bin/gdi)
RELEASE(bin/grep)
RELEASE(bin/head)
RELEASE(bin/join)
RELEASE(bin/leave)
#ifndef BASIC
RELEASE(bin/lb)
#endif
RELEASE(bin/ln)
RELEASE(bin/loadpac)
RELEASE(bin/ls)
RELEASE(bin/make)
RELEASE(bin/map)
RELEASE(bin/mem)
RELEASE(bin/mkdir)
RELEASE(bin/more)
RELEASE(bin/mv)
RELEASE(bin/remote.nrm)
RELEASE(bin/objed)
RELEASE(bin/od)
RELEASE(bin/pr)
RELEASE(bin/refine)
RELEASE(bin/rev)
RELEASE(bin/rm)
RELEASE(bin/rmdir)
RELEASE(bin/shell)
RELEASE(bin/sleep)
RELEASE(bin/sort)
RELEASE(bin/split)
RELEASE(bin/strings)
RELEASE(bin/sysbuild)
RELEASE(bin/sysbreak)
RELEASE(bin/tail)
RELEASE(bin/tcp)
RELEASE(bin/tee)
RELEASE(bin/test)
RELEASE(bin/touch)
RELEASE(bin/true)
RELEASE(bin/uniq)
RELEASE(bin/waitfor)
RELEASE(bin/wc)
RELEASE(bin/which)
RELEASE(bin/xlatecr)
RELEASE(bin/yes)

/* Network commands						*/

RELEASE(bin/stopio)
RELEASE(bin/rebootio)
RELEASE(bin/logname)
RELEASE(bin/tty)
RELEASE(bin/id)
RELEASE(bin/uptime)
RELEASE(bin/run)
RELEASE(bin/passadm)

#if HPROC == TRAN
RELEASE(bin/access)
RELEASE(bin/asm)
RELEASE(bin/matrix)
#endif

#if HPROC == C40
RELEASE(bin/idrom)
RELEASE(bin/slice)
RELEASE(bin/threadps)
#endif

#ifdef BASIC
RELEASE2(bin/login.ss,bin/login)
RELEASE2(bin/newuser.su,bin/newuser)
RELEASE2(bin/ps.sp,bin/ps)
RELEASE2(bin/loaded.sp,bin/loaded)
RELEASE2(bin/wsh.sp,bin/wsh)
RELEASE2(bin/kill.sp,bin/kill)
#endif

#ifdef TINY
RELEASE(bin/cdl)
RELEASE(bin/diag_tfm)
RELEASE(bin/findtfm)
RELEASE2(bin/login.ss,bin/login)
RELEASE2(bin/newuser.su,bin/newuser)
RELEASE2(bin/ps.sp,bin/ps)
RELEASE2(bin/loaded.sp,bin/loaded)
RELEASE2(bin/wsh.sp,bin/wsh)
RELEASE2(bin/kill.sp,bin/kill)
#endif

#ifdef MULTI_SINGLE
RELEASE(bin/cdl)
RELEASE(bin/diag_tfm)
RELEASE(bin/findtfm)
RELEASE2(bin/login.sp,bin/login)
RELEASE2(bin/ps.sp,bin/ps)
RELEASE2(bin/loaded.sp,bin/loaded)
RELEASE2(bin/wsh.sp,bin/wsh)
RELEASE2(bin/kill.sp,bin/kill)
RELEASE2(bin/startns.sp,bin/startns)
RELEASE(bin/newuser)
RELEASE(bin/write)
RELEASE(bin/wall)
RELEASE(bin/users)
RELEASE(bin/whoami)
RELEASE(bin/who)
RELEASE(bin/sendto)
RELEASE(bin/findsm)
#endif

#ifdef SYSTEM
RELEASE(bin/cdl)
RELEASE(bin/diag_tfm)
RELEASE(bin/diag_sm)
RELEASE(bin/findtfm)
RELEASE(bin/login)
RELEASE(bin/ps)
RELEASE(bin/loaded)
RELEASE(bin/wsh)
RELEASE(bin/kill)
RELEASE(bin/startns)
RELEASE(bin/newuser)
RELEASE(bin/write)
RELEASE(bin/wall)
RELEASE(bin/users)
RELEASE(bin/whoami)
RELEASE(bin/who)
RELEASE(bin/sendto)
RELEASE(bin/diag_ns)
RELEASE(bin/findsm)
RELEASE(bin/findns)
RELEASE(bin/domain)
RELEASE(bin/network)
RELEASE(bin/elink)
RELEASE(bin/plink)
RELEASE(bin/dlink)
RELEASE(bin/lstatus)
RELEASE(bin/rmgen)
RELEASE(bin/remote)
RELEASE(bin/joinnet)
RELEASE(bin/clink)
RELEASE(bin/rboot)
#if HPROC == TRAN
RELEASE(bin/pa_rboot)
RELEASE(bin/tr_reset)
RELEASE(bin/pa_reset)
#endif
#endif

#ifdef TCPIP
RELEASE(bin/ftp)
RELEASE(bin/lpc)
RELEASE(bin/lpq)
RELEASE(bin/lpr)
RELEASE(bin/lprm)
RELEASE(bin/lptest)
RELEASE(bin/mail)
RELEASE(bin/pall)
RELEASE(bin/ping)
RELEASE(bin/rcp)
RELEASE(bin/rlogin)
RELEASE(bin/route)
RELEASE(bin/rsh)
RELEASE(bin/setterm)
RELEASE(bin/telnet)
#endif

#ifdef HELP
RELEASE(bin/dbbuild)
RELEASE(bin/dbdump)
RELEASE(bin/dbprint)
RELEASE(bin/help)
RELEASE(bin/truncate)
#endif
  
#ifdef CC
RELEASEDIR(bin)
RELEASE(bin/cc)
RELEASE(bin/ncc)
RELEASE(bin/ld)
RELEASE(bin/imdump)
RELEASE(bin/objdump)
RELEASE(bin/as)
RELEASE(bin/disas)
#endif
  

/*}}}*/
#endif /* BIN */

#ifdef LIB
/*{{{  lib */

RELEASEDIR(lib)

/* System files							*/

RELEASE(lib/alias)
RELEASE(lib/bsd.lib)
RELEASE(lib/c.lib)
RELEASE(lib/c0.o)
RELEASE(lib/Clib)
RELEASE(lib/clib.def)
RELEASE(lib/cstart.o)
RELEASE(lib/Fault)
RELEASE(lib/fault.def)
RELEASE(lib/fifo)
RELEASE(lib/fplib.def)
RELEASE(lib/helios.lib)
RELEASE(lib/init)
RELEASE(lib/kernel.def)
RELEASE(lib/nucleus)
RELEASE(lib/null)
RELEASE(lib/pipe)
RELEASE(lib/Posix)
RELEASE(lib/posix.def)
RELEASE(lib/ram)
RELEASE(lib/s0.o)
RELEASE(lib/servlib.def)
RELEASE(lib/sstart.o)
RELEASE(lib/syslib.def)
RELEASE(lib/termcap.lib)
RELEASE(lib/util)
RELEASE(lib/util.def)
RELEASE(lib/vect.lib)

#if HPROC == TRAN
RELEASE(lib/nboot.i)
RELEASE(lib/fpclib)
RELEASE(lib/fpclib.def)
RELEASE(lib/FpLib.t4)
RELEASE(lib/FpLib.t8)
#else
RELEASE(lib/FpLib)
#endif

#if HPROC == C40
RELEASE(lib/IEEE64.lib)
RELEASE(lib/c40boot.i)
RELEASE(lib/c40aboot.i)
RELEASE(lib/c40hboot.i)
RELEASE(lib/c40mboot.i)
RELEASE(lib/c40rombt.i)
RELEASE(lib/c40sboot.i)
RELEASE(lib/nucleus.sml)
#endif

#ifdef DEBUG
RELEASE(lib/dlib)
RELEASE(lib/dlib.def)
#endif

#ifdef TCPIP
RELEASE(lib/curses.lib)
RELEASE(lib/ether.d)
RELEASE(lib/ftpd)
RELEASE(lib/inetd)
RELEASE(lib/lpd)
RELEASE(lib/lpd_aux)
RELEASE(lib/nfs)
RELEASE(lib/pc-ether.d)
RELEASE(lib/rexecd)
RELEASE(lib/rlogind)
RELEASE(lib/rshd)
RELEASE(lib/sendmail)
RELEASE(lib/smtp)
RELEASE(lib/telnetd)
RELEASE(lib/tcpip)
RELEASE(lib/tpseudo.d)
RELEASE(lib/tserial.d)
RELEASE(lib/ttyserv)
#endif

#if defined(TINY) || defined(MULTI_SINGLE) || defined(SYSTEM)
RELEASE(lib/RmLib)
RELEASE(lib/RmLib.def)
RELEASE(lib/farm.lib)
#endif

#ifdef TINY
RELEASE2(lib/tfm.sp,lib/tfm)
#endif

#ifdef MULTI_SINGLE
RELEASE2(lib/tfm.sp,lib/tfm)
RELEASE2(lib/session.sp,lib/session)
RELEASE(lib/session.lib)
#endif

#ifdef SYSTEM
RELEASE(lib/netagent)
RELEASE(lib/netserv)
RELEASE(lib/null_ra.d)
RELEASE(lib/session)
RELEASE(lib/session.lib)
RELEASE(lib/tfm)
#if HPROC == TRAN
RELEASE(lib/tram_ra.d)
RELEASE(lib/pa_ra.d)
#endif
#endif

#ifdef DEBUG
RELEASE(lib/tla)
#endif

/* Others							*/

#ifdef HELP
RELEASE(lib/help0.dct)
RELEASE(lib/help0.txt)
#endif

/*}}}*/
#endif /* LIB */

#ifdef INCLUDE
/*{{{  include */

RELEASEDIR(include)

/* Helios headers						*/
RELEASE(include/asm.h)
RELEASE(include/attrib.h)
RELEASE(include/bytblt.h)
RELEASE(include/c40.h)
RELEASE(include/codes.h)
RELEASE(include/config.h)
RELEASE(include/cpustate.h)
RELEASE(include/dbm.h)
RELEASE(include/device.h)
RELEASE(include/environ.h)
RELEASE(include/event.h)
RELEASE(include/fault.h)
RELEASE(include/gsp.h)
RELEASE(include/helios.h)
RELEASE(include/ioevents.h)
RELEASE(include/lb.h)
RELEASE(include/link.h)
RELEASE(include/memory.h)
RELEASE(include/message.h)
RELEASE(include/module.h)
RELEASE(include/netdb.h)
RELEASE(include/nonansi.h)
RELEASE(include/process.h)
RELEASE(include/protect.h)
RELEASE(include/queue.h)
RELEASE(include/root.h)
RELEASE(include/sem.h)
RELEASE(include/servlib.h)
RELEASE(include/syslib.h)
RELEASE(include/task.h)
RELEASE(include/vectlib.h)
#if HPROC == C40
RELEASE(include/IEEE64.h)
#endif

/* ANSI C Headers						*/
RELEASE(include/assert.h)
RELEASE(include/ctype.h)
RELEASE(include/float.h)
RELEASE(include/limits.h)
RELEASE(include/locale.h)
RELEASE(include/math.h)
RELEASE(include/setjmp.h)
RELEASE(include/stdarg.h)
RELEASE(include/stddef.h)
RELEASE(include/stdio.h)
RELEASE(include/stdlib.h)
RELEASE(include/string.h)
RELEASE(include/time.h)

/* POSIX headers						*/
RELEASE(include/dirent.h)
RELEASE(include/errno.h)
RELEASE(include/fcntl.h)
RELEASE(include/grp.h)
RELEASE(include/posix.h)
RELEASE(include/pwd.h)
RELEASE(include/signal.h)
RELEASE(include/termios.h)
RELEASE(include/unistd.h)


/* BSD compatibility 						*/
RELEASE(include/getopt.h)
RELEASE(include/sgtty.h)
RELEASE(include/strings.h)
RELEASE(include/sysexits.h)
RELEASE(include/syslog.h)
RELEASE(include/termcap.h)
RELEASE(include/utime.h)
RELEASE(include/varargs.h)

/* Networking headers 						*/
RELEASE(include/rmlib.h)
RELEASE(include/session.h)
RELEASE(include/farmlib.h)

/* INCLUDE/SYS directory					*/

RELEASEDIR(include/sys)

/* POSIX headers						*/
RELEASE(include/sys/dir.h)
RELEASE(include/sys/hel.h)
RELEASE(include/sys/stat.h)
RELEASE(include/sys/types.h)
RELEASE(include/sys/utsname.h)
RELEASE(include/sys/wait.h)

/* BSD compatibility						*/
RELEASE(include/sys/errno.h)
RELEASE(include/sys/file.h)
RELEASE(include/sys/ioctl.h)
RELEASE(include/sys/param.h)
RELEASE(include/sys/resource.h)
RELEASE(include/sys/signal.h)
RELEASE(include/sys/socket.h)
RELEASE(include/sys/times.h)
RELEASE(include/sys/ttychars.h)
RELEASE(include/sys/ttydev.h)
RELEASE(include/sys/time.h)
RELEASE(include/sys/uio.h)
RELEASE(include/sys/un.h)

/* TCPIP support */
RELEASEDIR(include/arpa)
RELEASE(include/arpa/ftp.h)
RELEASE(include/arpa/inet.h)
RELEASE(include/arpa/nameser.h)
RELEASE(include/arpa/telnet.h)
RELEASE(include/arpa/tftp.h)
RELEASEDIR(include/net)
RELEASE(include/net/if.h)
RELEASE(include/net/if_arp.h)
RELEASEDIR(include/netinet)
RELEASE(include/netinet/icmp_var.h)
RELEASE(include/netinet/if_ether.h)
RELEASE(include/netinet/in.h)
RELEASE(include/netinet/in_pcb.h)
RELEASE(include/netinet/in_systm.h)
RELEASE(include/netinet/in_var.h)
RELEASE(include/netinet/ip.h)
RELEASE(include/netinet/ip_icmp.h)
RELEASE(include/netinet/ip_var.h)
RELEASE(include/netinet/tcp.h)
RELEASE(include/netinet/tcp_debug.h)
RELEASE(include/netinet/tcp_fsm.h)
RELEASE(include/netinet/tcp_seq.h)
RELEASE(include/netinet/tcp_timer.h)
RELEASE(include/netinet/tcp_var.h)
RELEASE(include/netinet/tcpip.h)
RELEASE(include/netinet/udp.h)
RELEASE(include/netinet/udp_var.h)

/*}}}*/
#endif /* INCLUDE */

#ifdef ETC
/*{{{  etc */

RELEASEDIR(etc)

RELEASE(etc/default.map)
RELEASE(etc/default.rm)
RELEASE(etc/emacs.hlp)
RELEASE(etc/faults)
RELEASE(etc/motd)
RELEASE(etc/passwd)
RELEASE(etc/sayhash)
RELEASE(etc/sayings)
  
#if HPROC == C40
  RELEASE(etc/README)
  RELEASE(etc/flaws)
  RELEASE(etc/dsp1.rom)
  
  RELEASEDIR(etc/hepc)
  RELEASE(etc/hepc/hepc.rm)
  RELEASE(etc/hepc/hepc.map)
  
  RELEASEDIR(spirit40)
  RELEASE(etc/spirit40/spirit40.rm)
  RELEASE(etc/spirit40/spirit40.rom)
  RELEASE(etc/spirit40/spirit40.map)
#endif

#ifdef DEBUG
  RELEASE(etc/debug.hlp)
  RELEASE(etc/debugrc)
#endif

#ifdef TCPIP
  RELEASE(etc/devinfo.net)
  RELEASE(etc/hosts)
  RELEASE(etc/hosts.equiv)
  RELEASE(etc/inetd.conf)
  RELEASE(etc/networks)
  RELEASE(etc/printcap)
  RELEASE(etc/protocols)
  RELEASE(etc/sendmail.hf)
  RELEASE(etc/services)
  RELEASE(etc/socket.conf)
  RELEASE(etc/termcap)
#endif
  
#if defined(BASIC) || defined(TINY)
 RELEASE2(etc/initrc.tin,etc/initrc)
#else
 RELEASE(etc/initrc)
#endif
#if defined(MULTI_SINGLE) || defined(SYSTEM)
 RELEASE(etc/nsrc)
#endif

/*}}}*/
#endif /* ETC */

#ifdef LOCAL
/*{{{  local */

/* LOCAL							*/

RELEASEDIR(local)

/* LOCAL/BIN							*/

RELEASEDIR(local/bin)
RELEASE(local/bin/gmake)
RELEASE(local/bin/tar)
RELEASE(local/bin/LICENCE)
RELEASE(local/bin/README)

#ifdef TCPIP
RELEASE(local/bin/laserpri)
RELEASE(local/bin/laserp)
RELEASE(local/lib/tinybiff)
#endif
  
/* LOCAL/LIB							*/

RELEASEDIR(local/lib)

/*}}}*/
#endif /* LOCAL */

#ifdef MISC
/*{{{  Miscellaneous directories */

#if defined(SUN3) || defined(SUN4) || defined(SUN386)
RELEASEDIR(tmp0)
RELEASE2(tmp/dummy,tmp0/dummy)
RELEASEDIR(tmp1)
RELEASE2(tmp/dummy,tmp1/dummy)
RELEASEDIR(tmp2)
RELEASE2(tmp/dummy,tmp2/dummy)
RELEASEDIR(tmp3)
RELEASE2(tmp/dummy,tmp3/dummy)
#else
RELEASEDIR(tmp)
RELEASE(tmp/dummy)
#endif
RELEASEDIR(system)
RELEASE(system/in)

RELEASE(pdreadme.Z)
  
/* IO Server and host.con					*/

#ifdef PC
  RELEASE(host.con)
  RELEASE(server.exe)
  RELEASE(winsrvr.exe)
#else
  RELEASE(template.con)
  RELEASE2(unixhost.con,host.con)
  RELEASE(hydra.con)
  RELEASE2(hydra.sun4,hydra)
  RELEASE2(hydramon.sun4,hydramon)
  RELEASE2(server.sun4,server)
  RELEASE2(serverwinxv.sun4,serverwinxv)
  RELEASE2(serverwinxt.sun4,serverwinxt)
  RELEASE2(serverwinxaw.sun4,serverwinxaw)
  RELEASE2(serverwinsv.sun4,serverwindow.sun4)
  RELEASE2(hydra.sun3,hydra)
  RELEASE2(hydramon.sun3,hydramon)
  RELEASE2(server.sun3,server)
  RELEASE2(serverwinsv.sun3,serverwinsv)
  RELEASE2(serverwinxt.sun3,serverwinxt)
  RELEASE2(serverwinxaw.sun3,serverwinxaw)
# if HPROC == C40
   RELEASE(hev40.con)
# endif
#endif

/* USERS							*/

RELEASEDIR(users)

RELEASEDIR(users/root)
RELEASE(users/root/login)
RELEASE(users/root/cshrc)
#ifndef PC
RELEASE(users/root/.login)
RELEASE(users/root/.cshrc)
#endif

RELEASEDIR(users/guest)
RELEASE(users/guest/login)
RELEASE(users/guest/cshrc)
#ifndef PC
RELEASE(users/guest/.login)
RELEASE(users/guest/.cshrc)
#endif

RELEASEDIR(users/shutdown)
RELEASE(users/shutdown/login)
RELEASE(users/shutdown/cshrc)
#ifndef PC
RELEASE(users/shutdown/.login)
RELEASE(users/shutdown/.cshrc)
#endif

/*}}}*/
#endif /* MISC */

#ifdef EXAMPLES
/*{{{  examples */

RELEASEDIR(users/guest/examples)

RELEASE(users/guest/examples/README)

/* CONVOLUTION example						*/

#if 0
RELEASEDIR(users/guest/examples/convol)
RELEASE(users/guest/examples/convol/convol.cdl)
RELEASE(users/guest/examples/convol/decode.c)
RELEASE(users/guest/examples/convol/encode.c)
RELEASE(users/guest/examples/convol/hist.c)
RELEASE(users/guest/examples/convol/length.c)
RELEASE(users/guest/examples/convol/makefile)
RELEASE(users/guest/examples/convol/master.c)
RELEASE(users/guest/examples/convol/phobos1)
RELEASE(users/guest/examples/convol/phobos2)
RELEASE(users/guest/examples/convol/readme)
RELEASE(users/guest/examples/convol/show.c)
RELEASE(users/guest/examples/convol/slave.c)
#endif

/* FACTORING example						*/

RELEASEDIR(users/guest/examples/factor)
RELEASE(users/guest/examples/factor/factor.cdl)
RELEASE(users/guest/examples/factor/makefile)
RELEASE(users/guest/examples/factor/master.c)
RELEASE(users/guest/examples/factor/worker.c)

/* Hello World							*/

RELEASEDIR(users/guest/examples/hello)
RELEASE(users/guest/examples/hello/hello.c)
RELEASE(users/guest/examples/hello/makefile)

#if HPROC == C40
RELEASE(users/guest/examples/hello/hello2.s)
#endif
  
/* Load Balancer						*/

RELEASEDIR(users/guest/examples/lb)
RELEASE(users/guest/examples/lb/lb.c)
RELEASE(users/guest/examples/lb/makefile)

/* Calculation of Pi						*/

RELEASEDIR(users/guest/examples/pi)

RELEASEDIR(users/guest/examples/pi/pi_farm)
RELEASE(users/guest/examples/pi/pi_farm/control.c)
RELEASE(users/guest/examples/pi/pi_farm/makefile)
RELEASE(users/guest/examples/pi/pi_farm/pifarm.cdl)
RELEASE(users/guest/examples/pi/pi_farm/worker.c)

RELEASEDIR(users/guest/examples/pi/pi_fast)
RELEASE(users/guest/examples/pi/pi_fast/control.c)
RELEASE(users/guest/examples/pi/pi_fast/eval.c)
RELEASE(users/guest/examples/pi/pi_fast/makefile)
RELEASE(users/guest/examples/pi/pi_fast/pi.cdl)
RELEASE(users/guest/examples/pi/pi_fast/worker.c)

RELEASEDIR(users/guest/examples/pi/pi_fort)
RELEASE(users/guest/examples/pi/pi_fort/control.f)
RELEASE(users/guest/examples/pi/pi_fort/makefile)
RELEASE(users/guest/examples/pi/pi_fort/pi.cdl)
RELEASE(users/guest/examples/pi/pi_fort/worker.f)

#if HPROC == TRAN
RELEASEDIR(users/guest/examples/pi/pi_mix)
RELEASE(users/guest/examples/pi/pi_mix/pi.cdl)

RELEASEDIR(users/guest/examples/pi/pi_mod2)
RELEASE(users/guest/examples/pi/pi_mod2/control.mod)
RELEASE(users/guest/examples/pi/pi_mod2/makefile)
RELEASE(users/guest/examples/pi/pi_mod2/pi.cdl)
RELEASE(users/guest/examples/pi/pi_mod2/termbase.mod)
RELEASE(users/guest/examples/pi/pi_mod2/worker.mod)

RELEASEDIR(users/guest/examples/pi/pi_pasc)
RELEASE(users/guest/examples/pi/pi_pasc/control.pas)
RELEASE(users/guest/examples/pi/pi_pasc/makefile)
RELEASE(users/guest/examples/pi/pi_pasc/pi.cdl)
RELEASE(users/guest/examples/pi/pi_pasc/worker.pas)
#endif /* HPROC == TRAN */

RELEASEDIR(users/guest/examples/pi/pi_ring)
RELEASE(users/guest/examples/pi/pi_ring/control.c)
RELEASE(users/guest/examples/pi/pi_ring/makefile)
RELEASE(users/guest/examples/pi/pi_ring/pi.cdl)
RELEASE(users/guest/examples/pi/pi_ring/worker.c)

RELEASEDIR(users/guest/examples/tut)
RELEASE(users/guest/examples/tut/testa1)
RELEASE(users/guest/examples/tut/testa2)
RELEASE(users/guest/examples/tut/testb1)
RELEASE(users/guest/examples/tut/testb2)
RELEASE(users/guest/examples/tut/testc1)
RELEASE(users/guest/examples/tut/testc2)

RELEASEDIR(users/guest/examples/rmlib)
RELEASE(users/guest/examples/rmlib/readme)

RELEASEDIR(users/guest/examples/rmlib/mappipe)
RELEASE(users/guest/examples/rmlib/mappipe/mappipe.c)
RELEASE(users/guest/examples/rmlib/mappipe/mappipe2.c)
RELEASE(users/guest/examples/rmlib/mappipe/readme)
RELEASE(users/guest/examples/rmlib/mappipe/makefile)

RELEASEDIR(users/guest/examples/rmlib/buildrm)
RELEASE(users/guest/examples/rmlib/buildrm/buildrm.c)
RELEASE(users/guest/examples/rmlib/buildrm/readme)
RELEASE(users/guest/examples/rmlib/buildrm/makefile)

RELEASEDIR(users/guest/examples/rmlib/owners)
RELEASE(users/guest/examples/rmlib/owners/owners.c)
RELEASE(users/guest/examples/rmlib/owners/readme)
RELEASE(users/guest/examples/rmlib/owners/makefile)

RELEASEDIR(users/guest/examples/servers)

RELEASEDIR(users/guest/examples/servers/lock)
RELEASE(users/guest/examples/servers/lock/lockserv.c)
RELEASE(users/guest/examples/servers/lock/locklib.h)
RELEASE(users/guest/examples/servers/lock/locklib.c)
RELEASE(users/guest/examples/servers/lock/locktest.c)
RELEASE(users/guest/examples/servers/lock/makefile)
RELEASE(users/guest/examples/servers/lock/readme)

RELEASEDIR(users/guest/examples/servers/include)
RELEASE(users/guest/examples/servers/include/include.c)
RELEASE(users/guest/examples/servers/include/include.h)
RELEASE(users/guest/examples/servers/include/buildinc.c)
RELEASE(users/guest/examples/servers/include/stopinc.c)
RELEASE(users/guest/examples/servers/include/makefile)
RELEASE(users/guest/examples/servers/include/readme)

RELEASEDIR(users/guest/examples/servers/keyboard)
RELEASE(users/guest/examples/servers/keyboard/keyboard.c)
RELEASE(users/guest/examples/servers/keyboard/keyboard.h)
RELEASE(users/guest/examples/servers/keyboard/linkdev.c)
RELEASE(users/guest/examples/servers/keyboard/eventdev.c)
RELEASE(users/guest/examples/servers/keyboard/makefile)
RELEASE(users/guest/examples/servers/keyboard/readme)
RELEASE(users/guest/examples/servers/keyboard/device.a)
RELEASE(users/guest/examples/servers/keyboard/modend.a)

RELEASEDIR(users/guest/examples/farmlib)
RELEASE(users/guest/examples/farmlib/makefile)
RELEASE(users/guest/examples/farmlib/mandcalc.c)
RELEASE(users/guest/examples/farmlib/mandel.c)
RELEASE(users/guest/examples/farmlib/mandel.h)
RELEASE(users/guest/examples/farmlib/mandelx.c)
RELEASE(users/guest/examples/farmlib/pi.c)
RELEASE(users/guest/examples/farmlib/pi.h)
RELEASE(users/guest/examples/farmlib/pi2.c)
RELEASE(users/guest/examples/farmlib/pi2.h)
RELEASE(users/guest/examples/farmlib/pi2calc.c)
RELEASE(users/guest/examples/farmlib/pi3.c)
RELEASE(users/guest/examples/farmlib/pi3.h)
RELEASE(users/guest/examples/farmlib/pi3calc.c)
RELEASE(users/guest/examples/farmlib/readme)

#ifdef DEBUG
RELEASEDIR(users/guest/examples/tiddles)
RELEASE(users/guest/examples/tiddles/tiddles.c)
RELEASE(users/guest/examples/tiddles/makefile)
#endif

#if HPROC == C40
RELEASEDIR(local/c40-dma)
RELEASE(local/c40-dma/COPYING)
RELEASE(local/c40-dma/cats_c40.c)
RELEASE(local/c40-dma/cats_c40.h)
RELEASE(local/c40-dma/catsutil.c)
RELEASE(local/c40-dma/catsutil.h)
RELEASE(local/c40-dma/main.c)
RELEASE(local/c40-dma/makefile)
RELEASE(local/c40-dma/README)
#endif
  
#ifdef TCPIP
RELEASEDIR(local/tcpip)
RELEASEDIR(local/tcpip/example)
RELEASE(local/tcpip/example/socket.c)
RELEASEDIR(local/tcpip/pc-ether)
RELEASE(local/tcpip/pc-ether/netdev.c)
RELEASE(local/tcpip/pc-ether/devs.a)
RELEASE(local/tcpip/pc-ether/modend.a)
RELEASE(local/tcpip/pc-ether/makefile)
RELEASEDIR(local/tcpip/laserp)
RELEASE(local/tcpip/laserp/laserpri.c)
RELEASE(local/tcpip/laserp/readme)
RELEASE(local/tcpip/laserp/laserp)
RELEASE(local/tcpip/laserp/makefile)
RELEASEDIR(local/tcpip/tinybiff)
RELEASE(local/tcpip/tinybiff/tinybiff.c)
RELEASE(local/tcpip/tinybiff/readme)
RELEASE(local/tcpip/tinybiff/makefile)
#endif
  

/*}}}*/
#endif /* EXAMPLES */

#ifdef SA
/*{{{  Stand Alone */

RELEASEDIR(bin)
RELEASE(bin/sarun)
RELEASE(bin/salink)

RELEASEDIR(lib)
RELEASE(lib/salib)
RELEASE(lib/sainit)
RELEASE(lib/samath.t4)
RELEASE(lib/samath.t8)
RELEASE(lib/sa0.o)
RELEASE(lib/sasup.o)
RELEASE(lib/kernel.sa)
RELEASE(lib/syslib.sa)
RELEASE(lib/posix.sa)

RELEASEDIR(include)
RELEASE(include/linkio.h)
RELEASE(include/chanio.h)
RELEASE(include/thread.h)
RELEASE(include/trace.h)
RELEASE(include/salib.h)
RELEASE(include/sysinfo.h)

RELEASEDIR(users/guest/examples/sa)
RELEASE(users/guest/examples/sa/explore.c)
RELEASE(users/guest/examples/sa/worm.c)
RELEASE(users/guest/examples/sa/worm.h)
RELEASE(users/guest/examples/sa/sarun.c)
RELEASE(users/guest/examples/sa/makefile)

/*}}}*/
#endif

/*}}}*/
/*{{{  Post Processing */

#ifdef TAR
cd $dir
tar cvf /hsrc/TARFILE -I /hsrc/relfiles
#endif

#ifdef EXTRAS
cd found
find . -type l -print > ../extrafiles
cd ..
rm -fr found
#endif

/*}}}*/
/*{{{  Emacs Customisation */

/* Local Variables: */
/* mode: c */
/* folded-file: t */
/* End: */

/*}}}*/
@


1.47
log
@change name of unix host.con (for DOS filesystem)
@
text
@d1 2
d4 1
a4 1
/* Helios V1.2 release description file				*/
d25 3
d33 1
a33 1
/* HPROC	- optional processor type			*/
d48 4
a51 1
/* $Id: Files,v 1.46 1992/10/30 12:39:19 martyn Exp $ */
d57 18
d76 27
a102 3
#  define RELEASE(x) cp HELIOS/x  RELDIR/x
#  define RELEASE2(x,y) cp HELIOS/x RELDIR/y
#  define RELEASEDIR(x) mkdir RELDIR/x
d104 8
a111 16
#  ifdef TAR
#    define RELEASE(x) echo x >> relfiles
#    define RELEASE2(x,y) cp HELIOS/x HELIOS/y ; echo y >> relfiles
#    define RELEASEDIR(x) echo Processing x ...
#else
#  ifdef LIST
#    define RELEASE(x) echo x >> listfiles
#    define RELEASE2(x,y) echo x y >> listfiles
#    define RELEASEDIR(x) echo Processing x ...
#  else
#    define RELEASE(x) test -f HELIOS/x || echo File HELIOS/x does not exist
#    define RELEASE2(x,y) test -f HELIOS/x || echo File HELIOS/x does not exist
#    define RELEASEDIR(x) test -d HELIOS/x || echo Directory HELIOS/x does not exist
#  endif /* LIST */
#  endif /* TAR */
#endif /* COPY */
d117 1
a117 1
#ifdef LIST
d121 7
d138 12
a152 2
RELEASEDIR(bin)
RELEASE(bin/cc)
d155 3
d159 1
a160 2
/* BIN directory 						*/

a164 1
RELEASE(bin/access)
a165 1
RELEASE(bin/asm)
d180 1
d199 1
a207 1
RELEASE(bin/matrix)
d212 1
d251 12
a334 1
	/* These should be conditional on HPROC = TRAN */
d336 1
d341 1
d343 17
a359 1
#endif /* BIN */
d361 9
a369 1
#ifdef SA
d371 7
a377 2
RELEASE(bin/sarun)
RELEASE(bin/salink)
d379 4
d385 1
a385 2

/* LIB directory						*/
a400 2
RELEASE(lib/fpclib)
RELEASE(lib/fpclib.def)
a401 2
RELEASE(lib/FpLib.t4)
RELEASE(lib/FpLib.t8)
a404 1
RELEASE(lib/nboot.i)
d420 9
a428 1
/* Network files						*/
d430 35
a464 1
#ifdef BASIC
d490 1
d494 5
a502 1
RELEASE(bin/help)
d507 1
a509 13
#ifdef SA
RELEASEDIR(lib)
RELEASE(lib/salib)
RELEASE(lib/sainit)
RELEASE(lib/samath.t4)
RELEASE(lib/samath.t8)
RELEASE(lib/sa0.o)
RELEASE(lib/sasup.o)
RELEASE(lib/kernel.sa)
RELEASE(lib/syslib.sa)
RELEASE(lib/posix.sa)
#endif

d511 1
a511 2

/* INCLUDE directory						*/
d547 3
d650 1
a652 10
#ifdef SA
RELEASEDIR(include)
RELEASE(include/linkio.h)
RELEASE(include/chanio.h)
RELEASE(include/thread.h)
RELEASE(include/trace.h)
RELEASE(include/salib.h)
RELEASE(include/sysinfo.h)
#endif

d654 1
a654 68

/* ETC directory						*/

#if defined(SUN3) || defined(SUN4) || defined(SUN386)

RELEASEDIR(etc0)
RELEASE2(etc/default.map,etc0/default.map)
RELEASE2(etc/default.rm,etc0/default.rm)
RELEASE2(etc/emacs.hlp,etc0/emacs.hlp)
RELEASE2(etc/faults,etc0/faults)
#if defined(BASIC) || defined(TINY)
RELEASE2(etc/initrc.tin,etc0/initrc)
#else
RELEASE2(etc/initrc,etc0/initrc)
#endif
#if defined(MULTI_SINGLE) || defined(SYSTEM)
RELEASE2(etc/nsrc,etc0/nsrc)
#endif
RELEASE2(etc/motd,etc0/motd)
RELEASE2(etc/passwd,etc0/passwd)

RELEASEDIR(etc1)
RELEASE2(etc/default.map,etc1/default.map)
RELEASE2(etc/default.rm,etc1/default.rm)
RELEASE2(etc/emacs.hlp,etc1/emacs.hlp)
RELEASE2(etc/faults,etc1/faults)
#if defined(BASIC) || defined(TINY)
RELEASE2(etc/initrc.tin,etc1/initrc)
#else
RELEASE2(etc/initrc,etc1/initrc)
#endif
#if defined(MULTI_SINGLE) || defined(SYSTEM)
RELEASE2(etc/nsrc,etc1/nsrc)
#endif
RELEASE2(etc/motd,etc1/motd)
RELEASE2(etc/passwd,etc1/passwd)

RELEASEDIR(etc2)
RELEASE2(etc/default.map,etc2/default.map)
RELEASE2(etc/default.rm,etc2/default.rm)
RELEASE2(etc/emacs.hlp,etc2/emacs.hlp)
RELEASE2(etc/faults,etc2/faults)
#if defined(BASIC) || defined(TINY)
RELEASE2(etc/initrc.tin,etc2/initrc)
#else
RELEASE2(etc/initrc,etc2/initrc)
#endif
#if defined(MULTI_SINGLE) || defined(SYSTEM)
RELEASE2(etc/nsrc,etc2/nsrc)
#endif
RELEASE2(etc/motd,etc2/motd)
RELEASE2(etc/passwd,etc2/passwd)

RELEASEDIR(etc3)
RELEASE2(etc/default.map,etc3/default.map)
RELEASE2(etc/default.rm,etc3/default.rm)
RELEASE2(etc/emacs.hlp,etc3/emacs.hlp)
RELEASE2(etc/faults,etc3/faults)
#if defined(BASIC) || defined(TINY)
RELEASE2(etc/initrc.tin,etc3/initrc)
#else
RELEASE2(etc/initrc,etc3/initrc)
#endif
#if defined(MULTI_SINGLE) || defined(SYSTEM)
RELEASE2(etc/nsrc,etc3/nsrc)
#endif
RELEASE2(etc/motd,etc3/motd)
RELEASE2(etc/passwd,etc3/passwd)
a655 1
#else	/* PC	*/
d662 39
d702 1
a702 1
RELEASE2(etc/initrc.tin,etc/initrc)
d704 1
a704 1
RELEASE(etc/initrc)
d707 1
a707 1
RELEASE(etc/nsrc)
a708 2
RELEASE(etc/motd)
RELEASE(etc/passwd)
d710 1
a710 1
#endif /* UNIX vs PC */
d714 1
d728 6
d738 1
d742 1
a742 2

/* Miscellaneous directories					*/
d760 2
d765 3
a767 18
RELEASE(host.con)
RELEASE(server.exe)
RELEASE(winsrvr.exe)
#else
#    ifdef SUN4
     RELEASE2(unixhost.con,host.con)
     RELEASE(hydra.con)
     RELEASE2(hydra.sun4,hydra)
     RELEASE2(server.sun4,server)
     RELEASE2(serverwinxv.sun4,serverwinxv)
     RELEASE2(serverwinsv.sun4,serverwindow.sun4)
#else
#    ifdef SUN3
     RELEASE2(unixhost.con,host.con)
     RELEASE(hydra.con)
     RELEASE2(hydra.sun3,hydra)
     RELEASE2(server.sun3,server)
     RELEASE(serverwindow.sun3)
d769 19
a787 9
#    ifdef SUN386
     RELEASE2(unixhost.con,host.con)
     RELEASE2(hydra.con,hydra.con)
     RELEASE2(hydra.sun386,hydra)
     RELEASE2(server.sun386,server)
     RELEASE(serverwindow.sun386)
#    endif
#    endif
#    endif
a794 1
#ifdef PC
d797 1
a797 1
#else
a802 1
#ifdef PC
d805 1
a805 1
#else
a810 1
#ifdef PC
d813 1
a813 1
#else
d818 1
a820 1

d822 1
a822 2

/* CDL examples							*/
d826 1
a826 1
RELEASE(users/guest/examples/readme)
d860 4
d893 1
d909 1
d930 1
d987 41
d1031 25
d1062 2
d1066 2
d1070 1
a1070 1
cd HELIOS
d1073 17
@


1.46
log
@add new help system (remove blib)
@
text
@d43 1
a43 1
/* $Id: Files,v 1.45 1992/10/28 11:18:15 bart Exp $ */
d663 1
a663 1
     RELEASE2(host.con.unix,host.con)
d671 1
a671 1
     RELEASE2(host.con.unix,host.con)
d678 1
a678 1
     RELEASE2(host.con.unix,host.con)
@


1.45
log
@various fixes for releasing Unix-hosted systems
@
text
@d43 1
a43 1
/* $Id: Files,v 1.44 1992/10/28 10:24:04 bart Exp bart $ */
d86 1
a285 1
RELEASE(lib/blib)
d354 3
a356 1
RELEASE(lib/blib)
@


1.44
log
@Fixed release rules for hydra.con.dft
@
text
@d43 1
a43 1
/* $Id: Files,v 1.43 1992/10/28 10:21:34 bart Exp bart $ */
d45 3
d526 67
d610 1
d637 10
d649 1
d661 2
a662 2
     RELEASE2(host.con.sun,host.con)
     RELEASE2(hydra.con.dft,hydra.con)
d666 1
a666 1
     RELEASE2(serverwinsv.sun4,serverwinsv)
d669 2
a670 2
     RELEASE2(host.con.sun,host.con)
     RELEASE2(hydra.con.dft,hydra.con)
d673 1
a673 1
     RELEASE2(serverwindow.sun3,serverwindow)
d676 2
a677 2
     RELEASE2(host.con.sun,host.con)
     RELEASE2(hydra.con.dft,hydra.con)
d680 1
a680 1
     RELEASE2(serverwindow.sun386,serverwindow)
@


1.43
log
@updated the header files
@
text
@d43 1
a43 1
/* $Id: Files,v 1.42 1992/10/27 15:07:22 bart Exp bart $ */
d580 1
a580 1
     RELEASE(hydra.con.dft,hydra.con)
d588 1
a588 1
     RELEASE(hydra.con.dft,hydra.con)
d595 1
a595 1
     RELEASE(hydra.con.dft,hydra.con)
@


1.42
log
@Fixed name of PC host.con file
@
text
@d43 1
a43 1
/* $Id: Files,v 1.41 1992/10/27 15:01:13 bart Exp bart $ */
d378 2
d383 1
d476 30
@


1.41
log
@Added winsrvr.exe
@
text
@d43 1
a43 1
/* $Id: Files,v 1.40 1992/10/27 11:44:26 bart Exp bart $ */
d541 1
a541 1
RELEASE2(host.con.pc,host.con)
@


1.40
log
@Added vector library, farm library and passadm
@
text
@d43 1
a43 1
/* $Id: Files,v 1.39 1992/06/27 13:01:04 bart Exp bart $ */
d543 1
@


1.39
log
@Added new files for Helios 1.3
@
text
@d43 1
a43 1
/* $Id: Files,v 1.38 1991/12/06 11:15:58 martyn Exp bart $ */
d184 1
d314 1
d321 1
a321 2
#ifdef TINY
RELEASE2(lib/tfm.sp,lib/tfm)
d324 1
d327 4
a332 2
RELEASE(lib/RmLib)
RELEASE(lib/RmLib.def)
a343 2
RELEASE(lib/RmLib)
RELEASE(lib/RmLib.def)
d403 1
d445 1
a446 1

d749 15
@


1.38
log
@removed UNIX specific loadpac - never used
@
text
@d43 1
a43 1
/* $Id: Files,v 1.37 1991/12/04 12:46:08 martyn Exp martyn $ */
d105 1
d114 2
d126 1
d130 1
d134 1
d152 1
d157 1
d168 1
d173 1
d229 1
d310 1
d380 1
d435 1
d491 1
a491 5
#ifdef PC
RELEASE2(etc/emacs.hlp.dos,etc/emacs.hlp)
#else
RELEASE2(etc/emacs.hlp.dft,etc/emacs.hlp)
#endif
@


1.37
log
@added gdi to standard distribution
@
text
@d43 1
a43 1
/* $Id: Files,v 1.36 1991/12/02 17:10:58 martyn Exp martyn $ */
d133 1
a133 5
#ifdef PC
RELEASE2(bin/loadpac.pc,bin/loadpac)
#else
RELEASE2(bin/loadpac.un,bin/loadpac)
#endif
@


1.36
log
@corrected standalone examples
@
text
@d43 1
a43 1
/* $Id: Files,v 1.35 1991/11/12 16:34:41 martyn Exp martyn $ */
d126 1
@


1.35
log
@changed name of hydra config default file
@
text
@d43 1
a43 1
/* $Id: Files,v 1.34 1991/11/12 16:05:50 martyn Exp martyn $ */
d746 1
@


1.34
log
@corrected files for 1.2.2 release
@
text
@d43 1
a43 1
/* $Id: Files,v 1.33 1991/08/30 16:02:34 martyn Exp martyn $ */
d536 1
a536 1
     RELEASE(hydra.con)
d544 1
a544 1
     RELEASE(hydra.con)
d551 1
a551 1
     RELEASE(hydra.con)
@


1.33
log
@changed SUN4 serverwindow to serverwinsv
added SUN4 serverwinxv
@
text
@d43 1
a43 1
/* $Id: Files,v 1.32 1991/08/30 10:52:28 bart Exp martyn $ */
d53 1
a53 1
#    define RELEASE2(x,y) echo x y >> relfiles
a69 1
set C=`pwd`
a78 1
#  define INCLUDE
d85 7
d100 1
a106 1
RELEASE(bin/cc)
d140 1
d155 2
d273 1
d381 1
d420 1
d457 1
d481 1
a481 1
RELEASE2(etc/emacshlp.dos,etc/emacs.hlp)
d483 1
a483 1
RELEASE2(etc/emacshlp.dft,etc/emacs.hlp)
a647 1
RELEASE(users/guest/examples/pi/pi_farm/readme)
d693 46
d752 1
a752 1
tar cvfN /users/martyn/TARFILE $C/relfiles
@


1.32
log
@Removed undesirable spaces from the various RELEASE2 calls
@
text
@d43 1
a43 1
/* $Id: Files,v 1.31 1991/08/30 10:25:39 bart Exp bart $ */
d527 2
a528 1
     RELEASE2(serverwindow.sun4,serverwindow)
@


1.31
log
@diag_ns was missing from the multi-processor commands list
@
text
@d43 1
a43 1
/* $Id: Files,v 1.30 1991/04/07 13:59:17 bart Exp bart $ */
d171 6
a176 6
RELEASE2(bin/login.ss,   bin/login)
RELEASE2(bin/newuser.su, bin/newuser)
RELEASE2(bin/ps.sp,      bin/ps)
RELEASE2(bin/loaded.sp,  bin/loaded)
RELEASE2(bin/wsh.sp,     bin/wsh)
RELEASE2(bin/kill.sp,    bin/kill)
d183 6
a188 6
RELEASE2(bin/login.ss,   bin/login)
RELEASE2(bin/newuser.su, bin/newuser)
RELEASE2(bin/ps.sp,      bin/ps)
RELEASE2(bin/loaded.sp,  bin/loaded)
RELEASE2(bin/wsh.sp,     bin/wsh)
RELEASE2(bin/kill.sp,    bin/kill)
d195 6
a200 6
RELEASE2(bin/login.sp,   bin/login)
RELEASE2(bin/ps.sp,      bin/ps)
RELEASE2(bin/loaded.sp,  bin/loaded)
RELEASE2(bin/wsh.sp,     bin/wsh)
RELEASE2(bin/kill.sp,    bin/kill)
RELEASE2(bin/startns.sp, bin/startns)
d302 1
a302 1
RELEASE2(lib/tfm.sp, lib/tfm)
d308 1
a308 1
RELEASE2(lib/tfm.sp, lib/tfm)
d311 1
a311 1
RELEASE2(lib/session.sp, lib/session)
d469 1
a469 1
RELEASE2(etc/emacshlp.dos, etc/emacs.hlp)
d471 1
a471 1
RELEASE2(etc/emacshlp.dft, etc/emacs.hlp)
d475 1
a475 1
RELEASE2(etc/initrc.tin,  etc/initrc)
d519 1
a519 1
RELEASE2(host.con.pc, host.con)
d523 1
a523 1
     RELEASE2(host.con.sun, host.con)
d525 3
a527 3
     RELEASE2(hydra.sun4, hydra)
     RELEASE2(server.sun4, server)
     RELEASE2(serverwindow.sun4, serverwindow)
d530 1
a530 1
     RELEASE2(host.con.sun, host.con)
d532 3
a534 3
     RELEASE2(hydra.sun3, hydra)
     RELEASE2(server.sun3, server)
     RELEASE2(serverwindow.sun3, serverwindow)
d537 1
a537 1
     RELEASE2(host.con.sun, host.con)
d539 3
a541 3
     RELEASE2(hydra.sun386, hydra)
     RELEASE2(server.sun386, server)
     RELEASE2(serverwindow.sun386, serverwindow)
@


1.30
log
@1) Added support for different versions of Helios, basic, tiny, multi-user
   single-processor, and the full system
2) added a macro RELEASE2(a,b) which is used to release source file a to
   destination file b, essential to support the previous thingy.
@
text
@d43 1
a43 1
/* $Id: Files,v 1.28 1991/04/02 17:50:52 martyn Exp $ */
d228 1
@


1.29
log
@temporary changes before Barts stuff is added
@
text
@d32 4
a35 1
/* SYSTEM	- Basic system					*/
d43 1
a43 1
/* $Id: Files,v 1.28 1991/04/02 17:50:52 martyn Exp martyn $ */
d48 1
d53 1
d58 1
d62 1
d77 1
a77 1
#ifdef SYSTEM
d123 1
d125 1
d128 1
a128 1
cp HELIOS/bin/loadpac.pc HELIOS/bin/loadpac
d130 1
a130 1
cp HELIOS/bin/loadpac.un HELIOS/bin/loadpac
a131 1
RELEASE(bin/loadpac)
d162 18
a180 2
RELEASE(bin/clink)
RELEASE(bin/diag_ns)
d182 26
a207 4
RELEASE(bin/dlink)
RELEASE(bin/elink)
RELEASE(bin/domain)
RELEASE(bin/findns)
d209 5
d215 2
a216 2
RELEASE(bin/id)
RELEASE(bin/joinnet)
d218 13
a230 3
RELEASE(bin/login)
RELEASE(bin/logname)
RELEASE(bin/lstatus)
d232 1
a232 3
RELEASE(bin/newuser)
RELEASE(bin/pa_rboot)
RELEASE(bin/pa_reset)
d234 7
a240 1
RELEASE(bin/ps)
d242 1
a242 7
RELEASE(bin/rebootio)
RELEASE(bin/remote)
RELEASE(bin/rmgen)
RELEASE(bin/run)
RELEASE(bin/sendto)
RELEASE(bin/startns)
RELEASE(bin/stopio)
d244 2
a245 8
RELEASE(bin/tty)
RELEASE(bin/uptime)
RELEASE(bin/users)
RELEASE(bin/wall)
RELEASE(bin/who)
RELEASE(bin/whoami)
RELEASE(bin/write)
RELEASE(bin/wsh)
d297 18
a317 3
RELEASE(lib/pa_ra.d)
RELEASE(lib/RmLib)
RELEASE(lib/RmLib.def)
d321 2
d324 2
d468 1
a468 1
cp HELIOS/etc/emacshlp.dos HELIOS/etc/emacs.hlp
d470 1
a470 1
cp HELIOS/etc/emacshlp.dft HELIOS/etc/emacs.hlp
a471 1
RELEASE(etc/emacs.hlp)
d473 3
d477 2
d480 1
d518 1
a518 2
cp HELIOS/hostcon.pc HELIOS/host.con
RELEASE(host.con)
d522 1
a522 2
     cp HELIOS/hostcon.dft HELIOS/host.con
     RELEASE(host.con)
d524 3
a526 6
     cp HELIOS/hydra.sun4 HELIOS/hydra
     RELEASE(hydra)
     cp HELIOS/server.sun4 HELIOS/server
     RELEASE(server)
     cp HELIOS/serverwindow.sun4 HELIOS/serverwindow
     RELEASE(serverwindow)
d529 1
a529 2
     cp HELIOS/hostcon.dft HELIOS/host.con
     RELEASE(host.con)
d531 3
a533 6
     cp HELIOS/hydra.sun3 HELIOS/hydra
     RELEASE(hydra)
     cp HELIOS/server.sun3 HELIOS/server
     RELEASE(server)
     cp HELIOS/serverwindow.sun3 HELIOS/serverwindow
     RELEASE(serverwindow)
d536 1
a536 2
     cp HELIOS/hostcon.dft HELIOS/host.con
     RELEASE(host.con)
d538 3
a540 6
     cp HELIOS/hydra.sun386 HELIOS/hydra
     RELEASE(hydra)
     cp HELIOS/server.sun386 HELIOS/server
     RELEASE(server)
     cp HELIOS/serverwindow.sun386 HELIOS/serverwindow
     RELEASE(serverwindow)
@


1.28
log
@changed name of emacs help file
@
text
@d40 1
a40 1
/* $Id: Files,v 1.27 1991/04/02 13:36:16 martyn Exp $ */
d441 1
a441 1
cp HELIOS/host.con.pc HELIOS/host.con
d446 1
a446 1
     cp HELIOS/host.con.sun HELIOS/host.con
d457 1
a457 1
     cp HELIOS/host.con.sun HELIOS/host.con
d468 1
a468 1
     cp HELIOS/host.con.sun HELIOS/host.con
@


1.27
log
@removed bcpl library and convol example
@
text
@d40 1
a40 1
/* $Id: Files,v 1.26 1991/04/02 13:28:10 martyn Exp $ */
d396 1
a396 1
cp HELIOS/etc/emacs.hlp.dos HELIOS/etc/emacs.hlp
d398 1
a398 1
cp HELIOS/etc/emacs.hlp.dft HELIOS/etc/emacs.hlp
@


1.26
log
@moved some commands to network list from common list
@
text
@d40 1
a40 1
/* $Id: Files,v 1.25 1991/03/19 14:59:33 martyn Exp martyn $ */
d257 1
d259 1
d526 1
d540 1
@


1.25
log
@endifs in wrong place
@
text
@d40 1
a40 1
/* $Id: Files,v 1.24 90/12/03 11:26:18 martyn Exp $ */
a123 1
RELEASE(bin/logname)
a133 1
RELEASE(bin/ps)
a134 1
RELEASE(bin/remote)
a136 1
RELEASE(bin/run)
a149 1
RELEASE(bin/wsh)
d168 1
d175 1
d178 1
d180 1
d192 1
@


1.24
log
@added joinnet
@
text
@d40 1
a40 1
/* $Id: Files,v 1.23 90/11/27 12:06:34 martyn Exp Locker: martyn $ */
a452 1
#    endif
a463 1
#    endif
d475 2
@


1.23
log
@added sa examples
@
text
@d40 1
a40 1
/* $Id: Files,v 1.22 90/11/27 12:02:28 martyn Exp Locker: martyn $ */
d170 1
@


1.22
log
@1.2 changes to include network stuff and sa stuff
@
text
@d40 1
a40 1
/* $Id: Files,v 1.21 90/11/16 17:56:42 martyn Exp Locker: martyn $ */
d612 8
@


1.21
log
@rename gmake from make
@
text
@d40 1
a40 1
/* $Id: Files,v 1.20 90/11/16 17:49:28 martyn Exp Locker: martyn $ */
d163 2
d172 2
d177 1
a180 1
RELEASE(bin/rmtrans)
a181 1
RELEASE(bin/shownet)
a183 1
RELEASE(bin/stopns)
d195 6
a242 2
RELEASE(lib/net_ctrl)
RELEASE(lib/net_supp)
a248 2
RELEASE(lib/rte_c.d)
RELEASE(lib/rte_ra.d)
a250 2
RELEASE(lib/telmat_c.d)
RELEASE(lib/telmat_r.d)
d260 13
d374 10
d616 1
a616 1
tar cvfN $C/TARFILE $C/relfiles
@


1.20
log
@dummy file in tmp to make sure tmp is released
@
text
@d40 1
a40 1
/* $Id: Files,v 1.19 90/11/06 16:32:33 martyn Exp Locker: martyn $ */
d390 1
a390 1
RELEASE(local/bin/make)
@


1.19
log
@added loadpac
@
text
@d40 1
a40 1
/* $Id: Files,v 1.18 90/11/06 15:55:25 martyn Exp Locker: martyn $ */
d406 1
a406 1
RELEASE(tmp/.dummy)
@


1.18
log
@added list option fot Brian's QA
.`
@
text
@d40 1
a40 1
/* $Id: Files,v 1.17 90/10/23 17:45:52 martyn Exp Locker: martyn $ */
d118 5
@


1.17
log
@added nsrc to release
@
text
@d40 1
a40 1
/* $Id: Files,v 1.16 90/10/22 16:43:04 martyn Exp Locker: martyn $ */
d50 4
d57 1
d64 4
@


1.16
log
@*** empty log message ***
@
text
@d40 1
a40 1
/* $Id: Files,v 1.15 90/10/22 16:37:11 martyn Exp Locker: martyn $ */
d361 1
@


1.15
log
@added sun3 sun386 options
@
text
@d40 1
a40 1
/* $Id: Files,v 1.14 90/10/22 16:30:00 martyn Exp Locker: martyn $ */
d445 2
a446 2
RELEASE(users/root/.login)
RELEASE(users/root/.cshrc)
d454 2
a455 2
RELEASE(users/guest/.login)
RELEASE(users/guest/.cshrc)
d463 2
a464 2
RELEASE(users/shutdown/.login)
RELEASE(users/shutdown/.cshrc)
@


1.14
log
@*** empty log message ***
@
text
@d40 1
a40 1
/* $Id: Files,v 1.13 90/10/22 14:38:40 martyn Exp Locker: martyn $ */
a400 1
RELEASE(makedisk.exe)
d411 24
@


1.13
log
@added emacs.hlp
@
text
@d40 1
a40 1
/* $Id: Files,v 1.12 90/10/22 12:51:30 martyn Exp Locker: martyn $ */
d421 4
d427 1
d430 4
d436 1
d439 4
d445 1
@


1.12
log
@added emacs.hlp
@
text
@d40 1
a40 1
/* $Id: Files,v 1.11 90/10/22 12:20:49 martyn Exp Locker: martyn $ */
d353 5
@


1.11
log
@*** empty log message ***
@
text
@d40 1
a40 1
/* $Id: Files,v 1.10 90/10/22 11:50:13 martyn Exp Locker: martyn $ */
d353 1
@


1.10
log
@added PC and SUN4 specifics
@
text
@d40 1
a40 1
/* $Id: Files,v 1.9 90/10/22 10:39:18 martyn Exp Locker: martyn $ */
d385 1
d392 1
a392 1
cp host.con.pc host.con
d398 1
a398 1
     cp host.con.sun host.con
d401 1
a401 1
     cp hydra.sun4 hydra
d403 1
a403 1
     cp server.sun4 server
d405 1
a405 1
     cp serverwindow.sun4 serverwindow
@


1.9
log
@*** empty log message ***
@
text
@d40 1
a40 1
/* $Id: Files,v 1.8 90/10/22 09:46:14 martyn Exp Locker: martyn $ */
d48 2
a49 2
#    define RELEASE(x) echo x >>relfiles
#    define RELEASEDIR(x) echo x/ >>relfiles
d56 5
d85 1
d390 2
d395 13
d530 2
a531 1
tar cvfT TARFILE relfiles
@


1.8
log
@*** empty log message ***
@
text
@d40 1
a40 1
/* $Id: Files,v 1.7 90/10/19 17:35:54 martyn Exp Locker: martyn $ */
a82 1
RELEASE(bin/cc)
a384 1
#ifdef PC
a386 1
#endif
@


1.7
log
@*** empty log message ***
@
text
@d40 1
a40 1
/* $Id: Files,v 1.6 90/10/19 17:31:20 martyn Exp Locker: martyn $ */
d102 1
@


1.6
log
@*** empty log message ***
@
text
@d37 1
d40 1
a40 1
/* $Id: Files,v 1.5 90/10/19 15:58:11 martyn Exp Locker: martyn $ */
d385 1
d387 2
@


1.5
log
@*** empty log message ***
@
text
@d39 1
a39 1
/* $Id: Files,v 1.4 90/10/19 13:57:49 martyn Exp Locker: martyn $ */
a100 1
RELEASE(bin/lb)
@


1.4
log
@Added PDS Terms and Conditions to PDS directory
@
text
@d39 1
a39 1
/* $Id: Files,v 1.3 90/10/19 12:40:32 martyn Exp Locker: martyn $ */
d101 1
@


1.3
log
@*** empty log message ***
@
text
@d39 1
a39 1
/* $Id: Files,v 1.2 90/10/09 12:52:38 nick Exp Locker: martyn $ */
d364 2
@


1.2
log
@various things left out added
@
text
@d39 1
a39 1
/* $Id: Files,v 1.1 90/10/08 15:44:55 nick Exp Locker: nick $ */
d492 8
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
/* $(CPP) -DHELIOS=XXX [-DHPROC=YYY]				*/
d17 1
a17 1
/* $(CPP) -DCOPY -DHELIOS=XXX -DRELDIR=ZZZ [-DHPROC=YYY]	*/
d20 1
a20 1
/* $(CPP) -DTAR -DHELIOS=XXX -DTARFILE=ZZZ [-DHPROC=YYY]	*/
d30 1
a30 3
/* If any of the components names are defined then only those	*/
/* components are copied, if no names are given then all	*/
/* components are copied.					*/
d32 6
d39 1
a39 1
/* $Id$ */
d55 8
a62 18
/* If none of the components are defined, do them all... */
#ifndef BIN
#  ifndef LIB
#    ifndef INCLUDE
#      ifndef ETC
#        ifndef LOCAL
#          ifndef MISC
#            define BIN
#            define LIB
#            define INCLUDE
#            define ETC
#            define LOCAL
#            define MISC
#          endif
#        endif
#      endif
#    endif
#  endif
d306 1
d346 1
d369 15
d387 1
d389 2
a390 2
RELEASE(users/root/login)
RELEASE(users/root/cshrc)
d393 2
a394 2
RELEASE(users/guest/login)
RELEASE(users/guest/cshrc)
d397 5
a401 2
RELEASE(users/shutdown/login)
RELEASE(users/shutdown/cshrc)
d403 1
a403 1
#endif /* LOCAL */
d405 1
a405 1
#ifdef MISC
d407 85
a491 1
/* Miscellaneous directories					*/
d493 1
a493 2
RELEASEDIR(tmp)
RELEASEDIR(system)
a494 1
#endif /* MISC */
@
