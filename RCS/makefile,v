head	1.141;
access;
symbols
	Helios_C40_1_3_Official_Release:1.111
	Helios-C40:1.111
	Alenia_release:1.105
	Helios1_3:1.102
	C40_Field_Test_2:1.97
	C40_Field_Test_R1:1.84
	Helios13_beta:1.81
	Helios1_2_2:1.66
	Helios1_2_2Beta:1.57
	Helios1_2_1:1.46
	Helios1_2:1.23;
locks; strict;
comment	@# @;


1.141
date	94.05.16.10.33.35;	author nickc;	state Exp;
branches;
next	1.140;

1.140
date	94.03.17.11.56.26;	author nickc;	state Exp;
branches;
next	1.139;

1.139
date	93.11.17.15.16.54;	author nickc;	state Exp;
branches;
next	1.138;

1.138
date	93.10.29.09.41.57;	author tony;	state Exp;
branches;
next	1.137;

1.137
date	93.10.28.13.01.46;	author tony;	state Exp;
branches;
next	1.136;

1.136
date	93.10.28.09.51.02;	author nickc;	state Exp;
branches;
next	1.135;

1.135
date	93.10.28.09.46.25;	author bart;	state Exp;
branches;
next	1.134;

1.134
date	93.09.28.12.33.54;	author bart;	state Exp;
branches;
next	1.133;

1.133
date	93.08.18.16.16.29;	author bart;	state Exp;
branches;
next	1.132;

1.132
date	93.08.17.17.26.44;	author bart;	state Exp;
branches;
next	1.131;

1.131
date	93.08.17.09.27.53;	author nickc;	state Exp;
branches;
next	1.130;

1.130
date	93.08.13.16.49.44;	author bart;	state Exp;
branches;
next	1.129;

1.129
date	93.08.11.08.37.25;	author nickc;	state Exp;
branches;
next	1.128;

1.128
date	93.08.10.14.14.20;	author nickc;	state Exp;
branches;
next	1.127;

1.127
date	93.08.10.13.53.25;	author nickc;	state Exp;
branches;
next	1.126;

1.126
date	93.08.06.12.59.33;	author paul;	state Exp;
branches;
next	1.125;

1.125
date	93.07.29.13.52.17;	author nickc;	state Exp;
branches;
next	1.124;

1.124
date	93.07.27.15.19.31;	author nickc;	state Exp;
branches;
next	1.123;

1.123
date	93.07.16.15.28.26;	author nickc;	state Exp;
branches;
next	1.122;

1.122
date	93.07.12.16.21.03;	author nickc;	state Exp;
branches;
next	1.121;

1.121
date	93.07.08.11.00.00;	author nickc;	state Exp;
branches;
next	1.120;

1.120
date	93.06.09.14.26.17;	author nickc;	state Exp;
branches;
next	1.119;

1.119
date	93.05.27.10.21.47;	author bart;	state Exp;
branches;
next	1.118;

1.118
date	93.05.27.10.20.49;	author bart;	state Exp;
branches;
next	1.117;

1.117
date	93.05.26.16.09.34;	author bart;	state Exp;
branches;
next	1.116;

1.116
date	93.05.26.15.15.02;	author bart;	state Exp;
branches;
next	1.115;

1.115
date	93.05.21.12.27.05;	author bart;	state Exp;
branches;
next	1.114;

1.114
date	93.05.20.16.02.11;	author bart;	state Exp;
branches;
next	1.113;

1.113
date	93.05.14.10.38.52;	author nickc;	state Exp;
branches;
next	1.112;

1.112
date	93.05.12.16.24.21;	author nickc;	state Exp;
branches;
next	1.111;

1.111
date	93.05.12.10.36.55;	author bart;	state Exp;
branches;
next	1.110;

1.110
date	93.05.12.10.27.19;	author nickc;	state Exp;
branches;
next	1.109;

1.109
date	93.05.10.13.53.18;	author nickc;	state Exp;
branches;
next	1.108;

1.108
date	93.03.29.16.11.42;	author nickc;	state Exp;
branches;
next	1.107;

1.107
date	93.03.09.17.46.04;	author nickc;	state Exp;
branches;
next	1.106;

1.106
date	93.01.18.17.54.50;	author nick;	state Exp;
branches;
next	1.105;

1.105
date	92.12.02.17.23.40;	author nickc;	state Exp;
branches;
next	1.104;

1.104
date	92.12.02.16.24.57;	author nickc;	state Exp;
branches;
next	1.103;

1.103
date	92.12.01.11.13.05;	author nickc;	state Exp;
branches;
next	1.102;

1.102
date	92.11.02.11.27.53;	author martyn;	state Exp;
branches;
next	1.101;

1.101
date	92.10.27.19.10.15;	author martyn;	state Exp;
branches;
next	1.100;

1.100
date	92.10.27.15.01.22;	author bart;	state Exp;
branches;
next	1.99;

1.99
date	92.10.26.15.22.06;	author bart;	state Exp;
branches;
next	1.98;

1.98
date	92.10.24.12.39.08;	author bart;	state Exp;
branches;
next	1.97;

1.97
date	92.10.07.09.01.46;	author nickc;	state Exp;
branches;
next	1.96;

1.96
date	92.09.25.17.02.30;	author paul;	state Exp;
branches;
next	1.95;

1.95
date	92.09.25.16.01.11;	author martyn;	state Exp;
branches;
next	1.94;

1.94
date	92.09.24.17.22.08;	author martyn;	state Exp;
branches;
next	1.93;

1.93
date	92.09.24.11.29.12;	author martyn;	state Exp;
branches;
next	1.92;

1.92
date	92.09.18.08.41.22;	author paul;	state Exp;
branches;
next	1.91;

1.91
date	92.08.18.09.57.30;	author paul;	state Exp;
branches;
next	1.90;

1.90
date	92.08.17.15.05.44;	author paul;	state Exp;
branches;
next	1.89;

1.89
date	92.08.14.18.04.48;	author paul;	state Exp;
branches;
next	1.88;

1.88
date	92.08.05.10.48.45;	author paul;	state Exp;
branches;
next	1.87;

1.87
date	92.07.08.17.36.57;	author paul;	state Exp;
branches;
next	1.86;

1.86
date	92.07.07.08.19.46;	author paul;	state Exp;
branches;
next	1.85;

1.85
date	92.07.01.19.14.14;	author paul;	state Exp;
branches;
next	1.84;

1.84
date	92.07.01.15.14.26;	author paul;	state Exp;
branches;
next	1.83;

1.83
date	92.07.01.14.40.23;	author paul;	state Exp;
branches;
next	1.82;

1.82
date	92.07.01.11.42.26;	author paul;	state Exp;
branches;
next	1.81;

1.81
date	92.06.27.13.01.04;	author bart;	state Exp;
branches;
next	1.80;

1.80
date	92.06.26.17.49.25;	author bart;	state Exp;
branches;
next	1.79;

1.79
date	92.06.22.08.45.09;	author paul;	state Exp;
branches;
next	1.78;

1.78
date	92.06.17.09.55.43;	author nickc;	state Exp;
branches;
next	1.77;

1.77
date	92.04.21.10.27.17;	author paul;	state Exp;
branches;
next	1.76;

1.76
date	92.03.31.16.43.58;	author paul;	state Exp;
branches;
next	1.75;

1.75
date	92.03.23.17.44.51;	author paul;	state Exp;
branches;
next	1.74;

1.74
date	92.01.22.11.12.31;	author craig;	state Exp;
branches;
next	1.73;

1.73
date	92.01.22.11.05.46;	author paul;	state Exp;
branches;
next	1.72;

1.72
date	91.12.06.14.29.13;	author martyn;	state Exp;
branches;
next	1.71;

1.71
date	91.12.06.12.49.52;	author martyn;	state Exp;
branches;
next	1.70;

1.70
date	91.12.04.18.19.00;	author martyn;	state Exp;
branches;
next	1.69;

1.69
date	91.12.04.15.34.42;	author martyn;	state Exp;
branches;
next	1.68;

1.68
date	91.12.04.13.54.24;	author paul;	state Exp;
branches;
next	1.67;

1.67
date	91.12.02.14.48.07;	author martyn;	state Exp;
branches;
next	1.66;

1.66
date	91.11.26.18.08.14;	author martyn;	state Exp;
branches;
next	1.65;

1.65
date	91.11.12.16.05.25;	author martyn;	state Exp;
branches;
next	1.64;

1.64
date	91.11.10.22.01.19;	author paul;	state Exp;
branches;
next	1.63;

1.63
date	91.10.29.12.15.02;	author martyn;	state Exp;
branches;
next	1.62;

1.62
date	91.10.24.12.18.44;	author martyn;	state Exp;
branches;
next	1.61;

1.61
date	91.10.21.13.36.21;	author martyn;	state Exp;
branches;
next	1.60;

1.60
date	91.10.14.09.54.12;	author paul;	state Exp;
branches;
next	1.59;

1.59
date	91.10.08.10.57.41;	author paul;	state Exp;
branches;
next	1.58;

1.58
date	91.09.26.10.19.54;	author martyn;	state Exp;
branches;
next	1.57;

1.57
date	91.07.31.15.25.47;	author paul;	state Exp;
branches;
next	1.56;

1.56
date	91.06.19.09.16.46;	author martyn;	state Exp;
branches;
next	1.55;

1.55
date	91.05.20.14.26.32;	author paul;	state Exp;
branches;
next	1.54;

1.54
date	91.05.07.14.56.07;	author paul;	state Exp;
branches;
next	1.53;

1.53
date	91.04.30.10.48.10;	author martyn;	state Exp;
branches;
next	1.52;

1.52
date	91.04.17.14.47.31;	author martyn;	state Exp;
branches;
next	1.51;

1.51
date	91.04.17.14.14.03;	author martyn;	state Exp;
branches;
next	1.50;

1.50
date	91.04.16.11.41.40;	author martyn;	state Exp;
branches;
next	1.49;

1.49
date	91.04.15.17.38.11;	author martyn;	state Exp;
branches;
next	1.48;

1.48
date	91.04.11.13.24.46;	author paul;	state Exp;
branches;
next	1.47;

1.47
date	91.04.05.17.19.59;	author bart;	state Exp;
branches;
next	1.46;

1.46
date	91.04.02.16.13.24;	author martyn;	state Exp;
branches;
next	1.45;

1.45
date	91.04.02.12.49.44;	author martyn;	state Exp;
branches;
next	1.44;

1.44
date	91.04.02.10.24.15;	author martyn;	state Exp;
branches;
next	1.43;

1.43
date	91.03.26.12.22.42;	author martyn;	state Exp;
branches;
next	1.42;

1.42
date	91.03.26.12.20.14;	author paul;	state Exp;
branches;
next	1.41;

1.41
date	91.03.19.16.19.34;	author martyn;	state Exp;
branches;
next	1.40;

1.40
date	91.03.19.16.14.19;	author martyn;	state Exp;
branches;
next	1.39;

1.39
date	91.03.19.15.29.27;	author martyn;	state Exp;
branches;
next	1.38;

1.38
date	91.03.14.18.32.44;	author paul;	state Exp;
branches;
next	1.37;

1.37
date	91.03.12.11.11.42;	author martyn;	state Exp;
branches;
next	1.36;

1.36
date	91.03.12.11.08.04;	author paul;	state Exp;
branches;
next	1.35;

1.35
date	91.03.08.16.12.53;	author martyn;	state Exp;
branches;
next	1.34;

1.34
date	91.03.08.16.09.39;	author paul;	state Exp;
branches;
next	1.33;

1.33
date	91.03.07.19.18.38;	author paul;	state Exp;
branches;
next	1.32;

1.32
date	91.03.07.16.14.11;	author paul;	state Exp;
branches;
next	1.31;

1.31
date	91.03.07.15.54.09;	author martyn;	state Exp;
branches;
next	1.30;

1.30
date	91.03.07.15.21.53;	author paul;	state Exp;
branches;
next	1.29;

1.29
date	91.03.07.12.37.45;	author paul;	state Exp;
branches;
next	1.28;

1.28
date	91.03.06.21.19.37;	author paul;	state Exp;
branches;
next	1.27;

1.27
date	91.02.19.16.49.54;	author paul;	state Exp;
branches;
next	1.26;

1.26
date	91.02.14.22.46.21;	author paul;	state Exp;
branches;
next	1.25;

1.25
date	91.01.22.19.11.25;	author paul;	state Exp;
branches;
next	1.24;

1.24
date	90.12.08.02.00.48;	author paul;	state Exp;
branches;
next	1.23;

1.23
date	90.11.27.12.12.42;	author martyn;	state Exp;
branches;
next	1.22;

1.22
date	90.11.27.12.08.13;	author paul;	state Exp;
branches;
next	1.21;

1.21
date	90.11.21.11.29.28;	author nick;	state Exp;
branches;
next	1.20;

1.20
date	90.11.18.17.30.50;	author paul;	state Exp;
branches;
next	1.19;

1.19
date	90.11.16.15.53.51;	author nick;	state Exp;
branches;
next	1.18;

1.18
date	90.11.15.16.45.33;	author paul;	state Exp;
branches;
next	1.17;

1.17
date	90.11.07.02.23.55;	author paul;	state Exp;
branches;
next	1.16;

1.16
date	90.11.07.01.28.32;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	90.11.06.16.34.04;	author martyn;	state Exp;
branches;
next	1.14;

1.14
date	90.11.06.15.55.51;	author martyn;	state Exp;
branches;
next	1.13;

1.13
date	90.11.06.12.42.33;	author nick;	state Exp;
branches;
next	1.12;

1.12
date	90.11.05.11.41.34;	author nick;	state Exp;
branches;
next	1.11;

1.11
date	90.11.02.16.19.01;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	90.11.01.16.07.18;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	90.10.30.18.13.50;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	90.10.24.00.51.36;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	90.10.22.12.21.09;	author martyn;	state Exp;
branches;
next	1.6;

1.6
date	90.10.22.11.53.52;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	90.10.09.12.53.33;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	90.09.26.19.36.13;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.09.13.14.13.48;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.07.13.30.21;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.08.29.13.34.12;	author nick;	state Exp;
branches;
next	;


desc
@Master makefile for Helios system
@


1.141
log
@added HostSysbuild rule/target to cope with new location of sysbuild program
@
text
@#-----------------------------------------------------------------------------
# Warning: "@@@@@@" in comment = Work here to be done!
#-----------------------------------------------------------------------------
#
# TO DO:
#
# Still to have generic makefiles written:
#
#	Bart: ioproc/iserver
#	Bart: cmds/games
#	bcpl - compiler/interpreter
#	fortran
#	X11
#	gnu utilities	- *LOTS of WORK*
#	other pd stuff	- *LOTS of WORK*
#	Fortran - wait for norcroft version?
#	PC Graphics - msgfx microsoft graphics library + inc in master make
#	Paul: generic makefile for ncc/ARM
#	Martyn: masterdisks - tar	get to create a set of master disks for
#		      this level in /HeliosRoot/MasterDisks/disk1, etc.
#	Add a public domain c pre-processor (cpp) to hostutils directory.
#		This will then be used by the release system.
#
# Check:
#	make clean under helios - env size problem (to be fixed in 1.3?)
#
# Change all makefiles to use DFLT.mak and RSRC capability:
#	All makefiles to include DFLT.mak and HVPATH
#
# Write doc defining the steps to be taken at each release:
#	clean/make/test/debug/fix/srctar/check make/freeze/masterdisks+srctar
#
# Document the Helios release system in this makefile
#
# Other than that...
#

#-----------------------------------------------------------------------------
# Helios Generic Make System - Top Level Makefile - Make Entire Helios World
#-----------------------------------------------------------------------------
#
# File: /HSRC/makefile
#
# These are host/processor independent rules to make the entire Helios
# system. It does this by executing other makefiles in individual component
# directories.
#
# You should only alter this makefile by using "ifeq ($(HPROC),YYY)"
# or "ifeq ($(HHOST),YYY)" clauses for a specific processor/host.
#
# Note that unlike all other makefiles in the Helios Generic make system,
# This makefile is executed in the Helios source root directory and not
# a processor specific directory.
#
# For more info consult "/HSRC/oemdocs/makesystem".
#
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.140 1994/03/17 11:56:26 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------
#
#
# BASIC TARGETS:
#
# default:		(if no target specified) makes the entire Helios system
# hostutil:		makes the utilities to make Helios on the host system
# install:		makes host utilities and then uses them to make Helios
#
#
# INDIVIDUAL TARGETS:
#
# Nucleus: / Nuc:	build just the Helios nucleus
# MkDefs:		make all .def library definition files
# Linklibs:		make link libraries c.lib and helios.lib
# LibHdrs:		both of the above
# ScanLibs:		make all of the scan libraries
#
#
# All the Library and Command items can be made individually as well:
#
# Libraries:		makes all the libraries:
#				Nucleus, Kernel, Util, Fault, Fplib, Posix,
#				all Scanlibs, etc
#
# Commands:		makes following:
#				Com, Ammp, Link, Asm, Make, GMake, Emacs,
#				Shell, Ncc, Tar, etc 
#
#
# RELEASE SYSTEM: @@@@@@ Document!
#
# TestRelease:
# SaRelease:
# TarRelease:
# CopyRelease:
# List:
#
#
# CLEANUP FACILITIES:
#
# clean:		removes all object and intermediate Helios system files
# hostclean:		removes all object and intermediate host utility files
# binclean:		removes all production binary programs and libraries
# realclean:		combines the three previous targets
# ultraclean:		all the other cleans + rcsclean
# quickclean:		just kernel:nucleus:util:fault:posix:clib:shell:cmd/com
# nucclean:		just kernel:nucleus:util
#
#
# BACKUP/SRC DELIVERY FACILITIES:
#
# srctar:		Intelligent tar backup of makefile defined sources
# gettar:		Get contents of tar backup
# tsttar:		Check consistency of tar backup
#
# tarbakall:		tar backup Helios source, rcs and binaries
#
#
#-----------------------------------------------------------------------------
# Reminders about make:
#
#	<tab> - "cmd"       = ignore exit status
#	<tab> @@ "cmd"       = dont print command
#	<tab> cd dir; "cmd" = cd and other command must be on same line if
#                             command is to be executed in that dir.
#
#	Consult GNU Make manual for more info.
#-----------------------------------------------------------------------------

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include makeinc/DFLT.mak
endif

ifndef HLICENSEE
 Stop the make!
 You have not defined who you are. I do not know what parts of Helios
 to build. Please check your make script (look in /hsrc/makeinc) or DFLT.mak
 file.
endif

include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables


# note what targets are phoney and not actual file targets
.PHONY: default install Mess1 EndMess1 MakeProdDir \
	TestRelease SaRelease TarRelease CopyRelease List \
	clean hostclean binclean realclean ultraclean quickclean nucclean \
	HostStartM HostEndM HostC HostIOS HostAmpp HostLink HostAsm \
	HostMisc hostutil HostUtil \
 	LibHdrs MkDefs Linklibs \
	nuc2 nuc Servers Nucleus Network romsys \
	Fault Kernel Util Posix Clib Fplib \
	PatchLib Abclib \
	Scanlibs Bsd Termcap Curses MsWin \
	Asm Shell Com Link Ampp Emacs Make GMake Tar Cdl \
	Debugger Tcpip Demos Hfs Help Fortran Bcpl Public Gnu \
	srctar gettar tsttar tarbakall makeltree \
	rcsunfreeze rcsfreeze rcslevel rcsclean rcscheck rcsreport


#-----------------------------------------------------------------------------
# Define what part of Helios to build for different licensee's
#

# Lists of source directories for use with clean, rcs and backup targets:

# Std source components:

NUCLEUS := 	text fault kernel nucleus nucleus/syslib util posix

NETWORK := 	network
NETPKGS :=
ifndef HSINGLEPROC
 NETPKGS := $(NETPKGS)  network/packages/farmlib network/packages/tftests \
	network/packages/hwtests1
endif

LIBRARIES := 	cmds/cc/clib fplib
#ifeq ($(HLICENSEE), ABC)
# LIBRARIES := 	$(LIBRARIES) abclib/patchlib abclib 
#endif

SCANLIBS :=	scanlibs scanlibs/bsd scanlibs/termcap scanlibs/curses 

ifeq ($(HPROC),TRAN)
 SCANLIBS := $(SCANLIBS) scanlibs/vectlib
endif
ifeq ($(HPROC),C40)
 SCANLIBS := $(SCANLIBS) scanlibs/vectlib scanlibs/IEEE64
endif

MSWIN :=		ioproc/mswin/lib

SERVERS := 	servers servers/common servers/servtask \
		servers/ttyserv servers/ttyserv/devs servers/ttyserv/ttyserv \
		servers/lock servers/include servers/logger servers/familiar

ifeq ($(HLICENSEE), ABC)
 SERVERS := 	$(SERVERS) servers/serial servers/codec servers/fdc \
		servers/helios servers/ramdisk servers/romdisk \
		servers/keyboard
endif

COMMANDS := 	cmds/support cmds/shell cmds/com cmds/textutil cmds/emacs \
		cmds/emacs.311 cmds/ampp cmds/private cmds/cdl cmds/make \
		cmds/cmdtests cmds/help

ifeq ($(HPROC),TRAN)
 COMMANDS := 	$(COMMANDS) cmds/asm
else
 COMMANDS := 	$(COMMANDS) cmds/linker cmds/assembler
endif

DEMOS :=	demos demos/hello demos/tut

ifndef HSINGLEPROC
DEMOS :=	$(DEMOS) demos/factor demos/lb \
		demos/pi demos/pi/pi_farm demos/pi/pi_fast demos/pi/pi_fort \
		demos/pi/pi_ring demos/servers demos/servers/keyboard \
		demos/rmlib demos/rmlib/mappipe demos/rmlib/buildrm \
		demos/rmlib/owners

 ifeq ($(HPROC), TRAN)
 DEMOS :=	$(DEMOS) demos/pi/pi_mix demos/pi/pi_mod2 \
		demos/pi/pi_pasc
 endif
endif

PUBLIC :=	cmds/public cmds/public/spreadsh cmds/public/clock \
		cmds/public/cookie cmds/public/yacc-1.4
		# @@@@@@ TODO generic makefiles:	ed stevie rcs mille sed

GNU :=		cmds/gnu cmds/gnu/gmake cmds/gnu/tar
		# @@@@@@ TODO generic makefiles:	cmds/gnu/bison cmds/gnu/diff \
		# cmds/gnu/flex cmds/gnu/gawk cmds/gnu/gcc
GNUMISC :=	cmds/gnu/gmake/make-doc

HOSTUTIL :=	cmds/hostutil

# std source license:

STDHELIOS :=	$(NUCLEUS) $(LIBRARIES) $(NETWORK) $(NETPKGS) $(SCANLIBS) \
		$(SERVERS) $(MSWIN) $(COMMANDS) $(DEMOS) $(PUBLIC) $(GNU) \
		$(HOSTUTIL)


# cut down nucleus only license (but includes fault+posix)

NUCHELIOS :=	$(NUCLEUS)


# Optional source licenses:

DEBUGGER := 	cmds/debugger cmds/debugger/lib

# TCP/IP
TCPCMDS :=	tcpip/cmds/ftp tcpip/cmds/ftpd tcpip/cmds/inetd \
		tcpip/cmds/ping tcpip/cmds/rexecd tcpip/cmds/rlogin \
		tcpip/cmds/rsh tcpip/cmds/rshd tcpip/cmds/telnet \
		tcpip/cmds/telnetd tcpip/cmds/rcp tcpip/cmds/rlogind \
		tcpip/cmds/binmail tcpip/cmds/sendmail tcpip/cmds/lpr

TCPDEVS :=	tcpip/devs/pc-ether
ifeq ($(HPROC),TRAN)
 TCPDEVS := $(TCPDEVS) tcpip/devs/in-ether tcpip/devs/sq-ether \
		tcpip/devs/ims-b431
endif

TCPIP := 	tcpip tcpip/cmds tcpip/helios tcpip/net \
		tcpip/netinet tcpip/sys tcpip/rpc/rpc \
		tcpip/nfs $(TCPCMDS) $(TCPDEVS)

# @@@@@@ No generic makefiles for these items (yet):
TCPEXTRAS :=	tcpip/etc tcpip/h tcpip/include tcpip/lib tcpip/machine

# @@@@@@ to be added:
#		tcpip/netstat tcpip/rpc tcpip/test tcpip/cmds/test 
#		tcpip/cmds/tftp tcpip/cmds/route tcpip/devs/hpt02
#		tcpip/laserp
# also, sort out mount.x and nfs_prot.x in NFS
# and the makefile for rpc/rpc

X11 := 		#@@@@@@ to add: X

ifeq ($(HPROC),C40)
  XBIN = $(HPROD)/../C40_X_Clients
endif


MSDOSFS :=	servers/msdosfs

HFSDEVS := filesys/devs/raw
ifeq ($(HPROC),TRAN)
 HFSDEVS := $(HFSDEVS) filesys/devs/m212 filesys/devs/he1000 \
		filesys/devs/msc filesys/devs/b422
endif

HFS :=		filesys filesys/fs filesys/cmds $(HFSDEVS)

ifeq ($(HPROC),TRAN)
  CCOMPILER := 	cmds/cc/compiler sa	# + standalone support
else
  ifeq ($(HPROC),C40)
    CCOMPILER :=	cmds/cc/ncc/cc350
  else
    CCOMPILER :=	cmds/cc/ncc/cc450
  endif
endif


# Host Tools:

# Tools that are run on both the host and on Helios
# i.e. must have a generic makefile

HOSTTOOLS := cmds/hostutil cmds/ampp Embedded/esysbuild

ifeq ($(HPROC),C40)
  HOSTTOOLS :=	$(HOSTTOOLS) cmds/public/yacc-1.4
else
  HOSTTOOLS :=  $(HOSTTOOLS) cmds/ampp cmds/help
endif


ifeq ($(HPROC),TRAN)
 HOSTTOOLS :=	$(HOSTTOOLS) cmds/asm cmds/com
else
 HOSTTOOLS := $(HOSTTOOLS) cmds/linker cmds/assembler
endif

# HOSTTOOLS will include C Compiler if NCC_LIC is set (see below)


# IO Server sources:
# So we can give out individual parts i.e. PC to some, unix to others, etc
# @@@@@@ The IO Server source delivery system has to be sorted out - will it
# have a generic style listing of the sources in each makefile - see Alan?

IOSSRC :=	ioproc/server
IOSMISC :=	ioproc/server/testprog
IOSMINI :=	ioproc/miniserv
IOSISERV := 	ioproc/iserver
IOSMSGFX :=	ioproc/msgfx
IOSUNIX :=	ioproc/server/sun
IOSPC :=	ioproc/server/ibm ioproc/pcmisc

# Extra places to check RCS files (subdirectories to these packages)
IOSRCSXTRA :=	ioproc/msgfx/xp ioproc/msgfx/msg

# The other bits (these don't have a generic makefile to note their filenames):

ALLINC :=	include include/sys include/net include/netinet include/arpa \
		include/dev include/X11

OEMDOC :=	oemdoc/$(HPROC) oemdoc/slots oemdoc/filetypes oemdoc/makesystem

# extras for the TCPIP package
TCPMISC :=	servers/ttyserv/debug servers/ttyserv/window $(TCPEXTRAS)

# otherbits for the C compiler package
ifeq ($(HPROC),TRAN)
  NCCMISC :=	cmds/cc/compiler/SUN4/include
endif
# Extra places to check RCS files (subdirectories to these packages)
NCCRCSXTRA :=	cmds/cc/compiler/SUN4/include/sys

# extras for the helios filesystem
HFSMISC :=	filesys/msdos

# if you have a source std licence you also get:
STDMISC := $(GNUMISC)

# if you have any source licence you get:
FREEMISC :=	makeinc $(OEMDOC)
# Extra places to check RCS files (subdirectories to these packages)
FREERCSXTRA :=	makeinc/template

# Odd bits in root directory
ODDFILES :=	makefile 


# Who has licenses for what:
# @@@@@@ Should also define the processor versions they have licenses for

ifeq ($(HLICENSEE), PERIHELION)		# The lot!

# These define what parts of Helios will be built/cleaned/tar'ed/rcs'ed
 SRC_LIC = TRUE
 NCC_LIC = TRUE
 HFS_LIC = TRUE
 MSDOS_LIC = TRUE
 DEBUG_LIC = TRUE
 TCPIP_LIC = TRUE
 IOS_LIC = TRUE
 X_LIC = TRUE

# What hosts we support the Helios build on:
 HOSTSUPPORT := SUN4 R140 HELIOSTRAN

# What hosts we support the IOServer on other than the PC:
 HOSTIOSUPPORT := SUN4 R140 HELIOSTRAN

# ALL licensee specific code that we support:
 XTRASRC := 	$(NETWORK)/telmat $(NETWORK)/parsytec $(NETWORK)/meiko
 EXTRAIOS :=	$(IOSSRC)/telmat $(IOSSRC)/bleistein $(IOSSRC)/gemini \
		$(IOSSRC)/st $(IOSSRC)/synergy $(IOSSRC)/windows \
		$(IOSSRC)/helios $(IOSSRC)/parsy $(IOSMSGFX) $(IOSISERV)
endif

ifeq ($(HLICENSEE), PERIHELION_C40)		# C40 system components

# These define what parts of Helios will be built/cleaned/tar'ed/rcs'ed
 SRC_LIC = TRUE
 NCC_LIC = TRUE
# HFS_LIC = TRUE
# MSDOS_LIC = TRUE
 DEBUG_LIC = TRUE
 TCPIP_LIC = TRUE
 IOS_LIC = TRUE
# X_LIC = TRUE

# What hosts we support the Helios build on:
 HOSTSUPPORT := SUN4 R140 HELIOSC40 HP

# What hosts we support the IOServer on other than the PC:
 HOSTIOSUPPORT := SUN4 R140 SUN3

# ALL licensee specific code that we support:
XTRASRC := 	
EXTRAIOS :=  $(IOSSRC)/windows	# $(IOSSRC)/helios $(IOSMSGFX)
endif

ifeq ($(HLICENSEE), PERIHELION_ARM)		# Helios-ARM system components

# These define what parts of Helios will be built/cleaned/tar'ed/rcs'ed
 SRC_LIC = TRUE
 NCC_LIC = TRUE
# HFS_LIC = TRUE
 MSDOS_LIC = TRUE
# DEBUG_LIC = TRUE
# TCPIP_LIC = TRUE
 IOS_LIC = TRUE
# X_LIC = TRUE

# What hosts we support the Helios build on:
 HOSTSUPPORT := SUN4 R140 HP

# What hosts we support the IOServer on other than the PC:
 HOSTIOSUPPORT := SUN4 R140 SUN3

# ALL licensee specific code that we support:
# XTRASRC := 	
EXTRAIOS :=  $(IOSSRC)/windows	# $(IOSSRC)/helios $(IOSMSGFX)
endif

ifeq ($(HLICENSEE), TELMAT)
 SRC_LIC = TRUE
 HFS_LIC = TRUE
 MSDOS_LIC = TRUE
 DEBUG_LIC = TRUE
 TCPIP_LIC = TRUE
 IOS_LIC = TRUE
 X_LIC = TRUE

 XTRASRC := 	$(NETWORK)/telmat
 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 EXTRAIOS :=	$(IOSSRC)/telmat $(IOSSRC)/helios $(IOSSRC)/windows/winsrvr_exe
endif

ifeq ($(HLICENSEE), PARSYTEC)
 SRC_LIC = TRUE
 HFS_LIC = TRUE
 DEBUG_LIC = TRUE
 TCPIP_LIC = TRUE
 IOS_LIC = TRUE
 X_LIC = TRUE

 XTRASRC :=	$(NETWORK)/parsytec
 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 EXTRAIOS := $(IOSSRC)/parsy
endif

ifeq ($(HLICENSEE), ETRI)
 SRC_LIC = TRUE
 HFS_LIC = TRUE
 DEBUG_LIC = TRUE
 TCPIP_LIC = TRUE
 IOS_LIC = TRUE
 X_LIC = TRUE

 XTRASRC :=
 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 EXTRAIOS :=
endif

ifeq ($(HLICENSEE), CDAC)
 SRC_LIC = TRUE
 IOS_LIC = TRUE

 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 XTRASRC :=
 XTRAIOS :=
endif

ifeq ($(HLICENSEE), INMOS)
 NCC_LIC = TRUE

 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 XTRASRC :=
 XTRAIOS :=
endif

ifeq ($(HLICENSEE),ABC)
 SRC_LIC = TRUE
 MSDOS_LIC = TRUE
 NCC_LIC = TRUE
 IOS_LIC = TRUE

 HOSTSUPPORT := R140
 HOSTIOSUPPORT := R140
 XTRASRC :=
 XTRAIOS :=
endif

ifeq ($(HLICENSEE), IGM)
 NUC_LIC = TRUE
 HFS_LIC = TRUE
 MSDOS_LIC = TRUE
 IOS_LIC = TRUE

 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 XTRASRC :=
 XTRAIOS :=
endif

ifeq ($(HLICENSEE), HPLABS)
 NUC_LIC = TRUE
 IOS_LIC = TRUE

 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 XTRASRC :=
 XTRAIOS :=
endif

ifeq ($(HLICENSEE), CSIR)
 HFS_LIC = TRUE
 IOS_LIC = TRUE

 HOSTSUPPORT := SUN4 HELIOSTRAN
 HOSTIOSUPPORT := SUN4
 XTRASRC :=
 XTRAIOS :=
endif

ifeq ($(HLICENSEE), ALENIA)
 SRC_LIC = TRUE
 IOS_LIC = TRUE

 HOSTSUPPORT := HELIOSC40
 HOSTIOSUPPORT := SUN4
 XTRAIOS :=	$(IOSSRC)/unix/hepc $(IOSSRC)/unix/nidio $(IOSSRC)/rs6000
endif

# Define what parts of Helios will be targeted in rcs, clean and tar rules

ALLSRC :=	$(XTRASRC)
ALLMISC :=	$(FREEMISC)

ifdef SRC_LIC
 ALLSRC :=	$(ALLSRC) $(STDHELIOS)
 ALLMISC :=	$(ALLMISC) $(STDMISC) $(foreach MC, $(HOSTSUPPORT), $(HOSTUTIL)/$(MC)/makefile)
endif

ifdef DEBUG_LIC
 ALLSRC :=	$(ALLSRC) $(DEBUGGER)
endif

ifdef NUC_LIC
 SERVERS :=	servers/servtask
 ALLSRC :=	$(ALLSRC) $(NUCLEUS) fplib $(HOSTUTIL) cmds/support \
		$(SERVERS)
# ALLMISC :=	$(ALLMISC) $(foreach MC, $(HOSTSUPPORT), $(HOSTUTIL)/$(MC))
endif

ifdef MSDOS_LIC
 ALLSRC :=	$(ALLSRC) $(MSDOSFS)
endif

ifdef HFS_LIC
 ALLSRC :=  	$(ALLSRC) $(HFS)
 ALLMISC :=	$(ALLMISC) $(HFSMISC)
endif

ifdef TCPIP_LIC
 ALLSRC :=	$(ALLSRC) $(TCPIP)
 ALLMISC :=	$(ALLMISC) $(TCPMISC)
endif

ifdef X_LIC
 ALLSRC := 	$(ALLSRC) $(X)
endif

ifdef NCC_LIC
 ALLSRC := 	$(ALLSRC) $(CCOMPILER)
 ALLMISC :=	$(ALLMISC) $(NCCMISC)

 ifeq ($(HPROC),TRAN)
   HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/compiler
 else
  ifeq ($(HPROC),C40)
   HOSTTOOLS := $(HOSTTOOLS) cmds/cc/ncc/cc350
  else
    ifeq ($(HPROC),ARM)
     HOSTTOOLS := $(HOSTTOOLS) cmds/cc/ncc/cc450
    endif
  endif
 endif
endif

ifdef IOS_LIC
 STDIOS :=	$(IOSSRC)
 ALLIOS :=	$(XTRAIOS) $(IOSMISC) $(IOSMINI) $(IOSUNIX) $(IOSPC)

 # Add extra ioserver versions for the supported hosts
 ALLIOS :=	$(ALLIOS) $(foreach HST, $(HOSTIOSUPPORT), $(STDIOS)/$(HST) )
endif

# Define the host tool support directories
ALLHOST :=	$(foreach MC, $(HOSTSUPPORT), $(foreach HDIR, $(HOSTTOOLS), $(HDIR)/$(MC)))


#-----------------------------------------------------------------------------
# default rule to MAKE ENTIRE HELIOS SYSTEM
#

ifdef NUC_LIC
 MAINTARGETS := LibHdrs Nucleus 
endif

ifdef SRC_LIC
 MAINTARGETS := LibHdrs Nucleus Libraries Network MsWin Commands Demos Gnu Public
 ifeq ($(HLICENSEE), ABC)
  MAINTARGETS := $(MAINTARGETS) romsys
 endif
endif

ifdef DEBUG_LIC
 MAINTARGETS := $(MAINTARGETS) Debugger
endif
ifdef TCPIP_LIC
 MAINTARGETS := $(MAINTARGETS) Tcpip
endif

default: Mess1 $(MAINTARGETS) EndMess1


# Make entire Helios system from scratch
install: MakeProdDir HostUtil default


#-----------------------------------------------------------------------------
# Start and End Messages

Mess1:
	@@echo " [[[[[ Making entire **Helios/$(HPROC)** world ]]]]]"

EndMess1:
	@@echo "	[[[[[ Entire **Helios/$(HPROC)** world made successfully ]]]]]"


#-----------------------------------------------------------------------------
# Shorthand

nuc: LibHdrs Kernel Util Nuc
hostutil: HostUtil


#-----------------------------------------------------------------------------
# Make production directories
# @@@@@@ Should also copy cshrc, loginrc, initrc, motd, etc?

MakeProdDir:
	@@ test -d $(HPROD)     || mkdir $(HPROD)
	@@ test -d $(HPROD)/tmp || mkdir $(HPROD)/tmp
	-touch $(HPROD)/tmp/dummy
	@@ test -d $(HPROD)/etc || mkdir $(HPROD)/etc
ifeq ($(HHOST),SUN4)
	-rm $(HPROD)/etc0 $(HPROD)/etc1 $(HPROD)/tmp0 $(HPROD)/tmp1
	-ln -s $(HPROD)/etc $(HPROD)/etc0
	-ln -s $(HPROD)/etc $(HPROD)/etc1
	-ln -s $(HPROD)/tmp $(HPROD)/tmp0
	-ln -s $(HPROD)/tmp $(HPROD)/tmp1
endif
	@@ test -d  $(HPROD)/lib ||	mkdir $(HPROD)/lib
	@@ test -d  $(HPROD)/bin ||	mkdir $(HPROD)/bin
	@@ test -d  $(HPROD)/bin/private ||	mkdir $(HPROD)/bin/private
	@@ test -d  $(HPROD)/system ||	mkdir $(HPROD)/system
	@@ test -d  $(HPROD)/users ||	mkdir $(HPROD)/users
	@@ test -d  $(HPROD)/users/root ||	mkdir $(HPROD)/users/root
	@@ test -d  $(HPROD)/users/shutdown ||	mkdir $(HPROD)/users/shutdown
	@@ test -d  $(HPROD)/users/guest ||	mkdir $(HPROD)/users/guest
	@@ test -d  $(HPROD)/users/guest/examples ||	mkdir $(HPROD)/users/guest/examples
	@@ test -d  $(HPROD)/users/guest/examples/servers ||	mkdir $(HPROD)/users/guest/examples/servers
	@@ test -d  $(HPROD)/local || mkdir $(HPROD)/local
	@@ test -d  $(HPROD)/local/lib ||	mkdir $(HPROD)/local/lib
	@@ test -d  $(HPROD)/local/lib/tex ||	mkdir $(HPROD)/local/lib/tex
	@@ test -d  $(HPROD)/local/bin ||	mkdir $(HPROD)/local/bin
	@@ test -d  $(HPROD)/local/bin/X11 ||	mkdir $(HPROD)/local/bin/X11
	@@ test -d  $(HPROD)/local/games ||	mkdir $(HPROD)/local/games
	@@ test -d  $(HPROD)/local/src ||	mkdir $(HPROD)/local/src
	@@ test -d  $(HPROD)/local/src/hfs ||	mkdir $(HPROD)/local/src/hfs
	@@ test -d  $(HPROD)/local/src/hfs/b422 ||	mkdir $(HPROD)/local/src/hfs/b422
	@@ test -d  $(HPROD)/local/src/hfs/he1000 ||	mkdir $(HPROD)/local/src/hfs/he1000
	@@ test -d  $(HPROD)/local/src/hfs/m212 ||	mkdir $(HPROD)/local/src/hfs/m212
	@@ test -d  $(HPROD)/local/src/hfs/msc ||	mkdir $(HPROD)/local/src/hfs/msc
	@@ test -d  $(HPROD)/local/src/hfs/raw ||	mkdir $(HPROD)/local/src/hfs/raw
	@@ test -d  $(HPROD)/local/tcpip ||	mkdir $(HPROD)/local/tcpip
	@@ test -d  $(HPROD)/local/tcpip/example ||	mkdir $(HPROD)/local/tcpip/example
	@@ test -d  $(HPROD)/local/tcpip/pc-ether ||	mkdir $(HPROD)/local/tcpip/pc-ether
ifeq ($(HHOST),HELIOSTRAN)
     	@@ test -d  $(HPROD)/include ||	mkdir $(HPROD)/include
	-cp -r $(HSRC)/include/* $(HPROD)/include
else
ifeq ($(HHOST),HELIOSC40)
	test -d  $(HPROD)/include ||	mkdir $(HPROD)/include
	-cp -r $(HSRC)/include/* $(HPROD)/include
else
	@@ test -L $(HPROD)/include || ln -s $(HSRC)/include $(HPROD)
	@@ test -L $(HPROD)/bin/X11 || ln -s $(XBIN)/bin/X11 $(HPROD)/bin
	@@ test -L $(HPROD)/lib/X11 || ln -s $(XBIN)/lib/X11 $(HPROD)/lib
endif
endif
	-cp $(HSRC)/ioproc/server/ibm/server_exe/server.exe $(HPROD)
	-cp $(HSRC)/ioproc/server/windows/winsrvr_exe/winsrvr.exe $(HPROD)
	$(MAKE) -C text install


#-----------------------------------------------------------------------------
# Software Release System

ifeq ($(HHOST),HELIOSTRAN)
 CPP = /helios/lib/cpp#
endif

TestRelease :
	$(CPP)  -D$(OPTS) -DHELIOS=$(HPROD) -DHPROC=$(HPROC) -DSYSTEM <Files >test.rel
ifeq (HELIOS,$(findstring HELIOS,$(HHOST)))
	chmod 0777 test.rel
	./test.rel
else
	chmod 0777 test.rel
	./test.rel
endif

TarRelease :
	$(CPP)  -D$(OPTS) -DTAR -DHELIOS=$(HPROD) -DTARFILE=helios.tar \
		-DHPROC=$(HPROC) -DSYSTEM <Files >tar.rel
ifeq (HELIOS,$(findstring HELIOS,$(HHOST)))
	chmod 0777 tar.rel
	./tar.rel
else
	chmod 0777 tar.rel
	./tar.rel
endif

SaRelease :
	$(CPP) -DTAR -DHELIOS=$(HPROD) -DTARFILE=sa.tar \
		-DHPROC=$(HPROC) -DSA <Files >tar.rel
ifeq (HELIOS,$(findstring HELIOS,$(HHOST)))
	chmod 0777 tar.rel
	./tar.rel
else
	chmod 0777 tar.rel
	./tar.rel
endif

List :
	$(CPP)  -D$(OPTS) -DLIST -DHELIOS=$(HPROD) \
		-DHPROC=$(HPROC) -DSYSTEM <Files >list.rel
ifeq (HELIOS,$(findstring HELIOS,$(HHOST)))
	chmod 0777 list.rel
	./list.rel
else
	chmod 0777 list.rel
	./list.rel
endif

CopyRelease :
	$(CPP)  -D$(OPTS) -DCOPY -DHELIOS=$(HPROD) -DRELDIR=$(RELDIR) \
		-DHPROC=$(HPROC) -DSYSTEM <Files >cp.rel
ifeq (HELIOS,$(findstring HELIOS,$(HHOST)))
	chmod 0777 cp.rel
	./cp.rel
else
	chmod 0777 cp.rel
	./cp.rel
endif


#-----------------------------------------------------------------------------
# Host Utility programs:

ifdef NUC_LIC
 HOSTTARGETS := HostMisc HostSysbuild
endif
ifdef SRC_LIC
 ifeq ($(HPROC),TRAN)
  HOSTTARGETS := HostMisc HostAmpp HostAsm HostIOS HostHelp HostSysbuild
 else
  HOSTTARGETS := HostMisc HostAmpp HostYacc HostAsm HostIOS HostHelp HostLink HostSysbuild
 endif
endif

ifdef NCC_LIC
 HOSTTARGETS := $(HOSTTARGETS) HostC
endif

HostStartM:
	@@echo "	[[[[[ Making $(HHOST) HOST utilities for Helios/$(HPROC) ]]]]]"

HostEndM:
	@@echo "	[[[[[ Successfully made $(HHOST) HOST utilities for Helios/$(HPROC) ]]]]]"

HostMisc:
	@@echo "				[[[ Making HOST misc utils ]]]"
	$(MAKE) -C cmds/hostutil/$(HHOST) install	

HostSysbuild:
	@@echo "				[[[ Making HOST Sysbuild ]]]"
	$(MAKE) -C Embedded/esysbuild/$(HHOST) install

HostAmpp:
	@@echo "				[[[ Making HOST ampp ]]]"
	$(MAKE) -C cmds/ampp/$(HHOST) install

HostYacc:
    ifeq ($(HHOST),HELIOSTRAN)
	@@echo "				[[[ Skipping HOST yacc ]]]"
    else
	@@echo "				[[[ Making HOST yacc ]]]"
	$(MAKE) -C cmds/public/yacc-1.4/$(HHOST) install
    endif

HostLink:
	ifeq ($(HHOST),HELIOSC40)
		@@echo "			[[[ Skipping HOST linker ]]]"
	else
		@@echo "			[[[ Making HOST linker ]]]"
		$(MAKE) -C cmds/linker/$(HHOST) install
	endif

HostIOS:
ifeq ($(HHOST),HP)
	@@echo "				[[[ No HOST IO Server for HPUX ]]]"
else
    ifeq ($(HHOST),HELIOSTRAN)
	@@echo "				[[[ Skipping HOST IO Server ]]]"
    else
    ifeq ($(HHOST),HELIOSC40)
	@@echo "				[[[ Skipping HOST IO Server ]]]"
    else
	@@echo "				[[[ Making HOST IO Server ]]]"
	$(MAKE) -C ioproc/server/$(HHOST) install
    endif
    endif
endif

HostAsm:
ifeq ($(HPROC),TRAN)
	@@echo "				[[[ Making HOST Assembler ]]]"
	$(MAKE) -C cmds/asm/$(HHOST) install
else
	ifeq ($(HHOST),HELIOSC40)
		@@echo "				[[[ Skipping HOST assembler ]]]"
	else
		@@echo "				[[[ Making HOST Assembler ]]]"
		$(MAKE) -C cmds/assembler/$(HHOST) install
	endif
endif

HostHelp:
ifeq ($(HHOST),HELIOSC40)
	@@echo "				[[[ Skipping HOST help ]]]"
else
	@@echo "				[[[ Making HOST Help ]]]"
	$(MAKE) -C cmds/help/$(HHOST) install
endif

HostC:
	@@echo "				[[[ Making HOST C Compiler ]]]"
ifeq ($(HPROC),TRAN)
	$(MAKE) -C cmds/cc/compiler/$(HHOST) install
else
 ifeq ($(HPROC),ARM)
	$(MAKE) -C cmds/cc/ncc/cc450/$(HHOST) install
 else
   ifeq ($(HPROC),C40)
	$(MAKE) -C cmds/cc/ncc/cc350/$(HHOST) install
   else
	@@echo "				[[[ @@@@@@ Add rule to Make HOST C Compiler ]]]"
   endif
 endif
endif

HostUtil: HostStartM $(HOSTTARGETS) HostEndM


#-----------------------------------------------------------------------------
# Library definition files

LibHdrs: MkDefs Linklibs
	@@echo "				[[[ Made library header files ]]]"


# Make all library definition and startup code files:
MkDefs:
	@@echo "				[[[ Making library definition files ]]]"
	$(MAKE) -C kernel/$(HPROC) installdef
	$(MAKE) -C util/$(HPROC) installdef
	$(MAKE) -C nucleus/$(HPROC) installdef
	$(MAKE) -C fault/$(HPROC) installdef
	$(MAKE) -C posix/$(HPROC) installdef
	$(MAKE) -C fplib/$(HPROC) installdef
ifndef NUC_LIC
	$(MAKE) -C cmds/cc/clib/$(HPROC) installdef
endif
ifeq ($(HLICENSEE),ABC)
	$(MAKE) -C abclib/$(HPROC) installdef
	$(MAKE) -C abclib/patchlib/$(HPROC) installdef
endif


# Create link library files

Linklibs: 
	@@echo "				[[[ Making shared link libraries ]]]"
ifeq ($(HPROC),TRAN)		# use tokenised assembler
	asm -p -o $(LIB)/helios.lib	\
		$(LIB)/kernel.def	\
		$(LIB)/syslib.def	\
		$(LIB)/util.def		\
		$(LIB)/servlib.def	\
		$(LIB)/fault.def	\
		$(LIB)/fplib.def	\
		$(LIB)/posix.def
ifndef NUC_LIC
	asm -p -o $(LIB)/c.lib		\
		$(LIB)/clib.def		\
		$(LIB)/fpclib.def	
endif
else
	cat 	$(LIB)/kernel.def	\
		$(LIB)/syslib.def	\
		$(LIB)/util.def		\
		$(LIB)/servlib.def	\
		$(LIB)/fault.def	\
		$(LIB)/fplib.def	\
		$(LIB)/posix.def	\
		> $(LIB)/helios.lib
	cat	$(HPROD)/lib/clib.def	\
		> $(LIB)/c.lib			
					# note no fpclib
endif


#-----------------------------------------------------------------------------
# The Helios Nucleus
#
# System/Servlib libs, servers and system image
# Fault library made for codes.h, errno.h and signal.h

# Note libraries that are included in the nucleus as std.
PRENUC := Fault Kernel Util

ifeq ($(HLICENSEE),ABC)
# Most libraries are included in ABC's ROMed ARM nucleus
 PRENUC := $(PRENUC) Abclib Posix Clib Fplib Patchlib 
endif

# Build scanlibs before servers so that servers can use them
ifdef SRC_LIC
 PRENUC := $(PRENUC) Scanlibs Servers
 ifdef HFS_LIC
  PRENUC := $(PRENUC) Hfs
 endif
endif
ifdef NUC_LIC
 PRENUC := $(PRENUC) Servtask Posix
endif

# Build servers before Nuc so they can be included in nucleus
Nucleus: Mess2 $(PRENUC) Nuc EndMess2

Nuc:
	@@echo "				[[[ Making Nucleus ]]]"
	$(MAKE) -C nucleus/$(HPROC) install 

Mess2:
	@@echo "		[[[[ Making **Helios/$(HPROC)** Nucleus ]]]]"

EndMess2:
	@@$(HHOSTBIN)/newmotd > ${HPROD}/etc/motd
	@@$(HHOSTBIN)/newmotd
	@@echo "		[[[[ **Helios/$(HPROC)** Nucleus made successfully ]]]]"


#-----------------------------------------------------------------------------
# For servers not included in the nucleus directory

Servers:
	@@echo "				[[[ Making servers and drivers ]]]"
	$(MAKE) -C servers/$(HPROC) install


#-----------------------------------------------------------------------------
# servtask for NUC_LIC

Servtask:
	@@echo "				[[[ Making servtask ]]]"
	$(MAKE) -C servers/servtask/$(HPROC) install


#-----------------------------------------------------------------------------
# For Rommed systems Now build the ROM image and ROM disk.
# Make romsys last so any command can also be included in the nucleus or romdisk

romsys:
ifeq ($(HLICENSEE),ABC)
# Helios ARM low Executive and ROM system (ROM disk and ROM image)
	@@echo "				[[[ Making ARM Executive and ROM system ]]]"
	$(MAKE) -C kernel/$(HPROC) romsys
else
	@@echo "				[[[ ROM resident system not supported for $(HPROC) processor]]]"
endif


#-----------------------------------------------------------------------------
# The Helios Libraries

ifdef NUC_LIC
HELIOSLIBS := Fault Kernel Util Posix
endif

ifdef SRC_LIC
 HELIOSLIBS := Fault Kernel Util Posix Clib Fplib
 ifeq ($(HLICENSEE),ABC)
  HELIOSLIBS := $(HELIOSLIBS) Patchlib Abclib
 endif
endif

# Nucleus should be made last as it may include some of these libraries
HELIOSLIBS := $(HELIOSLIBS) Nuc

Libraries: Scanlibs $(HELIOSLIBS)
	@@echo "				[[[ Made Helios Libaries ]]]"

# The kernel
Kernel:
	@@echo "				[[[ Making Kernel ]]]"
	$(MAKE) -C kernel/$(HPROC) install

# Utility library
Util:
	@@echo "				[[[ Making Util lib ]]]"
	$(MAKE) -C util/$(HPROC) install

# Floating point libraries
Fplib:
	@@echo "				[[[ Making FPlib ]]]"
	$(MAKE) -C fplib/$(HPROC) install

# Fault library
Fault:
	@@echo "				[[[ Making Fault lib ]]]"
	$(MAKE) -C fault/$(HPROC) install

# Posix library
Posix:
	@@echo "				[[[ Making Posix lib ]]]"
	$(MAKE) -C posix/$(HPROC) install

# C language support library
Clib:
	@@echo "				[[[ Making Clib ]]]"
	$(MAKE) -C cmds/cc/clib/$(HPROC) install


ifeq ($(HLICENSEE),ABC)
# Patch library
Patchlib:
	@@echo "				[[[ Making PatchLIB ]]]"
	$(MAKE) -C abclib/patchlib/$(HPROC) install


# ABClib library
Abclib:
	@@echo "				[[[ Making ABClib ]]]"
	$(MAKE) -C abclib/$(HPROC) install
endif


# Build All the Scan Libraries
Scanlibs:
	@@echo "				[[[ Making all Scan Libraries ]]]"
	$(MAKE) -C scanlibs/$(HPROC) install

# Scan libraries that can be made individually (not realy needed I know)

# BSD library
Bsd:
	@@echo "				[[[ Making BSD lib ]]]"
	$(MAKE) -C scanlibs/bsd/$(HPROC) install

# Curses library
Curses:
	@@echo "				[[[ Making Curses lib ]]]"
	$(MAKE) -C scanlibs/curses/$(HPROC) install

# Termcap library
Termcap:
	@@echo "				[[[ Making Termcap lib ]]]"
	$(MAKE) -C scanlibs/termcap/$(HPROC) install


# MsWindows graphics library
MsWin: Network
	@@echo "				[[[ Making MsWin library ]]]"
	$(MAKE) -C ioproc/mswin/lib/$(HPROC) install

#-----------------------------------------------------------------------------
# Network support
#
# Make even for single processor versions - network makefile will make
# versions of wsh, ps, loaded and run that do not require ns/tfm/RmLib

Network:
	@@echo "				[[[ Making Network Software ]]]"
	$(MAKE) -C network/$(HPROC) install


#-----------------------------------------------------------------------------
# Helios Commands
#
# @@@@@@ Should also add all other GNU utilities + other pd suff - steVIe
# Or possibly top level GNU make file

CMDTARGETS := Shell Com Asm Ampp Emacs GMake Tar Testsuite Help Make

ifdef NCC_LIC
 CMDTARGETS := $(CMDTARGETS) Ncc 
endif

ifndef HSINGLEPROC
 CMDTARGETS := $(CMDTARGETS) Cdl
endif

ifneq ($(HPROC),TRAN)
 CMDTARGETS := $(CMDTARGETS) Link
endif

ifeq ($(HPROC),TRAN) # only tranny version bothers with old make
 CMDTARGETS := $(CMDTARGETS) Make
endif

Commands: $(CMDTARGETS)

# NorCroft ANSI C Compiler
Ncc:
	@@echo "				[[[ Making Norcroft C Compiler ]]]"
ifeq ($(HPROC),TRAN)
	$(MAKE) -C cmds/cc/compiler/$(HPROC) install
	$(MAKE) -C sa/$(HPROC) install	
					# also make standalone support
else
  ifeq ($(HPROC),C40)
	$(MAKE) -C cmds/cc/ncc/cc350/$(HPROC) install
  else
	$(MAKE) -C cmds/cc/ncc/cc450/$(HPROC) install
  endif
endif

# Shell
Shell:
	@@echo "				[[[ Making Shell ]]]"
	$(MAKE) -C cmds/shell/$(HPROC) install

# Make
GMake:
	@@echo "				[[[ Making GNU Make ]]]"
	$(MAKE) -C cmds/gnu/gmake/$(HPROC) install

# Tar
Tar:
	@@echo "				[[[ Making GNU Tar ]]]"
	$(MAKE) -C cmds/gnu/gtar/$(HPROC) install

Make:
	@@echo "				[[[ Making Make ]]]"
	$(MAKE) -C cmds/make/$(HPROC) install

# Helios portable object format Linker
Link:
ifneq ($(HPROC),TRAN)
	@@echo "				[[[ Making linker/imdump/objdump]]]"
	$(MAKE) -C cmds/linker/$(HPROC) install
endif

# Transputer Assembler linker
Asm:
ifeq ($(HPROC),TRAN)
	@@echo "				[[[ Making Transputer assembler/linker asm ]]]"
	$(MAKE) -C cmds/asm/$(HPROC) install
else
	@@echo "				[[[ Making $(HPROC) assembler ]]]"
	$(MAKE) -C cmds/assembler/$(HPROC) install
endif

# Assembler Macro Preprocessor
Ampp:
	@@echo "				[[[ Making ampp ]]]"
	$(MAKE) -C cmds/ampp/$(HPROC) install

# Emacs editor
Emacs:
	@@echo "				[[[ Making Emacs ]]]"
	$(MAKE) -C cmds/emacs/$(HPROC) install
	$(MAKE) -C cmds/emacs.311/$(HPROC) install

# Component Distribution Language
Cdl:
	@@echo "				[[[ Making CDL ]]]"
	$(MAKE) -C cmds/cdl/$(HPROC) install

# General Helios Commands
Com:
	@@echo "				[[[ Making General Commands ]]]"
	$(MAKE) -C cmds/com/$(HPROC) install
	$(MAKE) -C cmds/textutil/$(HPROC) install
	$(MAKE) -C cmds/private/$(HPROC) install

Testsuite:
	@@echo "				[[[ Making Command Test Suite ]]]"
	$(MAKE) -C cmds/cmdtests/$(HPROC) install


#-----------------------------------------------------------------------------
# Demos and Tutorials

Demos:
	@@echo "				[[[ Making Demos ]]]"
	$(MAKE) -C demos/$(HPROC) install


#-----------------------------------------------------------------------------
# Public domain software - games/utils/etc (but not GNU)

Public:
	@@echo "				[[[ Making Public Domain Programs ]]]"
	$(MAKE) -C cmds/public/$(HPROC) install


# GNU semi-public domain software
Gnu:
	@@echo "				[[[ Making Public Domain Programs ]]]"
	$(MAKE) -C cmds/gnu/$(HPROC) install


#-----------------------------------------------------------------------------
# X Window system
# @@@@@@ NOT TESTED - no generic makefile yet

X11:
	@@echo "				[[[ Making X11 servers and drivers ]]]"
	$(MAKE) -C X/$(HPROC) install


#-----------------------------------------------------------------------------
# Source Level Debugger

Debugger:
	@@echo "				[[[ Making TLA source level debugger ]]]"
	$(MAKE) -C cmds/debugger/$(HPROC) install
	$(MAKE) -C cmds/debugger/lib/$(HPROC) install


#-----------------------------------------------------------------------------
# Ethernet TCP/IP support

Tcpip:
	@@echo "				[[[ Making TCP/IP servers and tools ]]]"
	$(MAKE) -C tcpip/$(HPROC) install


#-----------------------------------------------------------------------------
# Helios file system

Hfs:
	@@echo "				[[[ Making Helios file system server, drivers and commands ]]]"
	$(MAKE) -C filesys/$(HPROC) install


#-----------------------------------------------------------------------------
# Fortran
# @@@@@@ NOT TESTED - requires BCPL - no generic makefiles yet

Fortran:
	@@echo "				[[[ Making Fortran ]]]"
ifeq ($(HPROC), TRAN)
	$(MAKE) -C cmds/bcpl/fortran
else
	$(MAKE) -C cmds/bcpl/fortran/$(HPROC) install
endif


#-----------------------------------------------------------------------------
# Help

Help:
	@@echo "				[[[ Making Help System ]]]"
	$(MAKE) -C cmds/help/$(HPROC) install


#-----------------------------------------------------------------------------
# BCPL
# @@@@@@ NOT TESTED - no generic makefiles yet

Bcpl:
	@@echo "				[[[ Making BCPL ]]]"
ifeq ($(HPROC), TRAN)
	$(MAKE) -C cmds/bcpl/$(HPROC) install
else
	$(MAKE) -C cmds/bcplterp/$(HPROC) install
					# make interpreter
endif


#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# MAKEFILE UTILITIES


#-----------------------------------------------------------------------------
# RCS targets *Only used by Perihelion* 
#
#
#	rcsfreeze	create a global freeze level
#	rcslevel	globally checkout a particular level
#	rcsclean	globally cleanout all files held under rcs (springclean)
#	rcscheck	globally check that all files are check in
#	rcsreport	globally print reports of changes between RCSLEVEL
#			and RCSLEVEL2. RCSLEVEL2 is optional, leaving it out
#			will give reports up to the latest version.
#
#	We pass an RCSLEVEL=xxx parameter to make for rcslevel and rcsfreeze.


RCSMISC :=	. $(ALLINC) oemdoc makeinc $(NCCRCSXTRA) $(FREERCSXTRA) \
		$(IOSRCSXTRA)
# $(HSRC) in last target to get master makefile and Files checked

rcsfreeze:
ifndef RCSLEVEL
	@@echo "RCSLEVEL=XXX must be defined for rcsfreeze"
else
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsfreeze $(RCSDIR)/$(HPROC) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/$(HPROC)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
endif

rcsunfreeze:
ifndef RCSLEVEL
	@@echo "RCSLEVEL=XXX must be defined for rcsunfreeze"
else
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsunfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcs -n$(RCSLEVEL) *; )
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsunfreeze $(RCSDIR)/$(HPROC) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/$(HPROC)/RCS; rcs -n$(RCSLEVEL) *; )
	-@@$(foreach RCSDIR, $(ALLHOST), echo rcsunfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcs -n$(RCSLEVEL) *; )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo rcsunfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcs -n$(RCSLEVEL) *; )
	-@@$(foreach RCSDIR, $(RCSMISC), echo rcsunfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/RCS; rcs -n$(RCSLEVEL) *; )
endif

rcsdiff:
ifndef RCSLEVEL
	@@echo "RCSLEVEL=XXX must be defined for rcsdiff"
else
TMP=/tmp
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsdiff $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR); rcsdiff -r$(RCSLEVEL) RCS/*; )
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsdiff $(RCSDIR)/$(HPROC) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR)/$(HPROC); rcsdiff -r$(RCSLEVEL) RCS/*; )
	-@@$(foreach RCSDIR, $(ALLHOST), echo rcsdiff $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR); rcsdiff -r$(RCSLEVEL) RCS/*; )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo rcsdiff $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR); rcsdiff -r$(RCSLEVEL) RCS/*; )
	-@@$(foreach RCSDIR, $(RCSMISC), echo rcsdiff $(RCSDIR) @@ $(RCSLEVEL); cd $(HSRC)/$(RCSDIR); rcsdiff -r$(RCSLEVEL) RCS/*; )
endif

rcslevel:
ifndef RCSLEVEL
	@@echo "RCSLEVEL=XXX must be defined for rcslevel to work"
else
	-@@$(foreach RCSDIR, $(ALLSRC), echo "co $(RCSDIR) -f$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -f$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo "co $(RCSDIR)/$(HPROC) -f$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR)/$(HPROC); co -f $(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo "co $(RCSDIR) -f$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -f$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo "co $(RCSDIR) -f$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -f$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo "co $(RCSDIR) -f$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -f$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
endif

rcsclean:
	-@@$(foreach RCSDIR, $(ALLSRC), echo cleaning $(RCSDIR); rcsclean $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo cleaning $(RCSDIR)/$(HPROC); rcsclean $(wildcard $(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo cleaning $(RCSDIR); rcsclean $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo cleaning $(RCSDIR); rcsclean $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo cleaning $(RCSDIR); rcsclean $(wildcard $(RCSDIR)/RCS/*); )

rcscheck:
	-@@$(foreach RCSDIR, $(ALLSRC), echo checking $(RCSDIR); cd $(HSRC)/$(RCSDIR); rlog -L -h RCS/*; )
	-@@$(foreach RCSDIR, $(ALLSRC), echo checking $(RCSDIR)/$(HPROC); rlog -L -h $(wildcard $(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS/*); )

rcsreport:
	-@@$(foreach RCSDIR, $(ALLSRC), echo RCS changes report on $(RCSDIR); rlog -r$(RCSLEVEL)-$(RCSLEVEL2) $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo RCS changes report on $(RCSDIR)/$(HPROC); rlog -r$(RCSLEVEL)-$(RCSLEVEL2) $(wildcard $(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo RCS changes report on $(RCSDIR); rlog -r$(RCSLEVEL)-$(RCSLEVEL2) $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo RCS changes report on $(RCSDIR); rlog -r$(RCSLEVEL)-$(RCSLEVEL2) $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo RCS changes report on $(RCSDIR); rlog -r$(RCSLEVEL)-$(RCSLEVEL2) $(wildcard $(RCSDIR)/RCS/*); )

rcsco:
	-@@$(foreach RCSDIR, $(ALLSRC), echo check out from $(RCSDIR); co -u $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo check out from $(RCSDIR); co -u $(wildcard $(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo check out from (RCSDIR); co -u $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo check out from $(RCSDIR); co -u $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo check out from $(RCSDIR); co -u $(wildcard $(RCSDIR)/RCS/*); )


#-----------------------------------------------------------------------------
# CLEANUP all directories

# Cleanup objects and temporary files

CLEANDIRS := $(ALLSRC)

clean:
	$(foreach CLEANIT, $(CLEANDIRS), $(MAKE) -C $(CLEANIT)/$(HPROC) clean; )
	$(MAKE) -C text clean

QCLEANDIRS := kernel nucleus posix util fault cmds/cc/clib cmds/shell cmds/com
quickclean:
	$(foreach CLEANIT, $(QCLEANDIRS), $(MAKE) -C $(CLEANIT)/$(HPROC) clean; )

NUCCLEANDIRS := kernel nucleus util 
nucclean:
	$(foreach CLEANIT, $(NUCCLEANDIRS), $(MAKE) -C $(CLEANIT)/$(HPROC) clean; )


# Clean up host utilities

hostclean:
	$(foreach CLEANIT, $(HOSTTOOLS), $(MAKE) -C $(CLEANIT)/$(HHOST) clean; )


# Cleanup binaries
binclean:
	-$(RM) $(HPROD)/bin/*
	-$(RM) $(HPROD)/bin/private/*
	-$(RM) $(HPROD)/lib/*
	-$(RM) $(HPROD)/local/bin/*
	-$(RM) $(HPROD)/local/lib/*
	-$(RM) $(HPROD)/local/games/*
#	-$(RM) $(HPROD)/lib/X11/*
#	-$(RM) $(HPROD)/bin/X11/*
#	-$(RM) $(HPROD)/local/bin/X11/*


# Clean out the lot! Cleanup objects, utilities, binaries
realclean: binclean hostclean clean


# Whiter than white, cleaner than clean, that Helios ultraclean (buy some today)
ifeq ($(HLICENSEE), PERIHELION)
ultraclean: realclean rcsclean
endif


#-----------------------------------------------------------------------------
# Backup utilities

# Individual components can also be backed up via their own 'tar' target. This
# tar's its entire contents, including objects and binaries (see $(HHOST).mak)

ifeq ($(HHOST), R140)
tsttar:
	@@echo "Testing Helios source backup on floppies"
	dsplit | uncompress | tar tvf -
else
tsttar:
	@@echo "Testing Helios source backup"
	cat /hsrc/Helios$(HPROC)src.tar.Z | uncompress | tar tvf -
endif

# Restore tar backup
ifeq ($(HHOST), R140)
gettar:
	@@echo "Restoring Helios source backup from floppies"
	dsplit | uncompress | tar xvf -
else
gettar:
	@@echo "Restoring Helios source backup"
	cat /hsrc/Helios$(HPROC)src.tar.Z | uncompress | tar xvf -
endif


#-----------------------------------------------------------------------------
# Backup Helios sources via tar
#
# Creates a tar tape/disk containing the Helios sources
# This requires that each makefile conforms to the Helios generic makefile
# system. i.e. they define the SOURCES and XSOURCES variables.
# The backup will only include sources, not objects, binaries or RCS files.
# afterwards 'backedupnames' will hold a list of the source files that have
# been backed up.

# include files and directories that are not referenced in any makefiles,
# or source directories that don't have a generic makefile
# Note that this will include any subdirectories they may contain.
HELPFILES	:= $(foreach HST, $(HOSTSUPPORT), cmds/help/$(HST)/dbmake \
						  cmds/help/$(HST)/stopword.lst)
OTHERFILES	:= $(HELPFILES) $(ODDFILES) $(ALLMISC) $(ALLIOS) include

# beware of host versions of Helios components - these should ONLY have a
# makefile in their directory - the generic makefile should note any extra
# files they may require.
OTHERFILES	:= $(OTHERFILES) $(foreach TOOL, $(ALLHOST), $(TOOL)/makefile)

ifeq ($(HPROC),ARM) # @@@@@@ Bodge until generic makefile written
 OTHERFILES	:= $(OTHERFILES) cmds/cc/ncc
endif

ifdef NUC_LIC
 OTHERFILES	:= $(OTHERFILES) Embedded/esysbuild cmds/com/objed.c \
		   cmds/com/c.c
endif


#srcnames:
#	$(RM) backedupsrcs
#	$(MAKE) -C $(STDIOS) iopsrcnames
#	$(foreach SRCDIR, $(ALLSRC), $(MAKE) -C $(SRCDIR) srcnames; )

# The basic ioserver sources have a generic makefile (courtesy Alan)
# so tar them individually - also gets around problem of tar including all
# subdirectories and hence all IO Server sources wether they have a license
# for them or not!

# all directories that have a generic makefile can do intelligent back up:
srctar:
	@@echo "Making Helios/$(HPROC) source backup"
	$(RM) backedupsrcs
	$(MAKE) -C $(STDIOS) iopsrcnames
			# IO Server generic sources
	$(foreach SRCDIR, $(ALLSRC), $(MAKE) -C $(SRCDIR) srcnames; )
ifeq ($(HHOST),R140)
	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress > /hsrc/Helios$(HPROC)src.tar.Z
#	@@echo "This will require at least ten formatted floppies"
#	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress | dsplit
endif
ifeq ($(HHOST),HELIOSTRAN)	# HHOST = TRAN?
# Not tested + helios doesn't yet have a 'tr'!
# + may wish to use the -z compress option
# + may wish to write direct to tape
#	cat backedupsrcs | tr " " "\12" > baklist
#	tar cvhlf -  $(OTHERFILES) -T baklist | compress > /helios/tmp/hsrctar.Z
endif
ifeq ($(HHOST),SUN4)
# may wish to write direct to tape
	cat backedupsrcs | tr -s "\12 " "\12" > baklist
	tar FFcvhlf - $(OTHERFILES) -I baklist | compress > Helios$(HPROC)src.tar.Z
endif
ifeq ($(HHOST),RS6000)
	echo $(OTHERFILES) >> backedupsrcs
	cat backedupsrcs | tr -s " " "\n" > baklist
	gtar chfzT Helios$(HPROC)src.tar.Z baklist 
endif
ifeq ($(HHOST),HP)
	echo "Error HP tar cannot accept -I syntax (use a sun)"
endif

# tar everything
tarbakall:
ifeq ($(HHOST),SUN4)
	tar cvhlf /dev/rst0 .
endif
ifeq ($(HHOST),SUN386)
# @@@@@@ not tested
	tar cvhlf /dev/rst8 .
endif
ifdef NEVER
	tar cvhlf - . | compress > Helios$(HPROC)everythingtar.Z
endif


#---------------------------------------------------------------------------
# Create local source tree
#
# Remote/local Helios source tree utility
# Make local empty source tree save for copied makefiles.
# Assumes that you have created root of source tree, copied the
# Helios top level makefile to it and are now running that makefile.

CLIST := $(ALLSRC)

MKANDCP = mkdir $(COMPDIR); mkdir $(COMPDIR)/$(HPROC); \
	cp $(RSRC)/$(COMPDIR)/makefile $(COMPDIR); \
	cp $(RSRC)/$(COMPDIR)/$(HPROC)/makefile $(COMPDIR)/$(HPROC);

makeltree:
ifndef RSRC
	@@echo "\$RSRC not defined - get lost sucker - read the makefile comments"
else
	@@echo "Creating local Helios source tree"
	cp -r $(RSRC)/makeinc .
	mkdir cmds cmds/cc cmds/public cmds/gnu scanlibs servers demos tcpip
				 # make stub subdirs
	- $(foreach COMPDIR, $(CLIST), $(MKANDCP))
endif


#---------------------------------------------------------------------------
# C40 debug map for entire nucleus


STDKERNEL.OBJECTS = kernel/C40/kmodule.p kernel/C40/kstart.p \
		kernel/C40/queue1.p kernel/C40/sem1.p \
		kernel/C40/port1.p kernel/C40/putmsg1.p \
		kernel/C40/getmsg1.p kernel/C40/kill1.p \
		kernel/C40/link1.p kernel/C40/linkmsg1.p \
		kernel/C40/memory1.p kernel/C40/task.p \
		kernel/C40/event.p

KERNEL.OBJECTS = $(STDKERNEL.OBJECTS) kernel/C40/gexec.p \
		kernel/C40/gslice.p kernel/C40/glinkio.p \
		kernel/C40/romsupp.p kernel/C40/nccsupport.p \
		kernel/C40/c40nccsupp.p kernel/C40/c40exec.p \
		kernel/C40/c40intr.p kernel/C40/c40slice.p \
		kernel/C40/gdebug.p kernel/C40/c40linkio.p \
		kernel/C40/c40dma.p kernel/C40/kend.p


SYSLIB.OBJECTS = nucleus/syslib/C40/sysstart.p nucleus/syslib/C40/desSfn.p \
		nucleus/syslib/C40/des.p nucleus/syslib/C40/device.p \
		nucleus/syslib/C40/info.p nucleus/syslib/C40/ioc.p \
		nucleus/syslib/C40/marshal.p nucleus/syslib/C40/memory.p \
		nucleus/syslib/C40/misc.p nucleus/syslib/C40/pipe.p \
		nucleus/syslib/C40/select.p nucleus/syslib/C40/socket.p \
		nucleus/syslib/C40/stream.p nucleus/syslib/C40/task.p \
		nucleus/syslib/C40/modend.p \
		$(HPROD)/lib/kernel.def $(HPROD)/lib/util.def

SERVLIB.OBJECTS = nucleus/C40/servstart.p nucleus/C40/servlib.p \
		nucleus/C40/modend.p $(HPROD)/lib/kernel.def \
		nucleus/syslib/$(HPROC)/syslib.def $(HPROD)/lib/util.def

UTIL.OBJECTS = util/C40/utilstar.p util/C40/utilasm.p util/C40/misc.p \
		util/C40/string.p util/C40/c40string.p util/C40/modend.p \
		$(HPROD)/lib/kernel.def $(HPROD)/lib/syslib.def

BOOTSTRAP.OBJECT = kernel/C40/c40boot.p

PROCMAN.OBJECTS = nucleus/C40/sstart.o nucleus/C40/procman.o

LOADER.OBJECTS = nucleus/C40/sstart.o nucleus/C40/loader.o

ifeq ($(HPROC),C40)
	# nucleus load point + nucleus header + kernel image header
/tmp/ndebugmap: $(KERNEL.OBJECTS) $(SYSLIB.OBJECTS) $(SERVLIB.OBJECTS) \
		$(UTIL.OBJECTS) $(BOOSTRAP.OBJECT) $(PROCMAN.OBJECTS) \
		$(LOADER.OBJECTS)
	$(OBJDUMP) +12587265 +36 -d $(KERNEL.OBJECTS) \
	+4 $(SYSLIB.OBJECTS) \
	+4 $(SERVLIB.OBJECTS) \
	+4 $(UTIL.OBJECTS) \
	+4 $(BOOTSTRAP.OBJECT) \
	+4 $(PROCMAN.OBJECTS) \
	+4 $(LOADER.OBJECTS) > /tmp/ndebugmap &
endif

#-----------------------------------------------------------------------------
# Emacs Tags

Tags:
	etags -e -t nucleus/*.c nucleus/syslib/*.c kernel/*.c posix/*.c cmds/cc/clib/*.c include/*.h \
		include/sys/*.h scanlibs/bsd/*.[ch]

#----------------------------------------------- Complexity is job security...
@


1.140
log
@fixed so that ampp is built on C40 host, but help is not
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.139 1993/11/17 15:16:54 nickc Exp nickc $
d322 2
d325 1
a325 1
  HOSTTOOLS :=	cmds/hostutil cmds/public/yacc-1.4 cmds/ampp
d327 1
a327 1
  HOSTTOOLS :=	cmds/hostutil cmds/ampp cmds/help
d817 1
a817 1
 HOSTTARGETS := HostMisc
d821 1
a821 1
  HOSTTARGETS := HostMisc HostAmpp HostAsm HostIOS HostHelp
d823 1
a823 1
  HOSTTARGETS := HostMisc HostAmpp HostYacc HostAsm HostIOS HostHelp HostLink
d841 4
d1552 1
a1552 1
 OTHERFILES	:= $(OTHERFILES) cmds/com/sysbuild.c cmds/com/objed.c \
@


1.139
log
@added RS6000 version of srctar rule
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.138 1993/10/29 09:41:57 tony Exp nickc $
d365 3
a367 1
NCCMISC :=	cmds/cc/compiler/SUN4/include
d383 1
a383 1
ODDFILES :=	makefile Files
d582 1
a582 1
 ALLMISC :=	$(ALLMISC) $(STDMISC) $(foreach MC, $(HOSTSUPPORT), $(HOSTUTIL)/$(MC))
d593 1
a593 1
 ALLMISC :=	$(ALLMISC) $(foreach MC, $(HOSTSUPPORT), $(HOSTUTIL)/$(MC))
d736 1
a736 1
        test -d  $(HPROD)/include ||	mkdir $(HPROD)/include
a839 3
    ifeq ($(HHOST),HELIOSC40)
	@@echo "				[[[ Skipping HOST ampp ]]]"
    else
a841 1
    endif
d881 1
a881 1
		@@echo "			[[[ Skipping HOST assembler ]]]"
d883 1
a883 1
		@@echo "			[[[ Making HOST Assembler ]]]"
d889 3
d894 1
d1586 3
a1588 3
# may wish to write direct to tape
	cat backedupsrcs | tr -s "\12 " "\12" > baklist
	tar Fcvhlf - $(OTHERFILES) -I baklist | compress > Helios$(HPROC)src.tar.Z
@


1.138
log
@Changed GNU Tar bit - directory is now /cmds/gnu/gtar
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.137 1993/10/28 13:01:46 tony Exp tony $
d1582 5
@


1.137
log
@  Commented out GNU Tar - missing header file dos.h can't be found anywhere
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.136 1993/10/28 09:51:02 nickc Exp tony $
d1199 2
a1200 3
#	@@echo "				[[[ Making GNU Tar ]]]"
#	$(MAKE) -C cmds/gnu/tar/$(HPROC) install
	@@echo "				[[[ NOT Making GNU Tar ]]]"
@


1.136
log
@fixed building Host C compiler rule so that the real host C compiler is built, not the native C compiler
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.135 1993/10/28 09:46:25 bart Exp nickc $
d1199 3
a1201 2
	@@echo "				[[[ Making GNU Tar ]]]"
	$(MAKE) -C cmds/gnu/tar/$(HPROC) install
@


1.135
log
@Fixed rcsclean so that it was not followed by an rcslevel
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.134 1993/09/28 12:33:54 bart Exp bart $
d900 1
a900 1
	$(MAKE) -C cmds/cc/ncc/cc450 install
d903 1
a903 1
	$(MAKE) -C cmds/cc/ncc/cc350 install
@


1.134
log
@Added /hsrc/ioproc/server/parsy to Perihelion and Parsytec licenses
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.133 1993/08/18 16:16:29 bart Exp bart $
d164 1
a164 1
	rcsunfreeze rcsfreeze rcslevel rcsclean rcsclean2 rcscheck rcsreport
d1411 1
a1411 6
rcsclean: rcsclean2 rcslevel

rcsclean2:
ifndef RCSLEVEL
	@@echo "RCSLEVEL=XXX must be defined for rcsclean (as it will be followed by rcslevel)"
else
a1416 1
endif
@


1.133
log
@HostYacc must be built before the host assembler
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.132 1993/08/17 17:26:44 bart Exp $
d409 1
a409 1
		$(IOSSRC)/helios $(IOSMSGFX) $(IOSISERV)
d484 1
a484 1
 EXTRAIOS :=
@


1.132
log
@Reduced argument size requirements for rcscheck target, so that it can
be used on betty.
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.131 1993/08/17 09:27:53 nickc Exp bart $
d819 1
a819 1
  HOSTTARGETS := HostMisc HostAmpp HostAsm HostIOS HostHelp HostLink HostYacc
@


1.131
log
@fixed spelling mistake
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.130 1993/08/13 16:49:44 bart Exp nickc $
d1425 1
a1425 1
	-@@$(foreach RCSDIR, $(ALLSRC), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS/*); )
@


1.130
log
@Removed printer support from Microsoft Windows library
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.129 1993/08/11 08:37:25 nickc Exp bart $
d932 1
a932 1
ifeq ($(HLICENCEE),ABC)
@


1.129
log
@fixed nuc target so that it does not build scan libraries or servers
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.128 1993/08/10 14:14:20 nickc Exp nickc $
d198 1
a198 1
MSWIN :=		ioproc/mswin/lib ioproc/mswin/printer
a1133 2
	@@echo "				[[[ Making MsWin printer support ]]]"
	$(MAKE) -C ioproc/mswin/printer/$(HPROC) install
@


1.128
log
@fixed symbolic link creation
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.127 1993/08/10 13:53:25 nickc Exp nickc $
d683 1
a683 1
nuc: LibHdrs Nucleus
d692 2
a693 2
	test -d $(HPROD)     || mkdir $(HPROD)
	test -d $(HPROD)/tmp || mkdir $(HPROD)/tmp
d695 1
a695 1
	test -d $(HPROD)/etc || mkdir $(HPROD)/etc
@


1.127
log
@oops - fixed typo in mkdir tests
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.126 1993/08/06 12:59:33 paul Exp nickc $
d703 26
a728 26
	test -d  $(HPROD)/lib ||	mkdir $(HPROD)/lib
	test -d  $(HPROD)/bin ||	mkdir $(HPROD)/bin
	test -d  $(HPROD)/bin/private ||	mkdir $(HPROD)/bin/private
	test -d  $(HPROD)/system ||	mkdir $(HPROD)/system
	test -d  $(HPROD)/users ||	mkdir $(HPROD)/users
	test -d  $(HPROD)/users/root ||	mkdir $(HPROD)/users/root
	test -d  $(HPROD)/users/shutdown ||	mkdir $(HPROD)/users/shutdown
	test -d  $(HPROD)/users/guest ||	mkdir $(HPROD)/users/guest
	test -d  $(HPROD)/users/guest/examples ||	mkdir $(HPROD)/users/guest/examples
	test -d  $(HPROD)/users/guest/examples/servers ||	mkdir $(HPROD)/users/guest/examples/servers
	test -d  $(HPROD)/local || mkdir $(HPROD)/local
	test -d  $(HPROD)/local/lib ||	mkdir $(HPROD)/local/lib
	test -d  $(HPROD)/local/lib/tex ||	mkdir $(HPROD)/local/lib/tex
	test -d  $(HPROD)/local/bin ||	mkdir $(HPROD)/local/bin
	test -d  $(HPROD)/local/bin/X11 ||	mkdir $(HPROD)/local/bin/X11
	test -d  $(HPROD)/local/games ||	mkdir $(HPROD)/local/games
	test -d  $(HPROD)/local/src ||	mkdir $(HPROD)/local/src
	test -d  $(HPROD)/local/src/hfs ||	mkdir $(HPROD)/local/src/hfs
	test -d  $(HPROD)/local/src/hfs/b422 ||	mkdir $(HPROD)/local/src/hfs/b422
	test -d  $(HPROD)/local/src/hfs/he1000 ||	mkdir $(HPROD)/local/src/hfs/he1000
	test -d  $(HPROD)/local/src/hfs/m212 ||	mkdir $(HPROD)/local/src/hfs/m212
	test -d  $(HPROD)/local/src/hfs/msc ||	mkdir $(HPROD)/local/src/hfs/msc
	test -d  $(HPROD)/local/src/hfs/raw ||	mkdir $(HPROD)/local/src/hfs/raw
	test -d  $(HPROD)/local/tcpip ||	mkdir $(HPROD)/local/tcpip
	test -d  $(HPROD)/local/tcpip/example ||	mkdir $(HPROD)/local/tcpip/example
	test -d  $(HPROD)/local/tcpip/pc-ether ||	mkdir $(HPROD)/local/tcpip/pc-ether
d730 1
a730 1
     	test -d  $(HPROD)/include ||	mkdir $(HPROD)/include
d737 3
a739 3
	-ln -s $(HSRC)/include $(HPROD)
	-ln -s $(XBIN)/bin/X11 $(HPROD)/bin
	-ln -s $(XBIN)/lib/X11 $(HPROD)/lib
@


1.126
log
@fixed hosttargets
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.125 1993/07/29 13:52:17 nickc Exp $
d692 2
a693 2
	test -d $(HPROD)     && mkdir $(HPROD)
	test -d $(HPROD)/tmp && mkdir $(HPROD)/tmp
d695 1
a695 1
	test -d $(HPROD)/etc && mkdir $(HPROD)/etc
d703 26
a728 26
	test -d  $(HPROD)/lib &&	mkdir $(HPROD)/lib
	test -d  $(HPROD)/bin &&	mkdir $(HPROD)/bin
	test -d  $(HPROD)/bin/private &&	mkdir $(HPROD)/bin/private
	test -d  $(HPROD)/system &&	mkdir $(HPROD)/system
	test -d  $(HPROD)/users &&	mkdir $(HPROD)/users
	test -d  $(HPROD)/users/root &&	mkdir $(HPROD)/users/root
	test -d  $(HPROD)/users/shutdown &&	mkdir $(HPROD)/users/shutdown
	test -d  $(HPROD)/users/guest &&	mkdir $(HPROD)/users/guest
	test -d  $(HPROD)/users/guest/examples &&	mkdir $(HPROD)/users/guest/examples
	test -d  $(HPROD)/users/guest/examples/servers &&	mkdir $(HPROD)/users/guest/examples/servers
	test -d  $(HPROD)/local && mkdir $(HPROD)/local
	test -d  $(HPROD)/local/lib &&	mkdir $(HPROD)/local/lib
	test -d  $(HPROD)/local/lib/tex &&	mkdir $(HPROD)/local/lib/tex
	test -d  $(HPROD)/local/bin &&	mkdir $(HPROD)/local/bin
	test -d  $(HPROD)/local/bin/X11 &&	mkdir $(HPROD)/local/bin/X11
	test -d  $(HPROD)/local/games &&	mkdir $(HPROD)/local/games
	test -d  $(HPROD)/local/src &&	mkdir $(HPROD)/local/src
	test -d  $(HPROD)/local/src/hfs &&	mkdir $(HPROD)/local/src/hfs
	test -d  $(HPROD)/local/src/hfs/b422 &&	mkdir $(HPROD)/local/src/hfs/b422
	test -d  $(HPROD)/local/src/hfs/he1000 &&	mkdir $(HPROD)/local/src/hfs/he1000
	test -d  $(HPROD)/local/src/hfs/m212 &&	mkdir $(HPROD)/local/src/hfs/m212
	test -d  $(HPROD)/local/src/hfs/msc &&	mkdir $(HPROD)/local/src/hfs/msc
	test -d  $(HPROD)/local/src/hfs/raw &&	mkdir $(HPROD)/local/src/hfs/raw
	test -d  $(HPROD)/local/tcpip &&	mkdir $(HPROD)/local/tcpip
	test -d  $(HPROD)/local/tcpip/example &&	mkdir $(HPROD)/local/tcpip/example
	test -d  $(HPROD)/local/tcpip/pc-ether &&	mkdir $(HPROD)/local/tcpip/pc-ether
d730 1
a730 1
     	test -d  $(HPROD)/include &&	mkdir $(HPROD)/include
d734 1
a734 1
        test -d  $(HPROD)/include &&	mkdir $(HPROD)/include
@


1.125
log
@set C40 C compiler source directory back to cc350 *sigh*
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.124 1993/07/27 15:19:31 nickc Exp nickc $
d816 1
a816 3
 ifeq ($(HPROC),C40)
  HOSTTARGETS := HostMisc HostYacc HostAmpp HostAsm HostIOS
 else
a817 3
 endif 
 ifeq ($(HPROC),TRAN)
  HOSTTARGETS := $(HOSTTARGETS)
d819 1
a819 1
  HOSTTARGETS := $(HOSTTARGETS) HostLink
@


1.124
log
@fixed rules for C ciompiler building
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.123 1993/07/16 15:28:26 nickc Exp nickc $
d309 5
a313 1
  CCOMPILER :=	cmds/cc/ncc/cc450
d620 5
a624 1
   HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/ncc/cc450
d908 1
a908 1
	$(MAKE) -C cmds/cc/ncc/cc450 install
d1187 3
d1191 1
@


1.123
log
@added nucclean target
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.122 1993/07/12 16:21:03 nickc Exp nickc $
d307 1
a307 1
 CCOMPILER := 	cmds/cc/compiler sa	# + standalone support
d309 1
a309 8
 ifeq ($(HPROC),ARM)
# must write generic makefile
#  CCOMPILER :=	cmds/cc/ncc/cc349
 else
   ifeq ($(HPROC),C40)
    CCOMPILER := cmds/cc/ncc/cc420
   endif
 endif
d613 1
a613 1
  HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/compiler
d616 1
a616 1
   HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/ncc/cc420
d897 1
a897 1
	$(MAKE) -C cmds/cc/ncc/cc349/cchelios install
d900 1
a900 9
	ifeq ($(HHOST),HP)
	    $(MAKE) -C cmds/cc/ncc/cc420/HP install
	else
	    ifeq ($(HHOST),RS6000)
	    	$(MAKE) -C cmds/cc/ncc/cc420/RS6000 install
	    else
		@@echo "				[[[ @@@@@@ Add rule to Make HOST C Compiler ]]]"
	    endif
	endif
d1179 1
a1179 9
 ifeq ($(HPROC),ARM)
	$(MAKE) -C cmds/cc/ncc/cc349/native install
 else
   ifeq ($(HPROC),C40)
	$(MAKE) -C cmds/cc/ncc/cc420/$(HPROC) install
   else
	$(MAKE) -C cmds/cc/ncc/cc420/$(HPROC) install
   endif
 endif
@


1.122
log
@improved making of directories to avoid spurious error messages
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.121 1993/07/08 11:00:00 nickc Exp nickc $
d110 1
d153 1
a153 1
	clean hostclean binclean realclean ultraclean quickclean \
d1479 3
@


1.121
log
@changed to build C40 C compilrin cmds/cc/ncc/cc420 rather than cmds/cc/ncc/cc350B
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.120 1993/06/09 14:26:17 nickc Exp nickc $
d690 2
a691 2
	-mkdir $(HPROD)
	-mkdir $(HPROD)/tmp
d693 1
a693 1
	-mkdir $(HPROD)/etc
d701 26
a726 26
	-mkdir $(HPROD)/lib
	-mkdir $(HPROD)/bin
	-mkdir $(HPROD)/bin/private
	-mkdir $(HPROD)/system
	-mkdir $(HPROD)/users
	-mkdir $(HPROD)/users/root
	-mkdir $(HPROD)/users/shutdown
	-mkdir $(HPROD)/users/guest
	-mkdir $(HPROD)/users/guest/examples
	-mkdir $(HPROD)/users/guest/examples/servers
	-mkdir $(HPROD)/local
	-mkdir $(HPROD)/local/lib
	-mkdir $(HPROD)/local/lib/tex
	-mkdir $(HPROD)/local/bin
	-mkdir $(HPROD)/local/bin/X11
	-mkdir $(HPROD)/local/games
	-mkdir $(HPROD)/local/src
	-mkdir $(HPROD)/local/src/hfs
	-mkdir $(HPROD)/local/src/hfs/b422
	-mkdir $(HPROD)/local/src/hfs/he1000
	-mkdir $(HPROD)/local/src/hfs/m212
	-mkdir $(HPROD)/local/src/hfs/msc
	-mkdir $(HPROD)/local/src/hfs/raw
	-mkdir $(HPROD)/local/tcpip
	-mkdir $(HPROD)/local/tcpip/example
	-mkdir $(HPROD)/local/tcpip/pc-ether
d728 1
a728 1
	-mkdir $(HPROD)/include
d732 1
a732 1
	-mkdir $(HPROD)/include
@


1.120
log
@fixed text directory clean rule
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.119 1993/05/27 10:21:47 bart Exp nickc $
d313 1
a313 1
    CCOMPILER := cmds/cc/ncc/cc350B
d622 1
a622 1
   HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/ncc/cc350B
d907 1
a907 1
	    $(MAKE) -C cmds/cc/ncc/cc350B/HP install
d910 1
a910 1
	    	$(MAKE) -C cmds/cc/ncc/cc350B/RS6000 install
d1197 1
a1197 1
	$(MAKE) -C cmds/cc/ncc/cc350B/$(HPROC) install
d1199 1
a1199 1
	$(MAKE) -C cmds/cc/ncc/cc350/$(HPROC) install
@


1.119
log
@MS Windows support now handled separately from scanlibs
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.117 1993/05/26 16:09:34 bart Exp bart $
d1472 1
a1472 1
	make -C text clean
@


1.118
log
@Added yacc to the list of public domain commands, needed for C40
source releases
@
text
@d188 2
a189 2
SCANLIBS :=	scanlibs scanlibs/bsd scanlibs/termcap scanlibs/curses \
		ioproc/mswin/lib
d197 2
d248 2
a249 1
		$(SERVERS) $(COMMANDS) $(DEMOS) $(PUBLIC) $(GNU) $(HOSTUTIL)
@


1.117
log
@removed debugging echo statement
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.116 1993/05/26 15:15:02 bart Exp bart $
d233 1
a233 1
		cmds/public/cookie
@


1.116
log
@Numerous fixes for C40 source releases
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.114 1993/05/20 16:02:11 bart Exp bart $
a1581 1
	@@echo ALLSRC is $(ALLSRC)
@


1.115
log
@Added Alenia to the source release system
@
text
@d194 1
a194 1
 SCANLIBS := $(SCANLIBS) scanlibs/vectlib
d232 3
a234 2
PUBLIC :=	cmds/public cmds/public/spreadsh cmds/public/clock
		# @@@@@@ TODO generic makefiles:	ed stevie rcs cookie mille sed
d322 1
a322 1
  HOSTTOOLS :=	cmds/hostutil cmds/ampp
d812 1
a812 1
  HOSTTARGETS := HostMisc HostAmpp HostAsm HostIOS
d838 3
d843 1
d845 8
d854 6
a859 2
	@@echo "				[[[ Making HOST linker ]]]"
	$(MAKE) -C cmds/linker/$(HHOST) install
d878 1
a879 1
ifeq ($(HPROC),TRAN)
d882 6
a887 1
	$(MAKE) -C cmds/assembler/$(HHOST) install
@


1.114
log
@Fixed rcscheck target
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.113 1993/05/14 10:38:52 nickc Exp bart $
d423 1
a423 1
 HOSTSUPPORT := SUN4 R140 HELIOSTRAN HP
d562 3
d566 5
d727 4
d735 1
d851 3
d857 1
d1560 1
@


1.113
log
@added MS-WINDOWS printer support build
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.112 1993/05/12 16:24:21 nickc Exp nickc $
d429 1
a429 1
# XTRASRC := 	
d1400 1
a1400 1
	-@@$(foreach RCSDIR, $(ALLSRC), echo checking $(RCSDIR); cd $(RCSDIR) ; rlog -L -h $(wildcard "RCS/*"); )
@


1.112
log
@moved build of MS WINDOWS software until after build of networking software (mslights using RmLib)
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.111 1993/05/12 10:36:55 bart Exp nickc $
d1103 2
@


1.111
log
@Added MsWin target for the windows graphics library
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.110 1993/05/12 10:27:19 nickc Exp bart $
d636 1
a636 1
 MAINTARGETS := LibHdrs Nucleus Libraries Network Commands Demos Gnu Public
d956 1
a956 1
 PRENUC := $(PRENUC) Scanlibs MsWin Servers
d1028 1
a1028 1
Libraries: Scanlibs MsWin $(HELIOSLIBS)
d1100 1
a1100 1
MsWin:
@


1.110
log
@(temporarily) removde srcnames target as this clashes with RS6000 builds
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.109 1993/05/10 13:53:18 nickc Exp nickc $
d159 1
a159 1
	Scanlibs Bsd Termcap Curses \
d188 2
a189 1
SCANLIBS :=	scanlibs scanlibs/bsd scanlibs/termcap scanlibs/curses
d956 1
a956 1
 PRENUC := $(PRENUC) Scanlibs Servers
d1028 1
a1028 1
Libraries: Scanlibs $(HELIOSLIBS)
a1080 1

d1098 5
@


1.109
log
@added srcnames and rcsco targets
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.108 1993/03/29 16:11:42 nickc Exp nickc $
d1520 4
a1523 4
srcnames:
	$(RM) backedupsrcs
	$(MAKE) -C $(STDIOS) iopsrcnames
	$(foreach SRCDIR, $(ALLSRC), $(MAKE) -C $(SRCDIR) srcnames; )
@


1.108
log
@fixed rcscheck to that it does not have an excessivly long command line
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.107 1993/03/09 17:46:04 nickc Exp nickc $
d1406 8
d1519 5
@


1.107
log
@added code to link in X client directories to C40 world
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.106 1993/01/18 17:54:50 nick Exp nickc $
d1393 1
a1393 1
	-@@$(foreach RCSDIR, $(ALLSRC), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS/*); )
@


1.106
log
@Rule added to make Host C compiler for RS6000.
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.105 1992/12/02 17:23:40 nickc Exp nick $
d285 5
a690 4
	-mkdir $(HPROD)/bin/X11
	-mkdir $(HPROD)/lib/X11
	-mkdir $(HPROD)/lib/X11/fonts
	-mkdir $(HPROD)/lib/X11/app-defaults
d719 2
@


1.105
log
@fixed to build Help and Make for C40
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.104 1992/12/02 16:24:57 nickc Exp nickc $
d860 9
a868 1
	$(MAKE) -C cmds/cc/ncc/cc350B/HP install
@


1.104
log
@added debugging library
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.103 1992/12/01 11:13:05 nickc Exp $
d1105 1
a1105 1
CMDTARGETS := Shell Com Asm Ampp Emacs GMake Tar Testsuite Help
a1281 1
ifeq ($(HPROC), TRAN)
a1282 1
endif
@


1.103
log
@fixed name of test suite
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.102 1992/11/02 11:27:53 martyn Exp nickc $
a312 1
HOSTTOOLS :=	cmds/hostutil cmds/ampp cmds/help
d314 7
d411 1
a411 1
# DEBUG_LIC = TRUE
d793 5
a797 1
 HOSTTARGETS := HostMisc HostAmpp HostAsm HostIOS HostHelp
@


1.102
log
@changes for Helios 1.3 source tapes
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.101 1992/10/27 19:10:15 martyn Exp $
d208 1
a208 1
		cmds/testsuite cmds/help
d1195 1
a1195 1
	$(MAKE) -C cmds/testsuite/$(HPROC) install
@


1.101
log
@added host help system
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.100 1992/10/27 15:01:22 bart Exp $
d313 1
a313 1
HOSTTOOLS :=	cmds/hostutil cmds/ampp
d456 1
a456 1
 EXTRAIOS :=	$(IOSSRC)/telmat $(IOSSRC)/helios
a714 3
ifeq ($(HPROC),TRAN)
	-cp $(HSRC)/cmds/bcpl/blib/blib $(HPROD)/lib
endif
d817 1
a818 1
HostIOS:
d821 3
a823 1
HostIOS:
d826 1
d1474 3
a1476 1
OTHERFILES	:= $(ODDFILES) $(ALLMISC) $(ALLIOS) include
@


1.100
log
@Added winsrvr.exe
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.99 1992/10/26 15:22:06 bart Exp bart $
d790 1
a790 1
 HOSTTARGETS := HostMisc HostAmpp HostAsm HostIOS
d836 4
@


1.99
log
@Fixed the location of server.exe
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.98 1992/10/24 12:39:08 bart Exp bart $
d714 1
@


1.98
log
@Added vectlib and hwtests
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.97 1992/10/07 09:01:46 nickc Exp bart $
d713 1
a713 1
	-cp $(HSRC)/ioproc/server/server.exe $(HPROD)
@


1.97
log
@fixed creation of X directories
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.96 1992/09/25 17:02:30 paul Exp nickc $
d179 2
a180 1
 NETPKGS := $(NETPKGS)  network/packages/farmlib network/packages/tftests
d189 6
@


1.96
log
@ifdef'ed ABC'isms for ARM
@
text
@d59 1
a59 1
# RcsId: $Id: makefile,v 1.94 1992/09/24 17:22:08 martyn Exp $
d674 3
a676 2
	-mkdir $(HPROD)/bin/X11/fonts
	-mkdir $(HPROD)/bin/X11/app-defaults
@


1.95
log
@changed to new C help system
@
text
@a34 2
# Paul: Move nucleus/ARM/window,rrd(ram),helios servers to /hsrc/servers
#
d59 1
a59 1
# RcsId: $Id: makefile,v 1.95 1992/09/25 16:00:20 martyn Exp $
d183 1
a183 1
#ifeq ($(HPROC), ARM)
d193 1
a193 1
ifeq ($(HPROC), ARM)
a337 5
# @@@@@@ delete me
#ifeq ($(HPROC),ARM)
# ALLINC := $(ALLINC) include/abcARM include/abcARM/asm
#endif

d618 1
a618 1
 ifeq ($(HPROC), ARM)
a652 4
ifeq ($(HPROC),ARM)
nuc2: Nuc romsys
endif

d914 2
a915 2
# Most libraries are included in the ROMed ARM nucleus
ifeq ($(HPROC),ARM)
d967 1
a967 1
ifeq ($(HPROC),ARM)
d985 1
a985 1
 ifeq ($(HPROC),ARM)
d1027 1
a1027 1
ifeq ($(HPROC),ARM)
d1469 1
a1469 1
 OTHERFILES	:= $(OTHERFILES) cmds/cc/ncc abclib/world
@


1.94
log
@added missing \ at end of demos source list.
@
text
@a10 1
#	muscat
d61 1
a61 1
# RcsId: $Id: makefile,v 1.93 1992/09/24 11:29:12 martyn Exp martyn $
d203 1
a203 1
		cmds/testsuite
d1093 1
a1093 1
CMDTARGETS := Shell Com Asm Ampp Emacs GMake Tar Testsuite
a1266 1
# @@@@@@ NOT TESTED - requires BCPL - no generic makefiles yet
d1271 1
a1271 1
	$(MAKE) -C cmds/muscat/$(HPROC) install
@


1.93
log
@added full path for newmotd invocation.
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.92 1992/09/18 08:41:22 paul Exp $
d216 1
a216 1
		demos/pi demos/pi/pi_farm demos/pi/pi_fast demos/pi/pi_fort
@


1.92
log
@added commands test suite
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.91 1992/08/18 09:57:30 paul Exp paul $
d953 2
a954 2
	@@newmotd > ${HPROD}/etc/motd
	@@newmotd
@


1.91
log
@updated support for ARM
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.90 1992/08/17 15:05:44 paul Exp paul $
d203 2
a204 1
		cmds/emacs.311 cmds/ampp cmds/private cmds/cdl cmds/make
d1094 1
a1094 1
CMDTARGETS := Shell Com Asm Ampp Emacs GMake Tar
d1145 1
a1145 1
	@@echo "				[[[ Making GNU Tar =]]]"
d1191 4
@


1.90
log
@updated for arm cc installation
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.89 1992/08/14 18:04:48 paul Exp paul $
d186 3
a188 3
ifeq ($(HPROC), ARM)
 LIBRARIES := 	$(LIBRARIES) abclib/patchlib abclib 
endif
d208 1
a208 4
 COMMANDS := 	$(COMMANDS) cmds/linker
 ifeq ($(HPROC),ARM)
  COMMANDS := 	$(COMMANDS) cmds/hobjasm
 endif
a313 5
 ifeq ($(HPROC),ARM)
  HOSTTOOLS := $(HOSTTOOLS) cmds/hobjasm
 else
  HOSTTOOLS := $(HOSTTOOLS)
 endif
d340 4
a343 3
ifeq ($(HPROC),ARM)
 ALLINC := $(ALLINC) include/abcARM include/abcARM/asm
endif
d421 23
a835 3
 ifeq ($(HPROC),ARM)
	$(MAKE) -C cmds/hobjasm/$(HHOST) install
 else
a836 1
 endif
d877 1
a877 1
ifeq ($(HPROC),ARM)
a1147 1
ifneq ($(HPROC),ARM)
a1149 1
endif
a1164 3
 ifeq ($(HPROC),ARM)
	$(MAKE) -C cmds/hobjasm/$(HPROC) install
 else
a1165 1
 endif
@


1.89
log
@fixed for arm cc
,.
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.88 1992/08/05 10:48:45 paul Exp $
d833 1
a833 1
	$(MAKE) -C cmds/cc/ncc/cc349/cchelios -f hostmake ccarm
d1110 1
a1110 1
	$(MAKE) -C cmds/cc/ncc/cc349/native -f r140make ncc
@


1.88
log
@added std make to C40 and fixed C40 ncc build
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.87 1992/07/08 17:36:57 paul Exp paul $
d298 1
a298 1
#  CCOMPILER :=	cmds/cc/ncc
d833 1
a833 1
	$(MAKE) -C cmds/cc/ncc/cc349/cchelios -f r140make ncc
@


1.87
log
@added C40 TCPIP build
HOST CC added
bin clean cleaned up
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.86 1992/07/07 08:19:46 paul Exp $
d203 1
a203 1
		cmds/emacs.311 cmds/ampp cmds/private cmds/cdl
d206 1
a206 1
 COMMANDS := 	$(COMMANDS) cmds/asm cmds/make
d836 1
a836 2
# @@@@@@ wait for new kosha compiler
#	$(MAKE) -C cmds/cc/ncc/cc350B install
@


1.86
log
@fix for hp tar, some demos only for transputer and cdl built as std
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.85 1992/07/01 19:14:14 paul Exp paul $
d316 1
a316 1
 HOSTTOOLS := $(HOSTTOOLS) cmds/linker	# cmds/cc/ncc
d413 1
a413 1
# TCPIP_LIC = TRUE
d581 3
a583 2
#@@@@@@ Write generic makefile:
#  HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/ncc
d701 1
d703 1
d1402 9
a1410 6
	$(RM) $(HPROD)/bin/*
	$(RM) $(HPROD)/bin/private/*
	$(RM) $(HPROD)/lib/*
	$(RM) $(HPROD)/local/bin/*
	$(RM) $(HPROD)/local/lib/*
	$(RM) $(HPROD)/local/games/*
@


1.85
log
@split host support into hostsupport (build) and hostiosupport (ioserver)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.84 1992/07/01 15:14:26 paul Exp $
d203 1
a203 1
		cmds/emacs.311 cmds/ampp cmds/private
a204 4
ifndef HSINGLEPROC
 COMMANDS := 	$(COMMANDS) cmds/cdl
endif

d218 2
a219 4
		demos/pi demos/pi/pi_farm demos/pi/pi_fast demos/pi/pi_fort \
		demos/pi/pi_mix demos/pi/pi_mod2 \
		demos/pi/pi_pasc demos/pi/pi_ring \
		demos/servers demos/servers/keyboard \
d222 5
d1503 1
d1505 1
a1505 1
	echo "Error HP tar cannot accept -I syntax (us a sun)"
@


1.84
log
@fixed again for the C40 native compiler build
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.83 1992/07/01 14:40:23 paul Exp $
d396 3
d421 3
d426 1
a426 1
# EXTRAIOS :=	
d440 1
d454 1
d468 1
d477 1
d486 1
d498 1
d510 1
d520 1
d530 1
d592 1
a592 1
 ALLIOS :=	$(ALLIOS) $(foreach HST, $(HOSTSUPPORT), $(STDIOS)/$(HST) )
d1504 2
@


1.83
log
@changed to c40 ncc build target
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.82 1992/07/01 11:42:26 paul Exp paul $
a1094 1
				 # @@@@@@ still have to add install target
d1097 1
a1097 1
	$(MAKE) -C cmds/cc/ncc/cc350B install
@


1.82
log
@added support for the C40 C compiler
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.81 1992/06/27 13:01:04 bart Exp $
d1098 1
a1098 1
	$(MAKE) -C cmds/cc/ncc/cc350B install-c40
@


1.81
log
@Sorted out GMake and tar
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.80 1992/06/26 17:49:25 bart Exp bart $
d300 4
d818 4
d823 1
d1097 3
a1099 1
   ifneq ($(HPROC),C40)
@


1.80
log
@First attempt at Helios 1.3 master makefile
@
text
@d20 1
a20 1
#	Martyn: masterdisks - target to create a set of master disks for
d62 1
a62 1
# RcsId: $Id: makefile,v 1.79 1992/06/22 08:45:09 paul Exp bart $
d93 1
a93 1
#				Shell, Ncc, etc 
d163 1
a163 1
	Asm Shell Com Link Ampp Emacs Make GMake Cdl \
d233 1
a233 1
GNU :=		cmds/gnu cmds/gnu/gmake
d1056 1
a1056 1
CMDTARGETS := Shell Com Asm Ampp Emacs
d1104 5
d1145 1
@


1.79
log
@fixed etags addition
@
text
@d9 2
a10 1
#	ioproc/iserver
a18 1
#	Bart: lock and include servers
d62 1
a62 1
# RcsId: $Id: makefile,v 1.78 1992/06/17 09:55:43 nickc Exp $
d180 4
d194 1
a194 1
		servers/lock servers/include
d203 1
a203 1
		cmds/ampp cmds/private
d242 2
a243 2
STDHELIOS :=	$(NUCLEUS) $(LIBRARIES) $(NETWORK) $(SCANLIBS) $(SERVERS) \
		$(COMMANDS) $(DEMOS) $(PUBLIC) $(GNU) $(HOSTUTIL)
d262 5
a266 3
TCPIP := 	tcpip tcpip/cmds tcpip/devs/in-ether tcpip/devs/pc-ether \
		tcpip/devs/sq-ether tcpip/devs/ims-b431 tcpip/helios tcpip/net \
		tcpip/netinet tcpip/sys tcpip/nfs $(TCPCMDS)
d268 4
d276 5
a280 1
#		tcpip/netstat tcpip/rpc tcpip/test tcpip/cmds/test
d286 3
a288 2
HFS :=		filesys filesys/fs filesys/cmds \
		filesys/devs/m212 filesys/devs/he1000 filesys/devs/raw \
d290 1
d292 2
d393 1
a393 1
 XTRASRC := 	$(NETWORK)/telmat $(NETWORK)/parsytec
d395 2
a396 1
		$(IOSSRC)/st $(IOSSRC)/synergy $(IOSMSGFX) $(IOSISERV)
d430 1
a430 1
 EXTRAIOS :=	$(IOSSRC)/telmat
@


1.78
log
@aadded rule for building tags
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.77 1992/04/21 10:27:17 paul Exp nickc $
d1559 1
a1559 1
 	etags -e -t nucleus/*.c nucleus/syslib/*.c kernel/*.c posix/*.c cmds/cc/clib/*.c include/*.h \
@


1.77
log
@added quick clean and fixed nucleus debug map
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.76 1992/03/31 16:43:58 paul Exp $
d1555 2
d1558 3
@


1.76
log
@stop trying to make c40 native compiler
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.75 1992/03/23 17:44:51 paul Exp paul $
d112 1
d155 1
a155 1
	clean hostclean binclean realclean \
d829 2
a830 2
Linklibs:
	@@echo "				[[[ Making link libraries ]]]"
d1336 3
d1340 2
a1498 1
  LIB = /hprod/C40/lib
d1525 1
a1525 1
		$(LIB)/kernel.def $(LIB)/util.def
d1528 2
a1529 2
		nucleus/C40/modend.p $(LIB)/kernel.def \
		nucleus/syslib/$(HPROC)/syslib.def $(LIB)/util.def
d1533 1
a1533 1
		$(LIB)/kernel.def $(LIB)/syslib.def
@


1.75
log
@added debugmap for C40 nucleus
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.74 1992/01/22 11:12:31 craig Exp $
d1050 1
a1050 1
ifneq ($(HPROC),ARM) # arm version never bothers with old make
d1068 1
d1070 1
@


1.74
log
@Added binmail, sendmail, lpr, nfs (Ethernet II)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.73 1992/01/22 11:05:46 paul Exp craig $
d765 1
d767 3
d772 1
d794 1
a794 1
	$(MAKE) -C cmds/cc/ncc/$(HHOST) install
d1486 62
@


1.73
log
@nucleus makes sure library header files are made
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.72 1991/12/06 14:29:13 martyn Exp $
d254 2
a255 1
		tcpip/cmds/telnetd tcpip/cmds/rcp tcpip/cmds/rlogind
d259 1
a259 1
		tcpip/netinet tcpip/sys $(TCPCMDS)
d265 1
a265 2
#		tcpip/netstat tcpip/nfs tcpip/rpc tcpip/test tcpip/cmds/lpr \
#		tcpip/cmds/sendmail tcpip/cmds/test
@


1.72
log
@Readmes have gone to text directory
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.71 1991/12/06 12:49:52 martyn Exp martyn $
d602 1
a602 1
nuc: Nucleus
d638 1
@


1.71
log
@split extra commands into textutil and private
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.70 1991/12/04 18:19:00 martyn Exp martyn $
d352 1
a352 1
ODDFILES :=	makefile Files Readme.121
@


1.70
log
@added cmds/extras (commands new  since 1.2.2)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.69 1991/12/04 15:34:42 martyn Exp martyn $
d197 2
a198 2
COMMANDS := 	cmds/support cmds/shell cmds/com cmds/extras cmds/emacs \
		cmds/ampp
d1122 2
a1123 1
	$(MAKE) -C cmds/extras/$(HPROC) install
@


1.69
log
@added INMOS B431 ethernet driver
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.68 1991/12/04 13:54:24 paul Exp $
d197 2
a198 1
COMMANDS := 	cmds/support cmds/shell cmds/com cmds/emacs cmds/ampp
d1122 1
@


1.68
log
@$(LIBCPP)->$(CPP)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.67 1991/12/02 14:48:07 martyn Exp $
d256 1
a256 1
		tcpip/devs/sq-ether tcpip/helios tcpip/net \
@


1.67
log
@finally removed ORION
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.66 1991/11/26 18:08:14 martyn Exp martyn $
d668 1
a668 1
 LIBCPP = /helios/lib/cpp#
d672 1
a672 1
	$(LIBCPP)  -D$(OPTS) -DHELIOS=$(HPROD) -DHPROC=$(HPROC) -DSYSTEM <Files >test.rel
d682 1
a682 1
	$(LIBCPP)  -D$(OPTS) -DTAR -DHELIOS=$(HPROD) -DTARFILE=helios.tar \
d693 1
a693 1
	$(LIBCPP) -DTAR -DHELIOS=$(HPROD) -DTARFILE=sa.tar \
d704 1
a704 1
	$(LIBCPP)  -D$(OPTS) -DLIST -DHELIOS=$(HPROD) \
d715 1
a715 1
	$(LIBCPP)  -D$(OPTS) -DCOPY -DHELIOS=$(HPROD) -DRELDIR=$(RELDIR) \
@


1.66
log
@added new demos
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.65 1991/11/12 16:05:25 martyn Exp $
d335 1
a335 1
NCCMISC :=	cmds/cc/compiler/ORION/include cmds/cc/compiler/SUN4/include
d370 1
a370 1
 HOSTSUPPORT := SUN4 ORION R140 HELIOSTRAN
d391 1
a391 1
 HOSTSUPPORT := SUN4 ORION R140 HELIOSTRAN HP
d667 2
a668 6
ifeq ($(HHOST),ORION)
 LIBCPP = /lib/cpp#
else
 ifeq ($(HHOST),HELIOSTRAN)
  LIBCPP = /helios/lib/cpp#
 endif
a1424 6
endif
ifeq ($(HHOST),ORION)
# Not tested
# + may wish to write direct to tape
	cat backedupsrcs | tr " " "\12" > baklist
	tar cvhlf - $(OTHERFILES) -N baklist | compress > Helios$(HPROC)src.tar.Z
@


1.65
log
@modified so that install to empty directory now works OK
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.64 1991/11/10 22:01:19 paul Exp $
d218 4
a221 1
		demos/pi/pi_pasc demos/pi/pi_ring
@


1.64
log
@added lock and include servers to main makefile (so they get srctar'd)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.63 1991/10/29 12:15:02 martyn Exp paul $
d613 1
d616 1
d656 2
d1323 1
@


1.63
log
@added rcsunfreeze - should never be needed but we just did (sigh)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.62 1991/10/24 12:18:44 martyn Exp $
d188 2
a189 2
		servers/ttyserv servers/ttyserv/devs servers/ttyserv/ttyserv
#@@@@@@		servers/lock servers/include
@


1.62
log
@added LICENSEE HP-labs (USA)
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.61 1991/10/21 13:36:21 martyn Exp martyn $
d165 1
a165 1
	rcsfreeze rcslevel rcsclean rcsclean2 rcscheck rcsreport
d1247 11
@


1.61
log
@added rcsdiff rule
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.60 1991/10/14 09:54:12 paul Exp $
d467 9
@


1.60
log
@fixed for new ncc directories
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.59 1991/10/08 10:57:41 paul Exp paul $
d1238 12
@


1.59
log
@added initial support for 'C40
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.58 1991/09/26 10:19:54 martyn Exp paul $
d773 1
a773 1
	$(MAKE) -C cmds/cc/ncc/cchelios -f r140make ncc
d1046 1
a1046 1
	$(MAKE) -C cmds/cc/ncc/native -f r140make ncc
d1049 1
a1049 1
	$(MAKE) -C cmds/cc/ncc/$(HPROC) install
@


1.58
log
@added ETRI as source licensee
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.57 1991/07/31 15:25:47 paul Exp $
d375 20
d1138 1
a1138 1
	@@echo "				[[[ Making X11 ARM servers and drivers ]]]"
@


1.57
log
@changed patchlib location to within abclib
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.56 1991/06/19 09:16:46 martyn Exp paul $
d398 13
@


1.56
log
@changed rcslevel checkout to use -f (force) flag instead of
-l (lock) flag.
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.55 1991/05/20 14:26:32 paul Exp martyn $
d182 1
a182 1
 LIBRARIES := 	$(LIBRARIES) patchlib abclib 
d770 1
a770 1
	$(MAKE) -C patchlib/$(HPROC) installdef
d933 1
a933 1
	$(MAKE) -C patchlib/$(HPROC) install
@


1.55
log
@added extra abc bits to srctar
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.54 1991/05/07 14:56:07 paul Exp $
d1211 5
a1215 5
	-@@$(foreach RCSDIR, $(ALLSRC), echo "co $(RCSDIR) -l$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -l$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo "co $(RCSDIR)/$(HPROC) -l$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR)/$(HPROC); co -l $(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo "co $(RCSDIR) -l$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -l$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo "co $(RCSDIR) -l$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -l$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo "co $(RCSDIR) -l$(RCSLEVEL)"; cd $(HSRC)/$(RCSDIR); co -l$(RCSLEVEL) $(wildcard $(HSRC)/$(RCSDIR)/RCS/*); )
@


1.54
log
@allways copy entire contents of /hsrc/cmds/hostutil/$(HHOST) as it may contain sources, + it gives our version of the binary to the client
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.53 1991/04/30 10:48:10 martyn Exp paul $
d1331 1
a1331 1
 OTHERFILES	:= $(OTHERFILES) cmds/cc/ncc
@


1.53
log
@added rule to make debugger library
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.52 1991/04/17 14:47:31 martyn Exp martyn $
d165 1
a165 1
	rcsfreeze rcslevel rcsclean rcsclean2 rcscheck
a230 1

d458 1
a458 1
 ALLMISC :=	$(ALLMISC) $(STDMISC)
d469 1
d1185 3
d1238 6
@


1.52
log
@removed HostCdriver
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.51 1991/04/17 14:14:03 martyn Exp $
d1115 1
@


1.51
log
@too much C programming !!
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.50 1991/04/16 11:41:40 martyn Exp $
d690 1
a690 1
  HOSTTARGETS := $(HOSTTARGETS) HostCdriver
a731 8
endif

HostCdriver:
	@@echo "				[[[ Making HOST Compiler driver ]]]"
ifeq ($(HPROC),TRAN)
	$(MAKE) -C cmds/com/$(HHOST) install
else
	echo "What's up doc ?"
@


1.50
log
@loadsa mods to make a nucleus source licence system
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.49 1991/04/15 17:38:11 martyn Exp martyn $
d1335 1
a1335 1
#endif
@


1.49
log
@added NUC_LIC stuff for ALLSRC
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.48 1991/04/11 13:24:46 paul Exp $
d467 3
a469 1
 ALLSRC :=	$(ALLSRC) $(NUCLEUS)
d519 1
a519 1
 MAINTARGETS := LibHdrs Nucleus
d773 1
d775 1
d795 1
d799 1
d836 3
d865 8
d1331 6
@


1.48
log
@added comments on work to be done
@
text
@d62 1
a62 1
# RcsId: $Id: makefile,v 1.47 1991/04/05 17:19:59 bart Exp paul $
d464 4
@


1.47
log
@Added the compiler driver C to the host utilities for the transputer
version.
@
text
@d17 1
a17 1
#	ioserver/msgfx microsoft graphics library + inc in master make
d22 2
d62 1
a62 1
# RcsId: $Id: makefile,v 1.46 1991/04/02 16:13:24 martyn Exp bart $
@


1.46
log
@added Readme.121
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.45 1991/04/02 12:49:44 martyn Exp martyn $
d287 1
a287 1
 HOSTTOOLS :=	$(HOSTTOOLS) cmds/asm
d681 3
a683 1
 ifneq ($(HPROC),TRAN)
d726 8
a956 1
# It does this by checking for $(HSINGLEPROC).
@


1.45
log
@corrected rcslevel rules.
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.43 1991/03/26 12:22:42 martyn Exp $
d347 1
a347 1
ODDFILES :=	makefile Files
@


1.44
log
@spelling mistake !
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.43 1991/03/26 12:22:42 martyn Exp martyn $
d1164 1
a1164 1
RCSMISC :=	$(HSRC) $(ALLINC) oemdoc makeinc $(NCCRCSXTRA) $(FREERCSXTRA) \
d1172 5
a1176 5
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo rcsfreeze $(RCSDIR)/$(HPROC) @@ $(RCSLEVEL); cd $(RCSDIR)/$(HPROC)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
d1183 5
a1187 5
	-@@$(foreach RCSDIR, $(ALLSRC), echo "co $(RCSDIR) -l$(RCSLEVEL)"; co -l$(RCSLEVEL) $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLSRC), echo "co $(RCSDIR)/$(HPROC) -l$(RCSLEVEL)"; co -l $(RCSLEVEL) $(wildcard $(RCSDIR)/$(HPROC)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLHOST), echo "co $(RCSDIR) -l$(RCSLEVEL)"; co -l$(RCSLEVEL) $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(ALLIOS) $(STDIOS), echo "co $(RCSDIR) -l$(RCSLEVEL)"; co -l$(RCSLEVEL) $(wildcard $(RCSDIR)/RCS/*); )
	-@@$(foreach RCSDIR, $(RCSMISC), echo "co $(RCSDIR) -l$(RCSLEVEL)"; co -l$(RCSLEVEL) $(wildcard $(RCSDIR)/RCS/*); )
@


1.43
log
@added ect0, tmp0 directory creation for SUN4 hosts
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.41 1991/03/19 16:19:34 martyn Exp paul $
d396 1
a396 1
 XTRASRC :=	$(NETWORK)/parystec
@


1.42
log
@fix hhost -> hproc bug and add HeliosTran specific link to include dir.
@
text
@d564 6
@


1.41
log
@move comments from end of commands - Helios shell objects
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.40 1991/03/19 16:14:19 martyn Exp martyn $
d592 4
d597 1
d1290 1
a1290 1
ifeq ($(HHOST),ARM) # @@@@@@ Bodge until generic makefile written
@


1.40
log
@TRAN host should be HELIOSTRAN
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.39 1991/03/19 15:29:27 martyn Exp martyn $
d687 1
a687 1
	$(MAKE) -C cmds/hostutil/$(HHOST) install	# Misc bits
d777 2
a778 1
		> $(LIB)/c.lib			# note no fpclib
d974 2
a975 1
	$(MAKE) -C sa/$(HPROC) install		# also make standalone support
d978 2
a979 1
	$(MAKE) -C cmds/cc/ncc/native -f r140make ncc # @@@@@@ still have to add install target
d1131 2
a1132 1
	$(MAKE) -C cmds/bcplterp/$(HPROC) install	# make interpreter
d1298 2
a1299 1
	$(MAKE) -C $(STDIOS) iopsrcnames	# IO Server generic sources
d1359 2
a1360 1
	mkdir cmds cmds/cc cmds/public cmds/gnu scanlibs servers demos tcpip # make stub subdirs
@


1.39
log
@added TRAN to HOSTSUPPORT
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.38 1991/03/14 18:32:44 paul Exp martyn $
d366 1
a366 1
 HOSTSUPPORT := SUN4 ORION R140 TRAN
d384 1
a384 1
 HOSTSUPPORT := SUN4 TRAN
d397 1
a397 1
 HOSTSUPPORT := SUN4 TRAN
d405 1
a405 1
 HOSTSUPPORT := SUN4 TRAN
d413 1
a413 1
 HOSTSUPPORT := SUN4 TRAN
d435 1
a435 1
 HOSTSUPPORT := SUN4 TRAN
d444 1
a444 1
 HOSTSUPPORT := SUN4 TRAN
@


1.38
log
@added support for srctar/rcs of host directories of IO Server
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.37 91/03/12 11:11:42 martyn Exp Locker: paul $
d366 1
a366 1
 HOSTSUPPORT := SUN4 ORION R140
d384 1
a384 1
 HOSTSUPPORT := SUN4
d397 1
a397 1
 HOSTSUPPORT := SUN4
d405 1
a405 1
 HOSTSUPPORT := SUN4
d413 1
a413 1
 HOSTSUPPORT := SUN4
d435 1
a435 1
 HOSTSUPPORT := SUN4
d444 1
a444 1
 HOSTSUPPORT := SUN4
@


1.37
log
@now makes HPORD/local/src directories
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.36 91/03/12 11:08:04 paul Exp Locker: martyn $
d497 3
@


1.36
log
@ask paul
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.35 91/03/08 16:12:53 martyn Exp Locker: paul $
d579 7
@


1.35
log
@added demos/pi sub-directories.
@
text
@d17 1
a17 1
#	ioserver/msgfx microsoft graphics library - plus include in master make
d60 1
a60 1
# RcsId: $Id: makefile,v 1.34 91/03/08 16:09:39 paul Exp Locker: martyn $
d161 1
a161 1
	Debugger Tcpip Demos Hfs Help Fortran Bcpl \
d210 4
a213 1
DEMOS :=	demos demos/factor demos/hello demos/lb demos/tut \
d217 10
d233 1
a233 1
		$(COMMANDS) $(DEMOS) $(HOSTUTIL)
d339 1
a339 1
STDMISC :=
d512 1
a512 1
 MAINTARGETS := LibHdrs Nucleus Libraries Network Commands Demos
d579 3
d1029 2
d1032 1
d1039 14
a1198 2
HOSTCLEANDIRS := $(HOSTTOOLS)	# only clean current host's tools

d1200 1
a1200 1
	$(foreach CLEANIT, $(HOSTCLEANANDIRS), $(MAKE) -C $(CLEANIT)/$(HHOST) clean; )
d1344 1
a1344 1
	mkdir cmds cmds/cc scanlibs servers demos	# make stub subdirs
@


1.34
log
@several fixes, mainly ioserver sources become generic
@
text
@d60 1
a60 1
# RcsId: $Id: makefile,v 1.33 91/03/07 19:18:38 paul Exp $
d210 4
a213 2
DEMOS :=	demos demos/factor demos/hello demos/lb demos/pi demos/tut

@


1.33
log
@make scanlibs before servers so they can use scanlibs
more itelligent backup of IO Server sources
stop duplicating server sources and include directories in tar
tar now includes other server sources msgfx and iserver
@
text
@d9 1
d14 2
a15 2
#	gnu utilities
#	other pd stuff
d17 5
a21 5
#	VGA graphics library - plus include in master make
#	lock and include servers
#	generic makefile for ncc/ARM
#	masterdisks - target to create a set of master disks for this level
#		      in /HeliosRoot/MasterDisks/disk1, etc.
d24 1
a24 1
#	make clean under helios - env size problem
d30 1
a30 1
#	clean/make/test/debug/fix/srctar/make/freeze/masterdisks
d34 1
a34 1
# Move nucleus/ARM/window,rrd(ram),helios servers to /hsrc/servers
a35 2
# Finish off rcs commands rcsfreeze/rcsclean/rcslevel
#
d60 1
a60 1
# RcsId: $Id: makefile,v 1.32 91/03/07 16:14:11 paul Exp Locker: paul $
d80 1
d87 1
a87 1
#				etc
d158 1
a159 1
	PatchLib Abclib
d196 1
d210 1
a210 1
DEMOS := demos demos/factor demos/hello demos/lb demos/pi demos/tut
a294 1
#@@@@@@ When Bart puts this back!		IOSPCMISC :=	ioproc/pcmisc
d296 1
a296 1
IOSPC :=	ioproc/server/ibm ioproc/server/rawdisk
d298 2
d315 1
a315 1
# extras for the C compiler package
d317 2
d328 2
d548 1
d1104 2
a1105 1
RCSMISC :=	$(HSRC) $(ALLINC) oemdoc makeinc makeinc/template
a1232 7
# The basic ioserver sources have a generic makefile (courtesy Alan)
# so tar them individually - also gets around problem of tar including all
# subdirectories and hence all IO Server sources wether they have a license
# for them or not!
OTHERFILES	:= $(OTHERFILES) $(foreach TOOL, $(ALLHOST), $(TOOL)/makefile)


d1242 5
d1251 2
a1252 1
	$(foreach SRCDIR, $(ALLSRC) $(STDIOS), $(MAKE) -C $(SRCDIR) srcnames; )
@


1.32
log
@added termcap and curses
@
text
@a34 2
# ALL HHOST.mak's to define $(SERVERS), $(SCANLIBS)
#
d61 1
a61 1
# RcsId: $Id: makefile,v 1.31 91/03/07 15:54:09 martyn Exp Locker: paul $
d157 2
a158 1
	Fault Kernel Util Posix Clib Bsd Fplib Termcap Curses \
d183 1
a183 1
SCANLIBS := 	scanlibs scanlibs/bsd scanlibs/termcap scanlibs/curses
d281 1
a281 8
ifdef NCC_LIC
 ifeq ($(HPROC),TRAN)
  HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/compiler
 else
#@@@@@@ Write generic makefile:
#  HOSTTOOLS :=	$(HOSTTOOLS) cmds/cc/ncc
 endif
endif
d283 1
d292 3
d301 1
a301 1
INCLUDE :=	include include/sys include/net include/netinet include/arpa \
d305 1
a305 1
 INCLUDE := $(INCLUDE) include/abcARM include/abcARM/asm
d320 1
a320 1
STDMISC :=	makeinc $(OEMDOC) $(INCLUDE)
d322 3
d350 1
a350 1
		$(IOSSRC)/st $(IOSSRC)/synergy
d431 2
a432 1
 ALLSRC :=	$(XTRASRC)
d464 7
d474 2
a475 1
 ALLIOS :=	$(XTRAIOS) $(IOSSRC) $(IOSMISC) $(IOSMINI) $(IOSUNIX) $(IOSPC)
a499 3
ifdef HFS_LIC
 MAINTARGETS := $(MAINTARGETS) Hfs
endif
d565 1
a565 1
LIBCPP = /lib/cpp#
d567 3
a569 2
ifeq ($(HHOST),HELIOSTRAN)
LIBCPP = /helios/lib/cpp#
a570 1
endif
d704 1
d706 1
a706 1
	$(MAKE) -C util/$(HPROC) installdef
d708 1
a709 2
	$(MAKE) -C fplib/$(HPROC) installdef
	$(MAKE) -C fault/$(HPROC) installdef
d757 1
a757 1
PRENUC := $(PRENUC) Abclib Posix Clib Fplib Patchlib 
d760 1
d762 4
a765 1
PRENUC := $(PRENUC) Servers
d768 1
a768 1
# servers are made as well as any may be included in nucleus
d812 1
d814 1
a814 1
HELIOSLIBS := Fault Kernel Util Posix Clib Fplib Bsd Termcap Curses
d823 1
a823 1
Libraries: $(HELIOSLIBS)
d856 23
a894 14
ifeq ($(HPROC),ARM)
# Patch library
Patchlib:
	@@echo "				[[[ Making PatchLIB ]]]"
	$(MAKE) -C patchlib/$(HPROC) install


# ABClib library
Abclib:
	@@echo "				[[[ Making ABClib ]]]"
	$(MAKE) -C abclib/$(HPROC) install
endif


d916 1
a916 1
CMDTARGETS := $(CMDTARGETS) Ncc 
d1097 1
a1097 1
RCSMISC :=	$(HSRC) $(INCLUDE) oemdoc makeinc
d1107 1
a1107 1
	-@@$(foreach RCSDIR, $(ALLIOS), echo rcsfreeze $(RCSDIR) @@ $(RCSLEVEL); cd $(RCSDIR)/RCS; rcsfreeze $(RCSLEVEL); )
d1118 1
a1118 1
	-@@$(foreach RCSDIR, $(ALLIOS), echo "co $(RCSDIR) -l$(RCSLEVEL)"; co -l$(RCSLEVEL) $(wildcard $(RCSDIR)/RCS/*); )
d1131 1
a1131 1
	-@@$(foreach RCSDIR, $(ALLIOS), echo cleaning $(RCSDIR); rcsclean $(wildcard $(RCSDIR)/RCS/*); )
d1139 1
a1139 1
	-@@$(foreach RCSDIR, $(ALLIOS), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS/*); )
d1222 2
a1223 1
OTHERFILES	:= $(ODDFILES) $(ALLMISC) $(ALLIOS)
d1225 7
d1245 1
a1245 1
	$(foreach SRCDIR, $(ALLSRC), $(MAKE) -C $(SRCDIR) srcnames; )
@


1.31
log
@added NCCMISC 
@
text
@a11 2
#	termcap
#	curses
d63 1
a63 1
# RcsId: $Id: makefile,v 1.30 91/03/07 15:21:53 paul Exp $
d184 1
a184 1
SCANLIBS := 	scanlibs/bsd scanlibs/termcap scanlibs/curses
@


1.30
log
@fix oddfiles to name makefile correctly
@
text
@d65 1
a65 1
# RcsId: $Id: makefile,v 1.29 91/03/07 12:37:45 paul Exp Locker: paul $
d186 1
a186 2
SCANLIBS := 	scanlibs/bsd
#@@@@@@		scanlibs/termcap scanlibs/curses
d319 3
d465 1
d806 1
a806 1
HELIOSLIBS := Fault Kernel Util Posix Clib Fplib Bsd	# @@@@@@ Termcap Curses
@


1.29
log
@fixed up:
rcsfreeze
rcslevel
rcscheck
rcsclean
@
text
@d65 1
a65 1
# RcsId: $Id: makefile,v 1.28 91/03/06 21:19:37 paul Exp Locker: paul $
d327 1
a327 1
ODDFILES :=	Makefile Files
@


1.28
log
@Bloody Hell... I never want to touch another makefile for the rest of my life
Loads of changes:
do different things depending on licensee's rights
back everything up intelligently
make absolutely everything
cleaned up lots of odds and ends.
made it far to complicated...
@
text
@d65 1
a65 1
# RcsId: $Id: makefile,v 1.27 91/02/19 16:49:54 paul Exp Locker: paul $
d166 1
a166 1
	rcsfreeze rcslevel rcsclean rcscheck
a169 10
# define which systems are networked and which are single processor.
# default to networked versions.

# This should realy be defined in your make script
ifeq ($(HPROC),ARM)
SINGLEPROC = TRUE
endif


#-----------------------------------------------------------------------------
d200 1
a200 1
ifndef SINGLEPROC
d215 1
a215 1
HOSTUTIL :=	hostutil
d244 1
a244 3
TCPEXTRAS :=	tcpip/etc tcpip/h tcpip/include tcpip/lib tcpip/machine \
		tcpip/netstat tcpip/nfs tcpip/rpc tcpip/test tcpip/cmds/lpr \
		tcpip/cmds/sendmail tcpip/cmds/test
d246 4
d272 1
a272 1
HOSTTOOLS :=	hostutil cmds/ampp
a275 3
 ifeq ($(HLICENSEE), PERIHELION)
  HOSTTOOLS :=  HOSTTOOLS cmds/cc/compiler
 endif
d285 8
d303 1
a303 1
IOSPC :=	ioproc/server/pc ioproc/server/rawdisk
d880 1
a880 1
# It does this by checking for $(SINGLEPROC).
d899 1
a899 1
ifndef SINGLEPROC
d1077 2
a1078 2
RCSMISC :=	./ $(INCLUDE) oemdoc makeinc
# ./ in last target to get master makefile and Files checked
d1084 5
d1093 1
a1093 1
	@@echo "RCSLEVEL=XXX must be defined for rcslevel"
d1095 5
d1102 1
a1102 1
rcsclean:
d1104 10
a1114 2
# the "RCS" in rlog line is there just as a place holder to stop empty RCS dirs
# giving errors.
d1118 1
a1118 1
	-@@$(foreach RCSDIR, $(ALLHOST), echo checking $(RCSDIR); rlog -L -h $(wildcard $(RCSDIR)/RCS*); )
d1158 1
a1158 1
ultraclean: realclean rcsclean rcslevel
d1219 3
a1221 3
#	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress > /hsrc/Helios$(HPROC)src.tar.Z
	@@echo "This will require at least ten formatted floppies"
	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress | dsplit
@


1.27
log
@srctar: rule for sparky
@
text
@d4 39
d65 1
a65 1
# RcsId: $Id: makefile,v 1.26 91/02/14 22:46:21 paul Exp $
d71 1
a72 3
# default:		makes the entire Helios system
# hostutil:		makes the utilities to make helios on the host system
# install:		makes host utilities and then the entire Helios system
d74 3
d78 1
d81 2
a82 3
# AllDefs:		make all .def library definition files
# NucDefs:		makes all .def files for libraries in the nucleus
# GenDefs:		make all non nucleus library defs
d84 1
a85 1
# All the following Library and Command items can be made individually as well.
d87 3
a89 1
# Libaries:		makes following:
d98 9
d108 1
d113 1
d116 2
a117 1
# BACKUP FACILITIES:
d122 1
a122 4
# tarbaksrc:		tar backup Helios source
# tarbakall:		tar backup Helios source and binaries
# gettarbak:		Restore tar backup of Helios source
# tsttarbak:		test integrity of backup (list files)
d125 2
a126 3
# Helios/ARM SPECIFIC:
# nucleus.lst:		makes a objdump listing of the entire nucleus (BIG!)
# orionbak:		backup Helios/ARM source via net to orion
d128 6
a134 6
# reminders about make:
#	 <tab> - "cmd"       = ignore exit status
#	 <tab> @@ "cmd"       = dont print command
#	 <tab> cd dir; "cmd" = cd and other command must be on same line if
#                              command is to be executed in that dir.
#-----------------------------------------------------------------------------
d143 6
a148 1
#include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
d150 3
d154 13
a166 10
.PHONY:  default install MakeProdDir \
	 TestRelease SaRelease TarRelease CopyRelease \
	 List \
	 clean hostclean binclean realclean \
	 nuc2 nuc Nucleus hostutil HostUtil \
	 Alldefs Nucdefs Gendefs Linklibs \
	 Asm Shell Com Link Ampp Emacs Make GMake \
	 servers romsys Mess1 EndMess1 \
	 HostStartM HostEndM HostC HostIOS HostAmpp HostLink HostAsm \
	 HostMisc srctar gettar tsttar makeltree
d170 11
a180 1
# default rule to MAKE ENTIRE HELIOS SYSTEM
a181 2
# @@@@@@ Servers and Libraries should probably be made before Nucleus, so they can
# be included if required.
d183 31
d215 1
a215 1
default: Mess1 Nucleus Gendefs Linklibs Libraries Commands EndMess1
d217 4
a220 4
#default: Mess1 Nucleus Gendefs Linklibs Shell Com Link Ampp Emacs GMake \
	servers romsys EndMess1
default: Mess1 Nucleus Gendefs Linklibs Bsd Commands \
	servers romsys EndMess1
d223 281
d507 1
d531 1
a531 1
# @@@@@@ Should also copy cshrc, loginrc, initrc, etc?
d536 1
a537 1
	-mkdir $(HPROD)/etc
d539 4
a542 1
	-mkdir $(HPROD)/bin/private
d544 4
d550 1
d552 2
d555 1
d557 1
d623 1
d627 2
a628 4
ifeq ($(HPROC),TRAN)
HOSTTARGETS = HostAmmp HostAsm HostC
else
HOSTTARGETS = HostMisc HostAmpp HostLink HostAsm
d630 6
d637 2
a638 2
ifeq ($(HHOST),R140)
HOSTTARGETS := $(HOSTTARGETS) HostIOS
d657 1
a657 1
	$(MAKE) -C cmds/link/$(HHOST) install
d666 1
a666 1
	$(MAKE) -C cmds/asm/$(HHOST) install	# @@@@@@ Write new generic makefiles!
d668 1
d670 3
d689 1
d693 2
a694 1
Alldefs: Nucdefs Gendefs
d696 4
a699 3
# Make nucleus library definition files
Nucdefs:
	@@echo "				[[[ Making Nucleus lib defs ]]]"
a702 2
ifeq ($(HPROC),ARM)
	$(MAKE) -C abclib/$(HPROC) installdef
d707 2
a711 11
# Make all definition files first
Gendefs:
	@@echo "				[[[ Making general lib defs ]]]"
ifeq ($(HPROC),ARM)
	@@echo "Currently no loadable libraries to make"
else
	$(MAKE) -C posix/$(HPROC) installdef
	$(MAKE) -C cmds/cc/clib/$(HPROC) installdef
	$(MAKE) -C fplib/$(HPROC) installdef
	$(MAKE) -C fault/$(HPROC) installdef
endif
d713 3
a715 1
Linklibs: Nucdefs Gendefs
d717 12
a728 20
ifeq ($(HPROC),TRAN)
	asm -p -o $(HPROD)/lib/helios.lib	\
		$(HPROD)/lib/kernel.def		\
		$(HPROD)/lib/syslib.def		\
		$(HPROD)/lib/util.def		\
		$(HPROD)/lib/servlib.def	\
		$(HPROD)/lib/fault.def		\
		$(HPROD)/lib/fplib.def		\
		$(HPROD)/lib/posix.def
	asm -p -o $(HPROD)/lib/c.lib		\
		$(HPROD)/lib/clib.def		\
		$(HPROD)/lib/fpclib.def	
	asm -p -o $(HPROD)/lib/cstart.o		\
		$(HPROD)/lib/c0.o		\
		$(HPROD)/lib/kernel.def		\
		$(HPROD)/lib/syslib.def		\
		$(HPROD)/lib/util.def		\
		$(HPROD)/lib/clib.def		\
		$(HPROD)/lib/fplib.def		\
		$(HPROD)/lib/posix.def
d730 10
a739 18
	cat 	$(HPROD)/lib/kernel.def		\
		$(HPROD)/lib/syslib.def		\
		$(HPROD)/lib/util.def		\
		$(HPROD)/lib/servlib.def	\
		$(HPROD)/lib/fault.def		\
		$(HPROD)/lib/fplib.def		\
		$(HPROD)/lib/posix.def		\
		> $(HPROD)/lib/helios.lib
	cat	$(HPROD)/lib/clib.def		\
		> $(HPROD)/lib/c.lib		# note no fpclib
# done in clib makefile
#	cat	$(HPROD)/lib/c0.o		\
#		$(HPROD)/lib/kernel.def		\
#		$(HPROD)/lib/syslib.def		\
#		$(HPROD)/lib/util.def		\
#		$(HPROD)/lib/clib.def		\
#		$(HPROD)/lib/posix.def		\
#		> $(HPROD)/lib/cstart.o
d747 1
a747 1
# Fault library made for codes.h and errno.h
d749 4
d754 1
a754 3
Nucleus: Mess2 Nucdefs Fault Kernel Util ABClib Posix Clib Fplib Patchlib Nuc EndMess2
else
Nucleus: Mess2 Nucdefs Fault Kernel Util Nuc EndMess2
d757 7
a771 1
ifeq ($(HPROC),ARM)
d773 1
a773 1
endif
d778 1
a778 1
# The Helios Libraries
d780 10
d791 3
a793 1
Libraries: Fault Kernel Util Posix Clib Fplib Patchlib Bsd Patchlib ABClib Nuc
d795 1
a795 1
Libraries: Fault Kernel Util Posix Clib Fplib Patchlib Bsd Nuc
d798 20
d851 1
a851 1
	$(MAKE) -C bsd/$(HPROC) install
d853 11
d870 1
d872 2
a873 2
ABClib:
	@@echo "                         [[[ Making ABClib ]]]"
d877 1
d879 12
d893 1
a893 1
# @@@@@@ Should also add all other GNU utilities
d896 4
a899 4
ifeq ($(HPROC),TRAN)
Commands: Ncc Shell Com Asm Ampp Emacs Make
else
Commands: Shell Com Link Asm Ampp Emacs #Make Ncc - ncc removed to save space and time
d902 14
d918 1
a918 1
	@@echo "				[[[ Making C Compiler ]]]"
d921 1
d950 1
a950 1
	$(MAKE) -C cmds/link/$(HPROC) install
d963 1
a963 1

d977 5
d987 4
d992 1
d994 2
a995 1
# For servers not included in the nucleus directory
d997 3
a999 5
servers:
ifeq ($(HPROC),ARM)
	@@echo "				[[[ Making ARM servers and drivers ]]]"
	$(MAKE) -C servers/$(HPROC) install
endif
d1001 1
d1003 1
a1003 1
# For Rommed systems Now build the ROM image and ROM disk.
d1005 3
a1007 8
romsys:
ifeq ($(HPROC),ARM)
# Helios ARM low Executive and ROM system (ROM disk and ROM image)
	@@echo "				[[[ Making ARM Executive and ROM system ]]]"
	$(MAKE) -C kernel/$(HPROC) romsys
else
	@@echo "				[[[ ROM resident system not supported for $(HPROC) processor]]]"
endif
a1008 3
#-----------------------------------------------------------------------------
# Obsolete or not implemented under Helios/ARM
# @@@@@@ Please add to makefile!
d1011 1
a1011 1
# X Window system
d1013 5
d1019 1
a1019 1
# Source Level Debugger
d1021 5
d1028 1
d1030 9
d1040 2
a1041 4
# Window system (and non-window system)
#popd > /dev/null
#pushd window > /dev/null
#$(MAKE) -f makefile.arm 
d1043 7
d1051 2
a1052 14
# Network support
#popd > /dev/null
#pushd net_man/gen_serv > /dev/null
#$(MAKE) -f makefile.arm
#cd ../session
#$(MAKE) -f makefile.arm
#cd ../batch
#$(MAKE) -f makefile.arm
#cd ../net_serv
#$(MAKE) -f makefile.arm
#cd ../tfm
#$(MAKE) -f makefile.arm
#cd ../netcmds
#$(MAKE) -f makefile.arm
d1054 7
d1062 1
d1065 1
a1065 1
# Makefile utilities
d1069 9
a1077 1
# Cleanup all directories
d1080 2
a1081 1
# Cleanup objects and temporary files
d1083 5
a1087 3
CLEANDIRS := kernel nucleus util posix cmds/cc/clib fplib fault bsd \
		servers cmds/shell cmds/com cmds/emacs cmds/ampp
		# + cmds/gnu/gmake et al
d1089 3
a1091 2
ifeq ($(HPROC),TRAN)
CLEANDIRS := $(CLEANDIRS) cmds/asm cmds/make cmds/cc/compiler
a1092 5
 ifeq ($(HPROC),ARM)
CLEANDIRS := $(CLEANDIRS) abclib patchlib cmds/hobjasm		# cmds/cc/ncc/cchelios
 else
CLEANDIRS := $(CLEANDIRS) 
 endif
d1095 20
d1121 1
a1121 1
HOSTCLEANDIRS := cmds/hostutil cmds/ampp ioproc/server 
a1122 11
ifeq ($(HPROC),TRAN)
HOSTCLEANDIRS := $(HOSTCLEANDIRS) cmds/asm cmds/cc/compiler
else
HOSTCLEANDIRS := $(HOSTCLEANDIRS) cmds/link	# cmds/cc/ncc
 ifeq ($(HPROC),ARM)
HOSTCLEANDIRS := $(HOSTCLEANDIRS) cmds/hobjasm
 else
HOSTCLEANDIRS := $(HOSTCLEANDIRS)
 endif
endif

d1129 6
a1134 2
	$(RM) -r $(HPROD)/bin/*
	$(RM) -r $(HPROD)/lib/*
d1137 1
a1137 1
# cleanup objects, utilities and binaries
d1141 6
d1150 2
a1151 2
# Individual components can also be backed up via their own 'tar' target.
# This tar's its entire contents, including objects and binaries.
d1159 2
a1160 2
	@@echo "Testing Helios source backup on tape"
	tar tv
d1174 1
a1183 1
# @@@@@@ NOT tested on anything but the R140!
d1185 1
a1185 1
# include these files and directories that are not referenced in any makefiles,
d1187 1
a1187 2
OTHERFILES	:= makeinc oemdoc makefile text include Files cmds/support \
		ioproc
d1189 4
a1192 4
# Components that require generic makefiles writing:
ifeq ($(HPROC),ARM)
OTHERFILES	:= $(OTHERFILES) #cmds/cc/ncc cmds/gnu
endif
d1194 2
a1195 7
# beware of host versions of Helios components - remember to note these
# (Check $HOSTTARGETS) for your processors usual hosts
ifeq ($(HHOST),R140)
OTHERFILES	:= $(OTHERFILES) cmds/hostutil/R140 cmds/link/R140/makefile \
		cmds/ampp/R140/makefile cmds/hobjasm/R140/makefile \
		servers/msdosfs		# possibly temporary
		# cmds/gnu/gmake/R140
d1198 1
a1198 20
# all source directories that need backing up:
SRCDIRS		:= kernel nucleus nucleus/syslib util posix cmds/cc/clib \
		fplib patchlib fault bsd servers \
		cmds/shell cmds/com cmds/emacs cmds/ampp
		# + cmds/gnu/gmake et al

ifeq ($(HPROC),TRAN)
SRCDIRS		:= $(SRCDIRS) cmds/asm cmds/cc/compiler
else
SRCDIRS		:= $(SRCDIRS) cmds/link		# cmds/cc/ncc
endif

ifeq ($(HPROC),ARM)
SRCDIRS		:= $(SRCDIRS) cmds/hobjasm servers/codec servers/fdc \
		servers/serial servers/common patchlib abclib
else
SRCDIRS		:= $(SRCDIRS) debugger filesys cmds/make cmds/bcpl \
		cmds/muscat cmds/cdl
endif

d1202 1
a1202 1
	$(foreach SRCDIR, $(SRCDIRS), $(MAKE) -C $(SRCDIR) srcnames; )
d1207 2
a1208 2
else
 ifeq ($(HHOST),ORION)
d1213 2
a1214 2
 else
  ifeq ($(HHOST),HELIOSTRAN)
d1220 2
a1221 2
 else
  ifeq ($(HHOST),SPARKY)
d1223 2
a1224 5
	cat backedupsrcs | tr " " "\12" > baklist
	tar cvhlf - $(OTHERFILES) -I baklist | compress > Helios$(HPROC)src.tar.Z
 endif
 endif
 endif
d1227 1
a1227 16

# Old backup targets

ifeq ($(HHOST), R140)
oldbackupsrc: clean hostclean oldbackupsrc2

# WARNING incomplete source directory listing
oldbackupsrc2:
	@@echo "Making Helios source backup onto floppies"
	@@echo "This will require at least 10 formatted floppies"
	tar cvhf - makeinc oemdoc makefile cmds fault \
                   fplib patchlib include kernel nucleus posix util ioproc \
		   slashhelios/ARM/users \
		   slashhelios/ARM/etc | compress | dsplit

# WARNING incomplete source directory listing
d1229 2
a1230 5
	@@echo "Making Helios source and executable backup onto floppies"
	@@echo "This will require at least five formatted floppies"
	tar cvhf - makeinc oemdoc makefile cmds fault \
		   fplib patchlib include kernel nucleus posix util bsd \
		   ioproc slashhelios/ARM | compress | dsplit
d1232 7
a1239 3
#-----------------------------------------------------------------------------
#-----------------------------------------------------------------------------
# Any Helios/ARM extensions go below here:
a1240 77
ifeq ($(HPROC), ARM)

#-----------------------------------------------------------------------------
# Create *MASSIVE* nucleus listing file
# @@@@@@ warning - out of date file order and names

KOBJS = kernel/kmodule.o kernel/kstart.o kernel/hiexec.o kernel/execroot.o \
	kernel/queue1.o kernel/sem1.o kernel/port1.o \
	kernel/memory1.o kernel/putmsg1.o kernel/getmsg1.o kernel/kill1.o \
	kernel/link1.o kernel/linkmsg1.o kernel/task.o \
	kernel/event.o kernel/asm.o kernel/kend.o
SYSOBJS  = nucleus/sysstart.o nucleus/syslib.o kernel/kernel.def \
	   util/util.def nucleus/modend.o
SERVOBJS = nucleus/servstart.o nucleus/servlib.o kernel/kernel.def \
	   nucleus/syslib.def util/util.def nucleus/modend.o
UTIL	 = util/utilstar.o util/utilasm.o util/misc.o util/string.o \
	   nucleus/modend.o kernel/kernel.def nucleus/syslib.def 
BOOT	 = kernel/nboot.o

FAULT	 = fault/fstart.o fault/fault.o nucleus/modend.o kernel/kernel.def \
		nucleus/syslib.def nucleus/servlib.def util/util.def

POSIX	 = posix/pstart.o posix/posixasm.o posix/fileio.o posix/dir.o \
		posix/pwd.o posix/env.o posix/exec.o posix/signal.o \
		posix/termios.o posix/socket.o nucleus/modend.o \
		kernel/kernel.def nucleus/syslib.def util/util.def

CLIB	 = cmds/cc/clib/clibstar.o cmds/cc/clib/stdio.o cmds/cc/clib/ctype.o \
		cmds/cc/clib/string.o cmds/cc/clib/printf.o \
		cmds/cc/clib/fpprintf.o cmds/cc/clib/scanf.o \
		cmds/cc/clib/stdlib.o cmds/cc/clib/sort.o \
		cmds/cc/clib/alloc.o cmds/cc/clib/time.o \
		cmds/cc/clib/error.o cmds/cc/clib/locale.o \
		cmds/cc/clib/posixsys.o nucleus/modend.o \
		kernel/kernel.def nucleus/syslib.def util/util.def \
		posix/posix.def
FPLIB	 = fplib/fpstart.o fplib/fpdirect.o fplib/math.o nucleus/modend.o \
		kernel/kernel.def nucleus/syslib.def util/util.def \
		posix/posix.def cmds/cc/clib/clib.def
ABCLIB	 =
PATCHLIB = patchlib/ARM/ABChdr.o patchlib/ARM/ABCend.o \
		kernel/kernel.def nucleus/syslib.def util/util.def

PROCMAN  = nucleus/sstart.o nucleus/procman.o
LOADER   = nucleus/sstart.o nucleus/loader.o
ROMDISK  = nucleus/sstart.o nucleus/rom.o
RAMDISK  = nucleus/sstart.o nucleus/ram.o
NULLS    = nucleus/sstart.o nucleus/null.o
HSERVER  = nucleus/sstart.o nucleus/hserver.o
WINDOW   = nucleus/sstart.o nucleus/window.o nucleus/vdev.o

# 65536 = nucbase, + 36 sysbuild rptrs, +12 imageheaders, +4 imagetailers
nucleus.lst:	$(KOBJS) $(SYSOBJS) $(SERVOBJS) $(UTIL) $(FAULT) $(POSIX) \
		$(CLIB) $(FPLIB) $(PATCHLIB) $(LOADER) $(PROCMAN) $(ROMDISK) \
		$(RAMDISK) $(NULLS) $(HSERVER) $(WINDOW)
	objdump +65536 +36 \
	$(KOBJS) +4 \
	$(SYSOBJS) +4 \
	$(SERVOBJS) +4 \
	$(UTIL) +4 \
	$(ABCLIB) +4 \
	$(POSIX) +4 \
	$(CLIB) +4 \
	$(FAULT) +4 \
	$(FPLIB) +4 \
	$(PATCHLIB) +4 \
	$(PROCMAN) +4 \
	$(LOADER) +4 \
	$(WINDOW) +4 \
	$(ROMDISK) +4 \
	$(RAMDISK) +4 \
	$(NULLS) +4 \
	$(HSERVER) +4 \
	>  /usr/users/paul/orionfs/tmp/nucleus.lst
#	>  nucleus.lst


d1249 1
a1249 4
CLIST := kernel nucleus nucleus/syslib util posix cmds/cc/clib fplib \
		patchlib fault bsd \
		cmds/shell cmds/com cmds/emacs cmds/ampp \
		cmds/link cmds/hobjasm
a1250 3
# debugger filesys cmds/make cmds/bcpl cmds/muscat cmds/cdl cmds/asm \
# cmds/cc/compiler cmds/gnu/???

d1261 1
a1261 1
	mkdir cmds cmds/cc	# make stub subdirs
d1265 2
a1266 1
endif	# Helios/ARM extensions
@


1.26
log
@added support for fully separated abclib
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.25 91/01/22 19:11:25 paul Exp $
d660 2
a661 2
	@@echo "Restoring Helios source backup from tape"
	tar xv
d715 1
a715 2
	@@echo "Making Helios/ARM source backup onto floppies"
	@@echo "This will require at least ten formatted floppies"
d719 2
a721 1
#	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress > /usr/orion/paul/tmp/helios.tar.Z
d727 1
a727 1
	tar cvhlf - $(OTHERFILES) -N baklist | compress > /tmp/hsrc.tar
d734 8
a741 2
#	tar cvhlf -  $(OTHERFILES) -T baklist | compress > /helios/tmp/hsrc.tar
  endif
@


1.25
log
@added arm version patch library
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.24 90/12/08 02:00:48 paul Exp $
d298 1
d369 1
a369 1
Nucleus: Mess2 Nucdefs Fault Kernel Util Posix Clib Fplib Patchlib Nuc EndMess2
d391 3
d395 1
a401 1

a411 5
# Patch library
Patchlib:
	@@echo "				[[[ Making PatchLIB ]]]"
	$(MAKE) -C patchlib/$(HPROC) install

d432 12
d591 1
a591 2
		servers \
		cmds/shell cmds/com cmds/emacs cmds/ampp
d598 1
a598 1
CLEANDIRS := $(CLEANDIRS) patchlib cmds/hobjasm		# cmds/cc/ncc/cchelios
d708 1
a708 1
		servers/serial servers/common
d770 1
a770 1
# Create nucleus listing file
@


1.24
log
@just changed one of the backup targets slightly
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.23 90/11/27 12:12:42 martyn Exp $
d152 1
d158 4
d302 1
d368 1
a368 1
Nucleus: Mess2 Nucdefs Fault Kernel Util Posix Clib Fplib Nuc EndMess2
d390 1
a390 1
Libraries: Fault Kernel Util Posix Clib Fplib Bsd Nuc
d408 5
d588 1
a588 1
CLEANDIRS := $(CLEANDIRS) cmds/hobjasm		# cmds/cc/ncc/cchelios
d686 1
a686 1
		fplib fault bsd servers \
d740 2
a741 2
                   fplib include kernel nucleus posix util ioproc \
		   slashhelios/ARM/cshrc slashhelios/ARM/loginrc \
d749 2
a750 2
		   fplib include kernel nucleus posix util bsd ioproc \
                   slashhelios/ARM | compress | dsplit
d796 4
d810 2
a811 2
		$(CLIB) $(FPLIB) $(LOADER) $(PROCMAN) $(ROMDISK) $(RAMDISK) \
		$(NULLS) $(HSERVER) $(WINDOW)
d817 1
a817 1
	$(FPLIB) +4 \
d821 2
d843 1
a843 1
		fault bsd \
@


1.23
log
@added SA release support
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.22 90/11/27 12:08:13 paul Exp Locker: martyn $
d64 4
d657 1
a657 1
		# ioproc
@


1.22
log
@Just simplified the default rule to use Commands & Libraries
better support for hobjasm building
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.21 90/11/21 11:29:28 nick Exp $
d93 1
a93 1
	 TestRelease TarRelease CopyRelease \
d179 11
@


1.21
log
@Commands target updated
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.20 90/11/18 17:30:50 paul Exp $
d47 6
a52 4
# Libaries:		makes following
#				Nucleus:, Kernel:, Util, Fault, Fplib, Posix
# Commands:		makes following
#				Com, Ammp, Link:, Asm:, Make:, GMake:, Emacs:,
d107 1
a107 1
# @@@@@@ servers and Libraries should probably be made before Nucleus, so they can
d115 1
a115 1
default: Mess1 Nucleus Gendefs Linklibs Shell Com Link Ampp Emacs \
d138 4
d258 1
a258 1
	$(MAKE) -C cmds/cc/ncc/cchelios ncc
a364 3
ifeq ($(HPROC),ARM)
nuc2: Nuc romsys
endif
d416 1
a416 1
Commands: Ncc Shell Com Link Asm Ampp Emacs Make
d426 1
a426 2
	$(MAKE) -C cmds/cc/ncc/native ncc
	# still have to add install target.
d458 1
a458 1
	@@echo "				[[[ Making assembler/linker asm ]]]"
d460 7
d502 2
a504 1

@


1.20
log
@corrected fault in makeing of servers target
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.19 90/11/16 15:53:51 nick Exp $
d109 1
a109 1
default: Mess1 Nucleus Gendefs Linklibs Libraries Asm Shell Com Link Ampp Emacs Make EndMess1
d410 5
a414 3
#Commands: Shell Com Link Asm Ampp Emacs GMake Make
Commands: Ncc Shell Com Link Asm Ampp Emacs

@


1.19
log
@Libraries added as a default target, Asm rule uncommented
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.18 90/11/15 16:45:33 paul Exp Locker: nick $
d104 3
d480 1
a480 1
	$(MAKE) -C kernel/$(HPROC) install
@


1.18
log
@added servers/msdosfs to srctar
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.17 90/11/07 02:23:55 paul Exp Locker: paul $
d106 1
a106 1
default: Mess1 Nucleus Gendefs Linklibs Asm Shell Com Link Ampp Emacs Make EndMess1
d451 2
a452 2
#	@@echo "				[[[ Making assembler/linker asm ]]]"
#	$(MAKE) -C cmds/asm/$(HPROC) install
@


1.17
log
@fixed HostAsm
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.16 90/11/07 01:28:32 paul Exp Locker: paul $
d639 1
@


1.16
log
@Updated list of source directories to backup in ARM srctar:
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.15 90/11/06 16:34:04 martyn Exp $
d206 1
a206 1
HOSTTARGETS = HostMisc HostAmpp HostLink
d220 1
a221 1
	@@echo "				[[[ Making HOST ampp ]]]"
d224 1
a234 1
# @@@@@@ Write new generic makefiles!
d237 3
d241 1
d411 1
a411 1
# C Compiler
a495 3
# NorCroft ANSI C Compiler

#-----------------------------------------------------------------------------
d539 1
d564 1
a564 1
HOSTCLEANDIRS := $(HOSTCLEANDIRS) cmds/link
@


1.15
log
@removed cmds/loadpac (now in cmds/com)
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.14 90/11/06 15:55:51 martyn Exp Locker: martyn $
d625 1
a625 1
		# ioproc cmds/gnu
d629 1
a629 1
OTHERFILES	:= $(OTHERFILES) servers #cmds/cc/ncc
d636 2
a637 1
		cmds/ampp/R140/makefile cmds/hobjasm/R140/makefile
d642 1
a642 1
		fplib fault bsd \
d653 2
a654 1
SRCDIRS		:= $(SRCDIRS) cmds/hobjasm
@


1.14
log
@added list option fot Brian's QA
.`
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.13 90/11/06 12:42:33 nick Exp Locker: martyn $
d538 1
a538 1
		cmds/shell cmds/com cmds/emacs cmds/ampp cmds/loadpac
d642 1
a642 1
		cmds/shell cmds/com cmds/emacs cmds/ampp cmds/loadpac
d792 1
a792 1
		cmds/shell cmds/com cmds/emacs cmds/ampp cmds/loadpac \
@


1.13
log
@Asm target added to default make list
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.12 90/11/05 11:41:34 nick Exp Locker: nick $
d92 1
d160 2
a161 1
	source test.rel
d163 2
a164 1
	source test.rel
d171 2
a172 1
	source tar.rel
d174 2
a175 1
	source tar.rel
d178 11
d193 2
a194 1
	source cp.rel
d196 2
a197 1
	source cp.rel
@


1.12
log
@Release file names tidied
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.11 90/11/02 16:19:01 paul Exp Locker: nick $
d105 1
a105 1
default: Mess1 Nucleus Gendefs Linklibs Shell Com Link Ampp Emacs Make EndMess1
@


1.11
log
@fixed for new hobjasm generic makefiles
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.10 90/11/01 16:07:18 paul Exp Locker: paul $
d159 1
a159 1
	shell -c "source test.rel"
d161 1
a161 1
	csh -c "source test.rel"
d166 1
a166 1
		-DHPROC=$(HPROC) -DSYSTEM <Files >mktar
d168 1
a168 1
	shell -c "source mktar"
d170 1
a170 1
	csh -c "source mktar"
d175 1
a175 1
		-DHPROC=$(HPROC) -DSYSTEM <Files >mkrel
d177 1
a177 1
	shell -c "source mkrel"
d179 1
a179 1
	csh -c "source mkrel"
@


1.10
log
@added support for the servers directory
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.9 90/10/30 18:13:50 paul Exp $
d218 2
a219 2
#	@@echo "				[[[ Making HOST Assembler ]]]"
#	$(MAKE) -C cmds/hobjasm/$(HHOST) install
d516 3
d527 1
a527 1
CLEANDIRS := $(CLEANDIRS)		#cmds/hobjasm cmds/cc/ncc/cchelios
d537 1
a537 27
# Cleanup Helios source objects and temporary files 
#clean:
#	$(MAKE) -C kernel/$(HPROC) clean
#	$(MAKE) -C nucleus/$(HPROC) clean
#	$(MAKE) -C util/$(HPROC) clean
#	$(MAKE) -C posix/$(HPROC) clean
#	$(MAKE) -C cmds/cc/clib/$(HPROC) clean
#	$(MAKE) -C fplib/$(HPROC) clean
#	$(MAKE) -C fault/$(HPROC) clean
#	$(MAKE) -C cmds/shell/$(HPROC) clean
#	$(MAKE) -C cmds/com/$(HPROC) clean
#	$(MAKE) -C cmds/emacs/$(HPROC) clean
#ifeq ($HPROC),TRAN)
#	$(MAKE) -C cmds/asm/$(HPROC) clean
#else
#	$(MAKE) -C cmds/link/$(HPROC) clean
#endif
#	$(MAKE) -C cmds/ampp/$(HPROC) clean
#ifeq ($(HPROC),ARM)
##	$(MAKE) -C cmds/gnu/gmake/$(HPROC) clean
##	$(MAKE) -C cmds/hobjasm/$(HPROC) clean
#else
#	$(MAKE) -C cmds/make/$(HPROC) clean
#endif


# clean up host utilities
d546 1
a546 1
HOSTCLEANDIRS := $(HOSTCLEANDIRS)		# cmds/hobjasm
a548 2

 
d556 1
a556 14
#hostclean:
#	$(MAKE) -C cmds/hostutil/$(HHOST) clean
#	$(MAKE) -C cmds/ampp/$(HHOST) clean
#ifeq ($(HPROC),TRAN)
#	$(MAKE) -C cmds/asm/$(HHOST) clean
#else
#	$(MAKE) -C cmds/link/$(HHOST) clean
#endif
#	$(MAKE) -C ioproc/server/$(HHOST) clean
#ifeq ($(HPROC),ARM)
##	$(MAKE) -C cmds/hobjasm/$(HHOST) clean
#endif

# cleanup binaries
d561 1
d611 1
a611 1
OTHERFILES	:= $(OTHERFILES) servers cmds/hobjasm #cmds/cc/ncc
d618 1
a618 1
		cmds/ampp/R140/makefile
d634 1
a634 1
SRCDIRS		:= $(SRCDIRS) 			# cmds/hobjasm
@


1.9
log
@updated backed-up components list
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.8 90/10/24 00:51:36 paul Exp Locker: paul $
d455 1
a455 1
	$(MAKE) -C kernel/$(HPROC) romsys
@


1.8
log
@Support for source backup via tar and automatic creation of local source tree
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.7 90/10/22 12:21:09 martyn Exp Locker: paul $
d96 1
a96 1
	 romsys Mess1 EndMess1 \
d107 4
a110 2
#default: Mess1 Nucleus Gendefs Linklibs Shell Com Link Ampp Emacs GMake romsys EndMess1
default: Mess1 Nucleus Gendefs Linklibs Shell Com Link Ampp Emacs romsys EndMess1
d450 9
d644 1
a644 1
		ioproc cmds/gnu
d646 1
d648 1
a648 1
OTHERFILES	:= $(OTHERFILES) cmds/hobjasm cmds/cc/ncc kernel/ARM/items/.
d654 1
a654 1
OTHERFILES	:= $(OTHERFILES) cmds/hostutil/R140 cmds/link/R140/makefile
d671 1
a671 1
SRCDIRS		:= $(SRCDIRS) cmds/link		# cmds/hobjasm
@


1.7
log
@Added OPTS to software release system. This allows specifics to be
built into the Files file. e.g make OPTS=PC TarRelease will make a
tar archive for a PC system, whilst make OPTS=SUN4 TestRelease will
test the SUN4 specific release.
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.6 90/10/22 11:53:52 paul Exp Locker: martyn $
a92 1
	 tarbaksrc tarbakall tsttarbak gettarbak tarbaksrc2 \
d98 1
a98 1
	 HostMisc tar backupsrc makelsrc
d595 2
a596 27
# Make individual tar files for each component
#tar	:
#	$(MAKE) -C kernel tar
#	$(MAKE) -C nucleus tar
#	$(MAKE) -C util tar
#	$(MAKE) -C posix tar
#	$(MAKE) -C cmds/cc/clib tar
#	$(MAKE) -C fplib tar
#	$(MAKE) -C fault tar
#	$(MAKE) -C cmds/shell tar
#	$(MAKE) -C cmds/com tar
#	$(MAKE) -C cmds/emacs tar
#ifeq ($HPROC),TRAN)
#	$(MAKE) -C cmds/asm tar
#else
#	$(MAKE) -C cmds/link tar
#endif
#	$(MAKE) -C cmds/ampp tar
#ifeq ($(HPROC),ARM)
#	$(MAKE) -C cmds/gnu/gmake tar
##	$(MAKE) -C cmds/hobjasm tar
#else
#	$(MAKE) -C cmds/make tar
#endif
#	-rm -f root.tar
#	tar chf root.tar makefile makeinc include oemdoc

d599 1
a599 1
tsttarbak:
d603 1
a603 1
tsttarbak:
d608 1
d610 1
a610 1
gettarbak:
d614 1
a614 1
gettarbak:
d619 2
a620 1
#tarbaksrc: clean hostclean tarbaksrc2
a621 34
#ifeq ($(HHOST), R140)
#tarbaksrc2:
#	@@echo "Making Helios source backup onto floppies"
#	@@echo "This will require at least six formatted floppies"
#	tar cvhf - makeinc oemdoc makefile cmds fault \
#                   fplib include kernel nucleus posix util ioproc \
#		   slashhelios/ARM/cshrc slashhelios/ARM/loginrc \
#		   slashhelios/ARM/etc | compress | dsplit
#else
## WARNING incomplete source directory listing
#tarbaksrc2:
#	@@echo "Making Helios source backup onto tape"
#	tar cvh    makeinc oemdoc makefile cmds fault \
#                   fplib include kernel nucleus posix util ioproc
#endif

ifeq ($(HHOST), R140)
tarbakall:
	@@echo "Making Helios source and executable backup onto floppies"
	@@echo "This will require at least five formatted floppies"
	tar cvhf - makeinc oemdoc makefile cmds fault \
		   fplib include kernel nucleus posix util ioproc \
                   slashhelios/ARM | compress | dsplit
else
# WARNING incomplete source directory listing
tarbakall:
	@@echo "Making Helios source and executable backup onto tape"
	tar cvh    makeinc oemdoc makefile cmds fault \
		   fplib include kernel nucleus posix util ioproc \
                   slashhelios
endif


#-----------------------------------------------------------------------------
d628 1
d636 8
a643 1
OTHERFILES	:= $(OTHERFILES) cmds/hobjasm cmds/cc/ncc cmds/hostutil/R140
d665 1
a665 2
backupsrc:
ifeq ($(HHOST),R140)
d667 1
a667 1
	@@echo "This will require at least six formatted floppies"
d670 3
a672 3
	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress > /usr/orion/paul/tmp/helios.tar.Z

#	tar cvhlf - $(OTHERFILES) `cat backedupsrcs` | compress | dsplit
d674 14
a687 4
	@@echo "Making Helios source backup onto tape"
	$(RM) backedupsrcs
	$(foreach SRCDIR, $(SRCDIRS), $(MAKE) -C $(SRCDIR) srcnames; )
	tar cvhl $(OTHERFILES) `cat backedupsrcs`
d691 23
d722 1
d789 3
d793 2
a794 3
# Creates local source tree
# Make local empty source tree save for the makefiles
# assumes that you have created root of source tree, copied the
d809 1
a809 1
makelsrc:
d811 1
a811 1
	@@echo "RSRC not defined - get lost sucker - read the comments"
@


1.6
log
@support for backup of sources
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.5 90/10/09 12:53:33 nick Exp Locker: paul $
d156 1
a156 1
	$(LIBCPP) -DHELIOS=$(HPROD) -DHPROC=$(HPROC) -DSYSTEM <Files >test.rel
d164 1
a164 1
	$(LIBCPP) -DTAR -DHELIOS=$(HPROD) -DTARFILE=helios.tar \
d173 1
a173 1
	$(LIBCPP) -DCOPY -DHELIOS=$(HPROD) -DRELDIR=$(RELDIR) \
@


1.5
log
@some tidying, release system added
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.4 90/09/26 19:36:13 paul Exp Locker: nick $
d99 1
a99 1
	 HostMisc tar
d225 3
d229 1
d394 2
a395 1
	$(MAKE) -C cmds/cc/ncc/native install
d397 3
a502 1
ifeq (($HPROC), ARM)
d504 235
a803 137
endif


#-----------------------------------------------------------------------------
# Cleanup all directories

# Cleanup Helios source objects and temporary files 
clean:
	$(MAKE) -C kernel/$(HPROC) clean
	$(MAKE) -C nucleus/$(HPROC) clean
	$(MAKE) -C util/$(HPROC) clean
	$(MAKE) -C posix/$(HPROC) clean
	$(MAKE) -C cmds/cc/clib/$(HPROC) clean
	$(MAKE) -C fplib/$(HPROC) clean
	$(MAKE) -C fault/$(HPROC) clean
	$(MAKE) -C cmds/shell/$(HPROC) clean
	$(MAKE) -C cmds/com/$(HPROC) clean
	$(MAKE) -C cmds/emacs/$(HPROC) clean
ifeq ($HPROC),TRAN)
	$(MAKE) -C cmds/asm/$(HPROC) clean
else
	$(MAKE) -C cmds/link/$(HPROC) clean
endif
	$(MAKE) -C cmds/ampp/$(HPROC) clean
ifeq ($(HPROC),ARM)
#	$(MAKE) -C cmds/gnu/gmake/$(HPROC) clean
#	$(MAKE) -C cmds/hobjasm/$(HPROC) clean
else
	$(MAKE) -C cmds/make/$(HPROC) clean
endif

# clean up host utilities
hostclean:
	$(MAKE) -C cmds/hostutil/$(HHOST) clean
	$(MAKE) -C cmds/ampp/$(HHOST) clean
ifeq ($(HPROC),TRAN)
	$(MAKE) -C cmds/asm/$(HHOST) clean
else
	$(MAKE) -C cmds/link/$(HHOST) clean
endif
	$(MAKE) -C ioproc/server/$(HHOST) clean
ifeq ($(HPROC),ARM)
#	$(MAKE) -C cmds/hobjasm/$(HHOST) clean
endif

# cleanup binaries
binclean:
	$(RM) -r $(HPROD)/bin/*
	$(RM) -r $(HPROD)/lib/*

# cleanup objects, utilities and binaries
realclean: binclean hostclean clean


#-----------------------------------------------------------------------------
# Backup utilities

# Make individual tar files for each component
tar	:
	$(MAKE) -C kernel tar
	$(MAKE) -C nucleus tar
	$(MAKE) -C util tar
	$(MAKE) -C posix tar
	$(MAKE) -C cmds/cc/clib tar
	$(MAKE) -C fplib tar
	$(MAKE) -C fault tar
	$(MAKE) -C cmds/shell tar
	$(MAKE) -C cmds/com tar
	$(MAKE) -C cmds/emacs tar
ifeq ($HPROC),TRAN)
	$(MAKE) -C cmds/asm tar
else
	$(MAKE) -C cmds/link tar
endif
	$(MAKE) -C cmds/ampp tar
ifeq ($(HPROC),ARM)
	$(MAKE) -C cmds/gnu/gmake tar
#	$(MAKE) -C cmds/hobjasm tar
else
	$(MAKE) -C cmds/make tar
endif
	-rm -f root.tar
	tar chf root.tar makefile makeinc include oemdoc

ifeq ($(HHOST), R140)
tsttarbak:
	@@echo "Testing Helios source backup on floppies"
	dsplit | uncompress | tar tvf - | more
else
tsttarbak:
	@@echo "Testing Helios source backup on tape"
	tar tv | more
endif

ifeq ($(HHOST), R140)
gettarbak:
	@@echo "Restoring Helios source backup from floppies"
	dsplit | uncompress | tar xvf -
else
gettarbak:
	@@echo "Restoring Helios source backup from tape"
	tar xv
endif

tarbaksrc: clean hostclean tarbaksrc2

ifeq ($(HHOST), R140)
tarbaksrc2:
	@@echo "Making Helios source backup onto floppies"
	@@echo "This will require at least six formatted floppies"
	tar cvhf - makeinc oemdoc makefile cmds fault \
                   fplib include kernel nucleus posix util ioproc \
		   slashhelios/ARM/cshrc slashhelios/ARM/loginrc \
		   slashhelios/ARM/etc | compress | dsplit
else
# WARNING incomplete source directory listing
tarbaksrc2:
	@@echo "Making Helios source backup onto tape"
	tar cvh    makeinc oemdoc makefile cmds fault \
                   fplib include kernel nucleus posix util ioproc
endif

ifeq ($(HHOST), R140)
tarbakall:
	@@echo "Making Helios source and executable backup onto floppies"
	@@echo "This will require at least five formatted floppies"
	tar cvhf - makeinc oemdoc makefile cmds fault \
		   fplib include kernel nucleus posix util ioproc \
                   slashhelios/ARM | compress | dsplit
else
# WARNING incomplete source directory listing
tarbakall:
	@@echo "Making Helios source and executable backup onto tape"
	tar cvh    makeinc oemdoc makefile cmds fault \
		   fplib include kernel nucleus posix util ioproc \
                   slashhelios
endif
a804 3
ifeq ($(HHOST), R140)
# These remote backup facilities should not be needed now for the R140/ARM version
orionbak: realclean orionbak2
d806 26
a831 21
orionbak2:
	@@echo "Making Helios source backup onto Orion"
	-rm -r /usr/orion/paul/aback/heliosrc.old2
	-mv /usr/orion/paul/aback/heliosrc.old /usr/orion/paul/aback/heliosrc.old2
	mv /usr/orion/paul/aback/heliosrc /usr/orion/paul/aback/heliosrc.old
	tar cvf - makeinc oemdoc makefile cmds fault fplib include \
              kernel nucleus posix util ioproc \
	      slashhelios/ARM/cshrc slashhelios/ARM/loginrc \
	      slashhelios/ARM/etc | compress > /usr/orion/paul/aback/heliosrc

hollybak: realclean hollybak2

hollybak2:
	@@echo "Making Helios source backup onto Holly"
	-rm -r /usr/hollyroot/pauls-stuff/aback/heliosrc.old2
	-mv /usr/hollyroot/pauls-stuff/aback/heliosrc.old /usr/hollyroot/pauls-stuff/aback/heliosrc.old2
	mv /usr/hollyroot/pauls-stuff/aback/heliosrc /usr/hollyroot/pauls-stuff/aback/heliosrc.old
	tar cvf - makeinc oemdoc makefile cmds fault fplib include \
              kernel nucleus posix util ioproc \
	      slashhelios/ARM/cshrc slashhelios/ARM/loginrc \
	      slashhelios/ARM/etc | compress > /usr/hollyroot/pauls-stuff/aback/heliosrc
d834 1
a834 1
#-----------------------------------------------------------------------------
@


1.4
log
@arm changes for 1.2
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.2 90/09/07 13:30:21 nick Exp Locker: nick $
d80 6
a85 16
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif
d87 1
d90 2
a91 1
.PHONY: default install MakeProdDir \
d144 36
@


1.3
log
@rules for C compiler and BSD library added
@
text
@d102 1
a102 1
	 nuc Nucleus hostutil HostUtil \
d116 2
a117 2
#default: Mess1 Nucleus Gendefs Shell Com Link Ampp Emacs GMake romsys EndMess1
default: Mess1 Nucleus Gendefs Shell Com Link Ampp Emacs romsys EndMess1
d194 1
d196 3
a199 1

a231 1
ifeq ($(HPROC),TRAN)
d234 1
d255 18
a272 2
Linklibs:
	@@echo "				[[[ No link libraries ]]]"
d296 3
d301 3
a345 1

a351 1
ifeq ($(HPROC),TRAN)
d354 1
a354 3
else
Commands: Shell Com Link Asm Ampp Emacs 
endif
d359 1
d361 4
d377 4
a380 5
#ifneq ($(HPROC),ARM)
# dont use old Helios make anymore
#	@@echo "				[[[ Making Make ]]]"
#	$(MAKE) -C cmds/make/$(HPROC) install
#endif
a389 1
# @@@@@@ New generic sys makefile required for this component!
a445 6
# Driver Support
#popd > /dev/null
#pushd drivers > /dev/null
#$(MAKE) -f makefile.arm 

#-----------------------------------------------------------------------------
d559 1
a559 1
	$(MAKE) -C cmds/gnu/gmake/$(HPROC) clean
d643 2
a644 2
	@@echo "This will require at least two formatted floppies"
	tar cvhf - makeinc oemdoc makefile cmds drivers fault \
d649 1
d652 2
a653 4
	@@echo "This will require at least two formatted floppies"
	tar cvh    makeinc oemdoc makefile cmds drivers fault \
                   fplib include kernel nucleus posix util ioproc \
		   | compress | dsplit
d660 1
a660 1
	tar cvhf - makeinc oemdoc makefile cmds drivers fault \
d667 1
a667 1
	tar cvh    makeinc oemdoc makefile cmds drivers fault \
d669 1
a669 1
                   slashhelios | compress | dsplit
d673 4
a676 1
orionbak: realclean
d678 2
d681 13
a693 2
	mkdir /usr/orion/paul/aback/heliosrc
	cp -r makeinc oemdoc makefile cmds drivers fault fplib include \
d696 1
a696 1
	      slashhelios/ARM/etc  /usr/orion/paul/aback/heliosrc
@


1.2
log
@make for cstart.o added
@
text
@d26 1
a26 1
# RcsId: $Id: makefile,v 1.1 90/08/29 13:34:12 nick Exp Locker: nick $
d193 2
a194 2
#	@@echo "				[[[ Making HOST C Compiler ]]]"
#	$(MAKE) -C cmds/cc/ncc/$(HHOST) install
d249 1
d283 1
a283 1
Libraries: Fault Kernel Util Posix Clib Fplib Nuc
d316 5
d328 1
d330 9
a338 1
Commands: Shell Com Link Asm Ampp Emacs
d351 1
a351 1
ifneq ($(HPROC),ARM)
d353 3
a355 3
	@@echo "				[[[ Making Make ]]]"
	$(MAKE) -C cmds/make/$(HPROC) install
endif
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
# RcsId: $Id$
d243 7
@
