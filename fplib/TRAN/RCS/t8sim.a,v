head	1.1;
access;
symbols
	Helios1_3:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1;
locks; strict;


1.1
date	90.10.22.12.30.27;	author paul;	state Exp;
branches;
next	;


desc
@Transputer specific t8 fp sources
@



1.1
log
@Initial revision
@
text
@--------------------------------------------------------------------------
--                                                                      --
--                      H E L I O S   K E R N E L                       --
--                      -------------------------                       --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- t8sim.a								--
--                                                                      --
--	Floating point simulation routines for the T8. These will	--
--	allow code compiled for the t4 to run on a T8.			--
--                                                                      --
--	Author:  NHG 28/7/87						--
--                                                                      --
--------------------------------------------------------------------------


include basic.m
include procs.m
include structs.m
include debug.m
include module.m


kproc real32op
[
	word		 a1
	word		 op
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	critical
	[
		test[ceq op [ldc 0]][ fpadd ]
		[ test[ceq op [ldc 1]][ fpsub ]
		  [ test[ceq op [ldc 2]][ fpmul ] [ fpdiv ] ]
		]
	]

	ptr a1 fpstnlsn
	a1
]

kproc real32rem
[
	word		 a1
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	fpremfirst
	eqc 0
	cj ..rem32done
..rem32loop:
	fpremstep
	cj ..rem32loop
..rem32done:

	ptr a1 fpstnlsn
	a1
	
]

kproc real32eq
[
	word		 a1
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	fpeq
]

kproc real32gt
[
	word		 a1
	word		 a2
]
[]
[
	ptr a1 fpldnlsn
	ptr a2 fpldnlsn

	fpgt
]

kproc real32toint32
[
	word		 mode
	word		 r
]
[]
[
	critical
	[
		ptr r fpldnlsn
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		fprtoi32
		ptr r fpstnli32
		r
	]
]

kproc int32toreal32
[
	word		 mode
	word		 i
]
[]
[
	critical
	[
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		ptr i fpi32tor32
		ptr i fpstnlsn
		i
	]
]

kproc real32toreal64
[
	word		 d
	word		 s
]
[]
[
	ptr s fpldnlsn
	fpur32tor64
	d fpstnldb
]


kproc real64op
[
	word		 res
	word		 a1
	word		 op
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	critical
	[
		test[ceq op [ldc 0]][ fpadd ]
		[ test[ceq op [ldc 1]][ fpsub ]
		  [ test[ceq op [ldc 2]][ fpmul ] [ fpdiv ] ]
		]
	]

	res fpstnldb
]

kproc real64rem
[
	word		 res
	word		 a1
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	fpremfirst
	eqc 0
	cj ..rem64done
..rem64loop:
	fpremstep
	cj ..rem64loop
..rem64done:

	res fpstnldb
]

kproc real64eq
[
	word		 a1
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	fpeq
]

kproc real64gt
[
	word		 a1
	word		 a2
]
[]
[
	a1 fpldnldb
	a2 fpldnldb

	fpgt
]

kproc real64toint32
[
	word		 mode
	word		 r
]
[]
[
	critical
	[
		r fpldnldb
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		fprtoi32
		ptr r fpstnli32
		r
	]
]

kproc int32toreal64
[
	word		 res
	word		 i
]
[]
[
	ptr i fpi32tor64
	res fpstnldb
]

kproc real64toreal32
[
	word		mode
	word		d
]
[]
[
	critical
	[
		d fpldnldb
		test[ ceq mode [ldc 0] ] [ fpurz ]
		[ test[ ceq mode [ldc 1] ] [ fpurn ]
 		  [ test[ ceq mode [ldc 2] ] [ fpurp ] [ fpurm ] ]
		]
		fpur64tor32
		ptr d fpstnlsn
		d
	]
]

-- End of t8sim.a
@
