head	1.6;
access;
symbols
	Helios1_3:1.6
	Helios13_beta:1.6
	Helios1_2_2:1.6
	Helios1_2_2Beta:1.6
	Helios1_2_1:1.6
	V1_2Beta0:1.3;
locks; strict;
comment	@# @;


1.6
date	90.11.16.16.26.03;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	90.11.16.16.16.20;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	90.10.22.12.27.45;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.09.07.12.43.19;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.05.14.16.35;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.16.24;	author nick;	state Exp;
branches;
next	;


desc
@@


1.6
log
@last fix fixed
@
text
@#------------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# TRANSPUTER processor specific make rules for the FpLib component.
#
# File: /HSRC/fplib/TRAN/makefile
#
# This file contains the extra definitions of variables and rules that are
# required to make a processor specific version of this component.
#
# If you wish to overide a targets rule that has been defined in the generic
# part of the makefile, you should bracket it with "ifneq ($(HPROC),YYY)" and
# supply the new rule in this makefile.
#
# This makefile is always executed within this processor specific subdir.
# All processor specific source files should be kept here.
# All intermediate, object and binary files should be made in here.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.5 90/11/16 16:16:20 nick Exp $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

InProcMake = TRUE

# Get generic component makefile
include ../makefile

#-----------------------------------------------------------------------------
# Add processor specific targets:
XTARGETS = fplib.t8 fplib.t4 fpclib.i fpclib.def

Xdefault: $(XTARGETS)


# Install the extra targets:
Xinstall: $(XTARGETS)
	$(CP) fplib.t8 $(LIB)/FpLib.t8
	$(CP) fplib.t4 $(LIB)/FpLib.t4
	$(CP) fpclib.i $(LIB)/fpclib
	$(CP) fpclib.def $(LIB)
	$(TOUCH) Xinstall

Xinstalldef: $(LIB)/fpclib.def
	$(TOUCH) Xinstalldef

$(LIB)/fpclib.def : fpclib.def
ifeq (HELIOS,$(findstring HELIOS,$(HHOST))) #csh default on Helios hosts
	(cmp $^ $@@ ; if ( $$status ) cp $^ $@@ )
else
	if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
endif

# Remove any processor specific files other than targets and objects here:
Xclean:
	-$(RM) *.p8 *.p4 *.x4 *.x8 *.o 


#-----------------------------------------------------------------------------
# Add to lists of files, used for archive, backup and cleaning purposes.

# All extra processor specific sources
XSOURCES	= $(XSOURCES.c) $(XSOURCES.a) \
		  $(XHEADERS.c) $(XHEADERS.m) \
		  $(XSOURCES.odd)


#Full set of library object files
XOBJECTS	= $(XSOURCES.c:.c=.p) $(XSOURCES.a:.a=.p)
# Or if you are not a library:
#XOBJECTS	= $(XSOURCES.c:.c=.o) $(XSOURCES.a:.a=.o)


# Fill in processor specific sources here:
XSOURCES.c	= fpcstubs.c

XSOURCES.a	= t8sim.a t4sim.a fpcstart.a

XHEADERS.c	=

XHEADERS.m	=

XSOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Any additional processor specific rules and generic rule overides go here:

.SUFFIXES: .p4 .p8

%.p4: %.c
	$(NC) -l -t4 $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/$*
	$(ASM) -p $(TEMP)/$* -o$*.p4
	$(RMTEMP) $(TEMP)/$*

%.p8: %.c
	$(NC) -l -t8 $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/$*
	$(ASM) -p $(TEMP)/$* -o$*.p8
	$(RMTEMP) $(TEMP)/$*


#------------------------------------------------------------------------------
# Language Independant FP library

FPLIBDEFS = $(LIB)/kernel.def $(LIB)/syslib.def $(LIB)/posix.def \
	$(LIB)/util.def

# T4 version
FP4OBJS = fpstart.p t4sim.p math.p4 modend.p

fplib.t4 : $(FP4OBJS) $(FPLIBDEFS)
	$(LINK.LIBRARY) -nFpLib $(FP4OBJS) $(FPLIBDEFS) -ofplib.t4


# T8 version
FP8OBJS = fpstart.p t8sim.p math.p8 modend.p

fplib.t8 : $(FP8OBJS) 
	$(LINK.LIBRARY) -nFpLib $(FP8OBJS) $(FPLIBDEFS) -ofplib.t8


#------------------------------------------------------------------------------
# C language FP library
# This is always compiled for T4, what little floating point maths it does
# is always emulated.

FPCLIBDEFS = $(LIB)/kernel.def $(LIB)/syslib.def $(LIB)/util.def \
	     $(LIB)/clib.def $(LIB)/fplib.def

FPCOBJS = fpcstart.p fpcstubs.p4 modend.p

fpclib.i : $(FPCOBJS) $(FPCLIBDEFS) 
	$(ASM) -nFpClib $^ -ofpclib.i

fpclib.def: fpcstart.a
	$(MAKE.DEF)

@


1.5
log
@.p4 and .p8 rules used silly temp file names
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.4 90/10/22 12:27:45 paul Exp Locker: nick $
d94 1
a94 1
	$(NC) -l -t4 $(NCFLAGS) $(DEFINES) $< -s$(TEMP/)/$*
@


1.4
log
@sources.c/a to reflect current sources + move the tran specific sources into
the TRAN directory.
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.3 90/09/07 12:43:19 nick Exp Locker: nick $
d94 3
a96 3
	$(NC) -l -t4 $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/x
	$(ASM) -p $(TEMP)/x -o$*.p4
	$(RMTEMP) $(TEMP)/x
d99 3
a101 3
	$(NC) -l -t8 $(NCFLAGS) $(DEFINES) $< -s$(TEMP)/x
	$(ASM) -p $(TEMP)/x -o$*.p8
	$(RMTEMP) $(TEMP)/x
@


1.3
log
@installdef fixed to cope with empty $(LIB)
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.2 90/09/05 14:16:35 nick Exp Locker: nick $
d77 1
a77 1
XSOURCES.c	= fpprintf.c scanf.c math.c
d79 1
a79 1
XSOURCES.a	= fpstart.a t8sim.a t4sim.a fpdef.a fpcdef.a fpcstart.a
@


1.2
log
@new target Xinstalldef to make fpclib.def
@
text
@d20 1
a20 1
# RcsId: $Id: makefile,v 1.1 90/09/05 13:16:24 nick Exp Locker: nick $
d46 1
a46 2
Xinstalldef: fpclib.def
	$(CP) fpclib.def $(LIB)
d48 7
@


1.1
log
@Initial revision
@
text
@d20 1
a20 1
# RcsId: $Id$
d46 3
@
