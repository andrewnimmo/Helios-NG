head	1.5;
access;
symbols
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.3
	C40_Field_Test_R1:1.3
	Helios13_beta:1.3
	Helios1_2_2_Fault:1.3
	Helios1_2_2_Native:1.3
	Helios1_2_2_native_beta:1.3
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.3
	Helios1_2_1:1.3
	Helios1_2:1.1;
locks; strict;
comment	@ * @;


1.5
date	93.08.12.11.39.23;	author nickc;	state Exp;
branches;
next	1.4;

1.4
date	93.08.11.10.50.31;	author bart;	state Exp;
branches;
next	1.3;

1.3
date	91.03.19.13.15.27;	author bart;	state Exp;
branches;
next	1.2;

1.2
date	91.03.01.17.19.43;	author bart;	state Exp;
branches;
next	1.1;

1.1
date	90.09.12.15.05.14;	author jon;	state Exp;
branches;
next	;


desc
@@


1.5
log
@fixed compile time warnings
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--           H E L I O S   N E T W O R K I N G   S O F T W A R E	--
--           ---------------------------------------------------	--
--                                                                      --
--             Copyright (C) 1990, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- tests.c								--
--									--
--	Code for the RmTestSessionManager()  etc. routines		--
--                                                                      --
--	Author:  BLV 9/7/90						--
--                                                                      --
------------------------------------------------------------------------*/
/* RcsId: $Header: /hsrc/network/RCS/sltests.c,v 1.4 1993/08/11 10:50:31 bart Exp nickc $*/

#include <stdio.h>
#include <string.h>
#include <syslib.h>
#include <gsp.h>
#include <nonansi.h>
#include <posix.h>

#include "session.h"

#ifdef Malloc		/* courtesy of servlib.h */
#undef Malloc
#endif

#ifndef eq
#define eq ==
#define ne !=
#endif

bool	RmTestSessionManager(void)
{ Object	*SM = Locate(Null(Object), "/sm");
  if (SM eq Null(Object)) return(FALSE);
  Close(SM);
  return(TRUE);
}

/**
*** Currently this simply locates the Session Manager. Eventually it
*** may try to get a Session Manager capability from the environment
*** to gain special access.
**/
Object	*RmGetSessionManager(void)
{ Object *result = Locate(Null(Object), "/sm");
  return(result);
}

bool	RmTestPasswordsRequired(void)
{ Object	*SM = Locate(Null(Object), "/sm");
  word		flags;
  
  if (SM eq Null(Object))
   return(FALSE);	/* Cannot verify passwords without a user database */
  flags = SM->Flags;
  Close(SM);
  return((flags & RmFlags_PasswordChecking) ne 0);
} 


@


1.4
log
@memory reduction
@
text
@d16 1
a16 1
/* RcsId: $Header: /hsrc/network/RCS/sltests.c,v 1.3 1991/03/19 13:15:27 bart Exp $*/
d55 1
a55 1
  int		flags;
@


1.3
log
@Changed the test for whether or not passwords are required. This cannot
work sensibly until the user database exists.
@
text
@d16 1
a16 2

static char *rcsid = "$Header: /usr/perihelion/Helios/network/RCS/sltests.c,v 1.1 90/09/12 15:05:14 jon Exp Locker: bart $";
@


1.2
log
@Various files had been left checked out somehow, tidying up.
@
text
@a36 4
#pragma -s1		/* disable stack checking */
#pragma -f0		/* and vector stack */
#pragma -g0		/* and do not put the names into the code */

d55 1
a55 1
{ Object	*SM = Locate(Null(Object), "/sm/UserDatabase");
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
static char *rcsid = "$Header$";
@
