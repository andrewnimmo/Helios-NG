head	1.3;
access;
symbols
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.2
	Helios1_3:1.2;
locks; strict;
comment	@# @;


1.3
date	93.04.02.15.09.21;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	92.10.21.13.41.40;	author bart;	state Exp;
branches;
next	1.1;

1.1
date	92.01.16.13.44.27;	author bart;	state Exp;
branches;
next	;


desc
@makefile for the hardware test suite
@


1.3
log
@removed installation into /hprod since these files are not for release
@
text
@#-----------------------------------------------------------------------------
# Helios make rules for: network/packages/hwtests1, a simple hardware test suite
#
# File: /HSRC/network/packages/hwtests1/makefile
#
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = network/packages/hwtests1

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

CCFLAGS := 

# Note all final generic targets here
TARGETS = hwtest

default : $(TARGETS) Xdefault

install	: installdef $(TARGETS) Xinstall
#	-mkdir $(HPROD)/local/tests
#	-mkdir $(HPROD)/local/tests/hwtests1
#	cat $(HSRC)/$(COMPONENT)/hwtest.c > $(HPROD)/local/tests/hwtests1/hwtest.c
#	cat $(HSRC)/$(COMPONENT)/hwtest.tex > $(HPROD)/local/tests/hwtests1/hwtest.tex
	$(TOUCH) install

installdef:	# If this is a library, enter all .def files here (to install)
	$(TOUCH) installdef

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	=	hwtest.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	=	

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile hwtest.tex


#-----------------------------------------------------------------------------
# Other generic component variables:

# Note any library def files to be linked with
LIBDEFS	:= -l$(LIB)/helios.lib -l$(LIB)/c.lib -l$(LIB)/RmLib.def

LINKFLAGS := $(LINKFLAGS)

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

hwtest: hwtest.c
	$(CC) $(CCFLAGS) -c $< -o hwtest.o
	$(LINK) $(LINKFLAGS) -o $@@ $(LIB)/c0.o hwtest.o $(LIBDEFS)

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.2
log
@Modified for the new hardware test suite
@
text
@d68 4
a71 4
	-mkdir $(HPROD)/local/tests
	-mkdir $(HPROD)/local/tests/hwtests1
	cat $(HSRC)/$(COMPONENT)/hwtest.c > $(HPROD)/local/tests/hwtests1/hwtest.c
	cat $(HSRC)/$(COMPONENT)/hwtest.tex > $(HPROD)/local/tests/hwtests1/hwtest.tex
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# Helios make rules for: network/packages/tests1, a simple hardware test suite
d4 1
a4 1
# File: /HSRC/network/packages/tests1/makefile
d31 1
a31 1
COMPONENT = network/packages/tests1
d60 1
a60 1
CCFLAGS := -I$(HSRC)/network -I$(HSRC)/$(COMPONENT)
d63 1
a63 1
TARGETS = configur control linktest memory
d68 4
a71 8
	-mkdir $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/configur.c $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/control.c $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/linktest.c $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/memory.c $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/packet.h $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/readme $(HPROD)/local/src/nettests
	cp $(HSRC)/$(COMPONENT)/makefile.hel $(HPROD)/local/src/nettests
d97 1
a97 1
SOURCES.c	=	configur.c control.c linktest.c memory.c
d103 1
a103 1
HEADERS.c	=	packet.h
d109 1
a109 1
SOURCES.odd	= makefile makefile.hel readme
d116 1
a116 1
LIBDEFS	:= -l$(LIB)/helios.lib -l$(LIB)/c.lib -l$(HSRC)/network/$(HPROC)/RmLib.def
d123 3
a125 16
configur: configur.c
	$(CC) $(CCFLAGS) -c $< -o configur.o
	$(LINK) $(LINKFLAGS) -o configur $(LIB)/c0.o configur.o $(LIBDEFS)

control: control.c
	$(CC) -c $(CCFLAGS) $< -o control.o
	$(LINK) $(LINKFLAGS) -o control $(LIB)/c0.o control.o $(LIBDEFS)

linktest: linktest.c
	$(CC) -c $(CCFLAGS) $< -o linktest.o
	$(LINK) $(LINKFLAGS) -o linktest $(LIB)/c0.o linktest.o $(LIBDEFS)

memory: memory.c
	$(CC) -c $(CCFLAGS) $< -o memory.o
	$(LINK) $(LINKFLAGS) -o memory $(LIB)/c0.o memory.o $(LIBDEFS)

@
