head	1.21;
access;
symbols
	Helios_1_3_1:1.20
	Helios_C40_1_3_Official_Release:1.19
	Alenia_release:1.19
	Helios1_3:1.19
	C40_Field_Test_2:1.19
	C40_Field_Test_R1:1.14
	Helios13_beta:1.14
	Helios1_2_2:1.13
	Helios1_2_2Beta:1.13
	Helios1_2_1:1.13
	Helios1_2:1.7
	V1_2Beta0:1.4;
locks; strict;
comment	@# @;


1.21
date	94.06.07.12.34.56;	author nickc;	state Exp;
branches;
next	1.20;

1.20
date	93.08.06.12.22.45;	author paul;	state Exp;
branches;
next	1.19;

1.19
date	92.09.24.10.32.45;	author martyn;	state Exp;
branches;
next	1.18;

1.18
date	92.09.24.09.50.12;	author martyn;	state Exp;
branches;
next	1.17;

1.17
date	92.09.04.07.52.57;	author nickc;	state Exp;
branches;
next	1.16;

1.16
date	92.08.04.16.24.53;	author bart;	state Exp;
branches;
next	1.15;

1.15
date	92.08.04.16.21.50;	author bart;	state Exp;
branches;
next	1.14;

1.14
date	91.12.12.15.33.51;	author paul;	state Exp;
branches;
next	1.13;

1.13
date	91.03.05.16.34.07;	author paul;	state Exp;
branches;
next	1.12;

1.12
date	91.03.04.19.03.57;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	91.03.03.23.02.40;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	91.03.01.17.43.36;	author martyn;	state Exp;
branches;
next	1.9;

1.9
date	91.02.14.22.04.09;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	91.01.22.13.50.43;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	90.10.20.00.43.03;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	90.10.02.17.49.38;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	90.10.02.12.25.01;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	90.09.07.11.42.27;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	90.09.05.14.37.30;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.05.14.24.19;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.22.26;	author nick;	state Exp;
branches;
next	;


desc
@@


1.21
log
@minor tidy up
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system
#-----------------------------------------------------------------------------
# Helios generic component make rules for: Fault Library
#
# File: /HSRC/fault/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.20 1993/08/06 12:22:45 paul Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@ $(MAKE) -C $(HPROC)

.DEFAULT:
	@@ $(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = fault

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default" - should make this component in its proc subdir
# "install" - copy the new component to $(HPROD) production directory
# "clean"   - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
  HVPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.c $(HVPATH)
vpath %.a $(HVPATH)
vpath %.fdb $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = fault.i fault.def faults

default : $(TARGETS) Xdefault

install: installdef $(TARGETS) Xinstall
ifeq ($(HLICENSEE),ABC)
	sysstrip fault.i -o$(LIB)/Fault
else
	$(CP) fault.i $(LIB)/Fault
endif
	$(CP) faults $(ETC)
ifeq (HELIOS,$(findstring HELIOS,$(HHOST))) #csh default on Helios hosts
	(cmp codes.h $(INCLUDE)/codes.h ; if ( $$status ) $(TCP) codes.h $(INCLUDE) )
	(cmp errno.h $(INCLUDE)/errno.h ; if ( $$status ) $(TCP) errno.h $(INCLUDE) )
	(cmp signal.h $(INCLUDE)/signal.h ; if ( $$status ) $(TCP) signal.h $(INCLUDE) )
else
	@@ if cmp codes.h $(INCLUDE)/codes.h; then echo "codes.h not changed"; else $(TCP) codes.h $(INCLUDE) ;fi
	@@ if cmp errno.h $(INCLUDE)/errno.h; then echo "errno.h not changed"; else $(TCP) errno.h $(INCLUDE) ;fi
	@@ if cmp signal.h $(INCLUDE)/signal.h; then echo "signal.h not changed"; else $(TCP) signal.h $(INCLUDE) ;fi
endif
	$(TOUCH) install

installdef: $(LIB)/fault.def
	$(TOUCH) installdef

$(LIB)/fault.def : fault.def
ifeq (HELIOS,$(findstring HELIOS,$(HHOST))) #csh default on Helios hosts
	(cmp $^ $@@ ; if ( $$status ) cp $^ $@@ )
else
	@@ if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
endif

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout codes.h errno.h signal.h install \
		Xinstall installdef fault.tar

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

# C source files
SOURCES.c	= fault.c ftest.c

# AMPP source files
SOURCES.a	= fstart.a modend.a

# C header files
HEADERS.c	=

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile master.fdb


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
# -I. to pick up latest codes.h
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -Zps1 -I.
else
  ifeq ($(HPROC),C40)
    NCFLAGS := $(NCFLAGS) -Zps1 -I.
  else
    NCFLAGS := $(NCFLAGS) -ps1
  endif
endif

# Note any library def files to be linked with
LIBDEFS	=	$(LIB)/kernel.def $(LIB)/syslib.def \
		$(LIB)/util.def


#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends


fault.c: faults

OBJECTS = fstart.p fault.p modend.p

fault.i: $(OBJECTS) $(LIBDEFS)
	$(LINK.LIBRARY) -o$@@ -nFault -s1000 -h1000 $^

fault.def: fstart.a
	$(MAKE.DEF)


#-----------------------------------------------------------------------------
# Create fault lookup files:
# etc/faults, include/errno.h, include/codes.h, include/signal.h

codes.h errno.h signal.h faults : master.fdb
	$(HHOSTBIN)/squash < $< > faults
	$(HHOSTBIN)/gencodes $< > $(NULL)


#-----------------------------------------------------------------------------
# Fault library test utilities:

ifneq ($(HPROC),ARM)
ftest : ftest.o
	 $(LINK) $(LIB)/c0.o ftest.o -l $(LIB)/libc -o ftest
endif


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.20
log
@merged with Helios-ARM
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.19 1992/09/24 10:32:45 martyn Exp paul $
d32 1
a32 1
	@@$(MAKE) -C $(HPROC)
d35 1
a35 1
	@@$(MAKE) -C $(HPROC) $@@
@


1.19
log
@removed *.s from clean rule (helios shell doesn't like unmatched things).
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.18 1992/09/24 09:50:12 martyn Exp martyn $
d78 1
a78 1
ifeq ($(HPROC),ARM)
@


1.18
log
@added full path to squash and gencode invocations.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.17 1992/09/04 07:52:57 nickc Exp martyn $
d106 1
a106 1
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) *.s mkout \
@


1.17
log
@made a few rules silent
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.16 1992/08/04 16:24:53 bart Exp nickc $
d178 2
a179 2
	squash < $< > faults
	gencodes $< > $(NULL)
@


1.16
log
@Fixed again for remote source
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.14 1991/12/12 15:33:51 paul Exp $
d89 3
a91 3
	if cmp codes.h $(INCLUDE)/codes.h; then echo "codes.h not changed"; else $(TCP) codes.h $(INCLUDE) ;fi
	if cmp errno.h $(INCLUDE)/errno.h; then echo "errno.h not changed"; else $(TCP) errno.h $(INCLUDE) ;fi
	if cmp signal.h $(INCLUDE)/signal.h; then echo "signal.h not changed"; else $(TCP) signal.h $(INCLUDE) ;fi
d102 1
a102 1
	if cmp $^ $@@; then echo "$^ not changed"; else $(CP) $^ $@@ ;fi
@


1.15
log
@Fixed for remote source
@
text
@d67 1
@


1.14
log
@adjusted for c40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.13 1991/03/05 16:34:07 paul Exp paul $
d58 1
a58 1
VPATH := $(HSRC)/$(COMPONENT)
d61 1
a61 1
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d63 4
@


1.13
log
@fixed install
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.12 91/03/04 19:03:57 paul Exp Locker: paul $
d101 1
a101 1
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
d138 5
a142 1
  NCFLAGS := $(NCFLAGS) -ps1
@


1.12
log
@fixed dependencies on codes/errno/signal.h
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 91/03/03 23:02:40 paul Exp $
a52 1
# "installdef" - If component is a library, make .def file and install in LIB
d72 1
a72 1
install : installdef $(TARGETS) Xinstall
d153 1
a153 1
fault.c : faults
d157 1
a157 1
fault.i : $(OBJECTS) $(LIBDEFS)
d160 1
a160 1
fault.def : fstart.a
@


1.11
log
@Removed squash and gencodes. They have now been placed in the cmds/hostutils
directory.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 91/03/01 17:43:36 martyn Exp Locker: paul $
d169 1
a169 1
faults : master.fdb
@


1.10
log
@changed def from ORION to HHOST
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 91/02/14 22:04:09 paul Exp Locker: martyn $
d69 1
a69 1
TARGETS = fault.i fault.def faults squash gencodes
d103 1
a103 1
		core ../mkout squash gencodes codes.h errno.h signal.h install \
d116 1
a116 1
SOURCES.c	= fault.c gencodes.c squash.c ftest.c
d169 1
a169 1
faults : master.fdb squash gencodes
a181 16
#-----------------------------------------------------------------------------
# Fault library host utilities:

gencodes : gencodes.c
ifeq ($(HHOST),HELIOSTRAN)
	$(HOSTCC) -b $< -o$@@
else
	$(HOSTCC) -o $@@ -D$(HHOST) $<
endif

squash : squash.c
ifeq ($(HHOST),HELIOSTRAN)
	$(HOSTCC) -b $< -o$@@
else
	$(HOSTCC) -o $@@ $<
endif
@


1.9
log
@-o to sysstrip
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 91/01/22 13:50:43 paul Exp Locker: paul $
d189 1
a189 1
	$(HOSTCC) -o $@@ -DORION $<
@


1.8
log
@altered ARM version of the image file to be sysstrip'd (allows ROM based
system to patch individual items in the nucleus)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 90/10/20 00:43:03 paul Exp $
d75 1
a75 1
	sysstrip fault.i $(LIB)/Fault
@


1.7
log
@corrected SOURCES.odd
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 90/10/02 17:49:38 nick Exp Locker: paul $
d74 3
d78 1
@


1.6
log
@now uses DFLT.mak for local options, RSRC for remote sources
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 90/10/02 12:25:01 paul Exp $
d115 1
a115 1
SOURCES.a	= modend.a
d124 1
a124 1
SOURCES.odd	= makefile
@


1.5
log
@check that include files have changed before forcably installing them.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 90/09/07 11:42:27 nick Exp $
d23 6
a28 16
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif

  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif
d61 4
a85 4

#	$(TCP) codes.h $(INCLUDE)
#	$(TCP) errno.h $(INCLUDE)
#	$(TCP) signal.h $(INCLUDE)
@


1.4
log
@installdef code fixed to cope with empty $(LIB)
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 90/09/05 14:37:30 nick Exp Locker: nick $
d82 9
a90 3
	$(TCP) codes.h $(INCLUDE)
	$(TCP) errno.h $(INCLUDE)
	$(TCP) signal.h $(INCLUDE)
d92 4
@


1.3
log
@compile of gencodes was also wrong
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 90/09/05 14:24:19 nick Exp Locker: nick $
d87 1
a87 2
installdef: fault.def
	$(CP) $^ $(LIB)
d89 7
@


1.2
log
@buglet in compile line for squash
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/09/05 13:22:26 nick Exp Locker: nick $
d179 1
a179 1
	$(HOSTCC) -o$@@ -DORION $<
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
d186 1
a186 1
	$(HOSTCC) -o$@@ $<
@
