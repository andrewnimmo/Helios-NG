head	1.18;
access;
symbols
	Helios_1_3_1:1.18
	Helios_C40_1_3_Official_Release:1.16
	Alenia_release:1.16
	Helios1_3:1.16
	C40_Field_Test_2:1.16
	C40_Field_Test_R1:1.11
	Helios13_beta:1.11
	Helios1_2_2:1.8
	Helios1_2_2Beta:1.8
	Helios1_2_1:1.8
	Helios1_2:1.8
	V1_2Beta0:1.2;
locks; strict;
comment	@ * @;


1.18
date	93.08.06.12.42.03;	author bart;	state Exp;
branches;
next	1.17;

1.17
date	93.08.05.12.34.47;	author nickc;	state Exp;
branches;
next	1.16;

1.16
date	92.09.15.16.02.01;	author paul;	state Exp;
branches;
next	1.15;

1.15
date	92.09.04.10.41.03;	author nickc;	state Exp;
branches;
next	1.14;

1.14
date	92.09.04.10.01.11;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	92.09.04.10.00.10;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	92.07.27.17.00.14;	author paul;	state Exp;
branches;
next	1.11;

1.11
date	92.06.12.16.21.47;	author nick;	state Exp;
branches;
next	1.10;

1.10
date	92.04.21.10.51.24;	author paul;	state Exp;
branches;
next	1.9;

1.9
date	91.12.12.16.35.50;	author paul;	state Exp;
branches;
next	1.8;

1.8
date	90.11.28.17.30.36;	author nick;	state Exp;
branches;
next	1.7;

1.7
date	90.11.02.16.31.39;	author paul;	state Exp;
branches;
next	1.6;

1.6
date	90.11.01.15.24.42;	author nick;	state Exp;
branches;
next	1.5;

1.5
date	90.10.23.23.47.05;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	90.10.19.11.04.23;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	90.09.25.18.32.12;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.09.18.12.36.45;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.08.28.12.13.21;	author nick;	state Exp;
branches;
next	;


desc
@Syslib private header
@


1.18
log
@Sorting out stack checking options.
@
text
@/*------------------------------------------------------------------------
--                                                                      --
--                     H E L I O S   N U C L E U S                      --
--                     ---------------------------                      --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- syslib/sys.h								--
--                                                                      --
--	System Library header file					--
--                                                                      --
--	Author:  NHG 16/8/87						--
--                                                                      --
------------------------------------------------------------------------*/
/* SccsId:	 %W%	%G%	Copyright (C) 1987, Perihelion Software Ltd.*/
/* $Id: sys.h,v 1.16 1992/09/15 16:02:01 paul Exp $ */

#ifndef __sys_h
#define __sys_h

#include <helios.h>	/* Standard Header */

#define in_syslib 1	/* flag that we are in this module */

/*------------------------------------------------------------------------
-- Stack handling							--
------------------------------------------------------------------------*/
	/* Stack checking within syslib is controlled			*/
	/* by -DSTACKCHECK on the command line, not by -ps1 or similar	*/
	/* pragmas. Note that there is special code within pipe.c for	*/
	/* some processors.						*/
#if defined(STACKCHECK)
# pragma -s0
#else
# pragma -s1
#endif

#if defined(__TRAN)
# pragma -f0
#endif

/*--------------------------------------------------------
-- 		     Include Files			--
--------------------------------------------------------*/

#include <syslib.h>
#include <gsp.h>
#include <codes.h>
#include <string.h>

#define memclr(p,n) memset(p,0,n)

/* Option bits for CheckObject and CheckStream */

#define C_ReOpen	0x10	/* ReOpen pseudo streams 	*/
#define C_Locate	0x10	/* locate pseudo object		*/
#define C_Close		0x20	/* prepare for close		*/

/* Safety margin on memory allocation for Object and Stream	*/
/* structures, this allows the pathname to grow by the given	*/
/* amount.							*/

#define SafetyMargin	32

/*--------------------------------------------------------
--		Public Data Definitions 		--
--------------------------------------------------------*/

extern Task		*MyTask;			/* pointer to Task */

/* The type modifier STATIC indicates that this is a variable		   */
/* which is accessed from other files in this library, but is not exported */
/* outside the library.							   */

# define STATIC

typedef struct
{
	MCB	mcb;
	word	size;
	word 	control[IOCMsgMax]; 
	byte 	data[IOCDataMax];
} MsgBuf;


extern	Semaphore	BufLock;	/* lock on IOC buffer		*/
extern	MsgBuf		*IOCBuf;	/* IOC message buffer		*/
extern	Semaphore	ObjectLock;	/* lock on Object list		*/
extern	List		Objects; 	/* list of Objects		*/
extern	Semaphore	StreamLock;	/* lock on Stream list		*/
extern	List		Streams;	/* list of Streams		*/
extern	bool		Terminating;	/* TRUE if program is quitting	*/
extern Capability	DefaultCap;	/* Default capability		*/

/* Routines which are private to the library, but which are called	*/
/* from other files must be defined as static, but any prototypes must	*/
/* be extern.								*/

#ifndef _in_misc
extern MCB *NewMsgBuf(int dsize);
extern void FreeMsgBuf( MCB *mcb );
extern void AddObject(Object *o);
extern void AddStream(Stream *s);
extern WORD CheckObject(Object *obj, word options);
extern WORD CheckStream(Stream *str, word options);
extern WORD StreamMsg(MCB *mcb, Stream *stream);
extern WORD IOCMsg(MCB *m, void *data);
#endif

#ifndef _in_ioc
extern bool SetupStream( Stream *stream, MCB *mcb );
#endif

#ifndef _in_pipe
extern word PipeClose(Stream *s);
extern void PipeAbort(Stream *s);
extern word PipeRead(Stream *s, byte *buffer, word size, word timeout);
extern word PipeWrite(Stream *s, byte *buffer, word size, word timeout);
extern word PipeSize(Stream *s);
extern Port PipeSelect(Stream *s, word mode);
#endif

#ifdef SYSDEB
#define SysDebug(flg) if(MyTask->Flags&(Task_Flags_##flg##|Task_Flags_info))_SysDebug
#ifdef _in_misc
static void _SysDebug(char *str, ... );
#else
extern void _SysDebug(char *str, ... );
#endif
#endif

#ifdef __TRAN
# define returnlink_(x) (((word *)(&(x)))[-2])
#else
# ifdef __C40
#  define returnlink_(x)	NULL
# else
#  define returnlink_(x)	NULL
# endif
#endif

#define progname_ ((char *)(MyTask->TaskEntry)+8)

#ifdef PRIVATE
#undef PRIVATE
#endif

#define PRIVATE

PRIVATE char *	  procname( VoidFnPtr );
PRIVATE bool	  CopyPipe( Stream *, Stream * );	  
PRIVATE word	  CloseStream( Stream * stream );
PRIVATE word	  FindPorts(Stream *s, word fn, Port *server, Port *reply);

#endif /* __sys_h */

/* end of sys.h */
@


1.17
log
@re-enabled stack checking for C40s (it had been turned off !)
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.16 1992/09/15 16:02:01 paul Exp nickc $ */
d26 13
d40 1
a40 8
#  pragma -s1		/* switch off stack checking	*/
#  pragma -f0		/* switch off vector stack	*/
#elif defined (__ARM)
#  pragma no_check_stack
#elif defined (__C40)
#pragma check_stack	/* STACK CHECKING IS REQUIRED FOR C40s */
#else
#  error "Pragma required to turn off stack checking"
@


1.16
log
@added req. prototype and fixed ARM prototype
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.15 1992/09/04 10:41:03 nickc Exp $ */
d26 1
a26 1
#if defined(__TRAN) || defined(__C40)
d31 2
@


1.15
log
@added missing prototypes
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.14 1992/09/04 10:01:11 nickc Exp nickc $ */
d113 1
d131 1
a131 2
void *_linkreg(void);
#  define returnlink_(x)	_linkreg(x)
@


1.14
log
@fixed prototype for procname()
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.13 1992/09/04 10:00:10 nickc Exp nickc $ */
d137 10
a146 2
extern word	  procname( word );
extern int	  CopyPipe( Stream *, Stream * );	  
@


1.13
log
@added prototypes for procname() and CopyPipe()
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.12 1992/07/27 17:00:14 paul Exp nickc $ */
d137 1
a137 1
extern void	  procname( word );
@


1.12
log
@updated for procname on C40
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.11 1992/06/12 16:21:47 nick Exp paul $ */
d136 3
@


1.11
log
@extern for DefaultCap added.
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.10 1992/04/21 10:51:24 paul Exp nick $ */
d125 1
a125 1
#  define returnlink_(x) (((word *)(&(x)))[-2])
d127 3
d131 2
a132 1
#  define returnlink_(x) (_linkreg()) /* return pointer to callers code */
@


1.10
log
@fixed for generic processor version
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.9 1991/12/12 16:35:50 paul Exp $ */
d86 1
a86 1

@


1.9
log
@minor change for c40
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.8 90/11/28 17:30:36 nick Exp $ */
d19 3
d29 1
a29 1
#elif defined (__HELIOSARM)
d68 1
a68 1
#define STATIC
d78 1
a78 1
#ifdef __HELIOSARM
a79 1

a80 1

a81 1
			
a82 1

a83 1
			
a84 1

a86 1
#endif
d124 2
a125 2
#ifdef __HELIOSTRAN
#define returnlink_(x) (((word *)(&(x)))[-2])
d128 1
a128 1
#define returnlink_(x) (_linkreg()) /* return pointer to callers code */
d133 1
d135 1
@


1.8
log
@bugs introduced by previous fix to SetupStream fixed
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.7 90/11/02 16:31:39 paul Exp $ */
d23 3
a25 3
#ifdef __TRAN
#pragma	-s1		/* switch off stack checking	*/
#pragma -f0		/* switch off vector stack	*/
d27 1
a27 1
#pragma no_check_stack
d29 1
a29 1
#error "Pragma required to turn off stack checking"
@


1.7
log
@created returnlink_() macro for ARM
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.6 90/11/01 15:24:42 nick Exp Locker: paul $ */
d108 1
a108 1
extern void SetupStream( Stream *stream, MCB *mcb );
@


1.6
log
@Terminating flag added.
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.4 90/10/19 11:04:23 nick Exp $ */
d128 1
d130 5
@


1.5
log
@*** empty log message ***
@
text
@d17 1
a17 11
/* $Id: sys.h,v 1.4 90/10/19 11:04:23 nick Exp $
 *
 * $Log:	sys.h,v $
 * Revision 1.4  90/10/19  11:04:23  nick
 * safety margin added
 * 
 * Revision 1.3  90/09/25  18:32:12  paul
 * arm changes
 * 
 *
 */
d76 1
a76 1
extern Semaphore	BufLock;			/* lock on IOC buffer */
d78 1
a78 1
extern MsgBuf		*IOCBuf;			/* IOC message buffer */
d80 1
a80 1
extern	Semaphore	ObjectLock;			/* lock on Object list */
d82 1
a82 1
extern List		Objects; 			/* list of Objects */
d84 1
a84 1
extern	Semaphore	StreamLock;			/* lock on Stream list */
d86 4
a89 1
extern	List		Streams;			/* list of Streams */
d127 4
@


1.4
log
@safety margin added
@
text
@d17 1
a17 1
/* $Id: sys.h,v 1.3 90/09/25 18:32:12 paul Exp Locker: nick $
d20 3
@


1.3
log
@arm changes
@
text
@d17 1
a17 1
/* $Id$
d19 4
a22 1
 * $Log$
d55 6
@


1.2
log
@log removed
@
text
@d17 5
a21 1
/* $Id$ */
d73 1
a73 1
#if 0
@


1.1
log
@Initial revision
@
text
@d17 1
a17 5
/* $Id$
 *
 * $Log$
 *
 */
@
