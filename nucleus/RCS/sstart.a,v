head	1.8;
access;
symbols
	Helios_1_3_1:1.8
	Helios_C40_1_3_Official_Release:1.8
	Alenia_release:1.8
	Helios1_3:1.8
	C40_Field_Test_2:1.8
	C40_Field_Test_R1:1.5
	Helios13_beta:1.5
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.3
	Helios1_2_1:1.3
	Helios1_2:1.3
	V1_2Beta0:1.2;
locks; strict;


1.8
date	92.09.15.16.01.20;	author paul;	state Exp;
branches;
next	1.7;

1.7
date	92.09.04.09.21.02;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	92.07.21.15.35.11;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	92.06.17.10.11.57;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	92.04.16.00.43.16;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.09.25.18.21.40;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	90.09.05.13.04.04;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.08.28.13.09.12;	author nick;	state Exp;
branches;
next	;


desc
@Server startup code
@


1.8
log
@updated for new arm gasm
@
text
@--------------------------------------------------------------------------
--                                                                      --
--                      H E L I O S   K E R N E L                       --
--                      -------------------------                       --
--                                                                      --
--             Copyright (C) 1987, Perihelion Software Ltd.             --
--                        All Rights Reserved.                          --
--                                                                      --
-- sstart.a								--
--                                                                      --
--	Startup code for C server					--
--                                                                      --
--	Author:  NHG 28/7/87						--
--	ARM/C40 updates PAB Dec '91					--
--                                                                      --
--------------------------------------------------------------------------
rcsid[ $Id: sstart.a,v 1.7 1992/09/04 09:21:02 nickc Exp $ ]

include basic.m
include procs.m
include structs.m
include debug.m
include module.m
include tasks.m
include message.m
_if _defp 'helios.arm [
	include arm.m
]

	-- Program structure

	StartProgram SStart -1 1001

.stacksize:
	_test _defp 'helios.TRAN [
		word	#2000			-- stacksize
		word 	#1000			-- heap size
	][
		word	2000			-- stacksize
		word 	1000			-- heap size
	]
	_test _defp 'helios.C40 [
		word	(.Server << 2)	-- need byte offset
	][
		word	.Server
	]

--	sccsid [ %W% %G% Copyright (C) 1987, Perihelion Software Ltd.]


----------------------------------------------------------
-- Server						--
--							--
-- entry point						--
--							--
----------------------------------------------------------

_test _defp 'helios.arm
[
	Function Server

	-- update syslib static data pointer with Task pointer
	-- task pointer passed as first arg to this code.
	patchinstr(patcharmdt, datamodule(_MyTask),
		ldr	ip,(dp,#0))		-- module of MyTask
	patchinstr(patcharmdt, datasymb(_MyTask),
		str	a1,(ip,#0))		-- save arg1 (Task*) in MyTask

.main:	
	patchinstr(patcharmdt, datamodule(_main),
		ldr	ip,(dp,#0))		-- module of main
	patchinstr(patcharmdt, codesymb(_main),
		ldr	ip,(ip,#0))		-- pointer to main
		mov	pc,ip			-- enter main
][
	_test _defp 'helios.TRAN [
		-- Transputer code
		procsym .Server
	.Server:
	--Mark
		ajw -2				-- space for display

		ldl 3
		stl 0				-- modtab to display

		ldl 4 				-- set static task pointer
		ldl 0
		ldnl 0
		ldnl @@_MyTask
		stnl _MyTask

		ldlp 0				-- current stack posn
		ldc .stacksize-2
		ldpi
		ldnl 0				-- get stack size
		sub				-- subtract from present pos
		ldnlp 10			-- allow for linkage + safety
		stl 1				-- set vector pointer


		ldlp 0				-- display address
	--Regs
		call .main

		-- a return from main will terminate the process
		-- (see TaskInit)
		ajw 2
		ret

	.main:	
		ldl 1				-- display
		ldnl 0				-- module table
		ldnl @@_main			-- module of main
		ldnl _main			-- get pointer to main
		gcall				-- enter
	][
		_test _defp 'helios.C40 [

		Function Server
			-- update syslib static data pointer with Task pointer
			-- task pointer passed as first arg to this code.
			PutStaticDataWord R_A1 MyTask

			_test _true [ -- codestub support
				-- @@@@@@ should be updated when asm support
				-- for external labels added.
				patchinstr(PATCHC40MASK24ADD,
					shift(-2, codestub(.main)),
					br	0)
					global .main
					ref _main
			][ -- old style externs thru modtab support
				-- jump to main function through the modtab
				ExternBranch main
			]
		][
			_report ['Error 'Unknown 'processor 'type]
			'Error "'Unknown 'processor 'type"
		]
	]
]

	EndModule


-- End of sstart.a
@


1.7
log
@fixed to cope with new way of generating new style calling stubs
@
text
@d17 1
a17 1
rcsid[ $Id: sstart.a,v 1.6 1992/07/21 15:35:11 paul Exp nickc $ ]
d20 1
a20 3
_test _defp 'helios.arm
	[include munge.m]
	[include procs.m]
d26 3
d32 1
a32 3
_test _defp 'helios.arm
	[StartProgram SStart undef 1001]
	[StartProgram SStart -1 1001]
d42 2
a43 2
	_test _defp 'helios.arm [
		.patch_word [labelref .Server]
d45 1
a45 5
		_test _defp 'helios.C40 [
			word	(.Server << 2)	-- need byte offset
		][
			word	.Server
		]
d60 2
a61 2
	procsym ['Server]
.Server:
d64 4
a67 4
	.patch_armdt [datamodule _MyTask]
	ldr	ip,(dp,#0)		-- module of MyTask
	.patch_armdt [datasymb _MyTask]
	str	a1,(ip,#0)		-- save arg1 (Task*) in MyTask
d70 5
a74 7
	.patch_armdt [datamodule _main]
	ldr	ip,(dp,#0)		-- module of main
	_test _defp '__SMT
		[.patch_armdt [codesymb _main]]
		[.patch_armdt [datasymb _main]]
	ldr	ip,(ip,#0)		-- pointer to main
	mov	pc,ip			-- enter main
d138 1
a138 1
			'Error 'Unknown 'processor 'type
@


1.6
log
@added codestub support for C40
@
text
@d17 1
a17 1
rcsid[ $Id: sstart.a,v 1.5 1992/06/17 10:11:57 paul Exp $ ]
d137 2
@


1.5
log
@fixed names passed to procsym
@
text
@d17 1
a17 1
rcsid[ $Id: sstart.a,v 1.4 1992/04/16 00:43:16 paul Exp $ ]
d125 2
a126 3
		-- 'C40 code
			procsym ['Server]
		.Server:
d130 11
a140 3
		.main:
			-- jump to main function through the module table
			ExternBranch main
@


1.4
log
@added c40 support
@
text
@d17 1
a17 1
rcsid[ $Id: sstart.a,v 1.3 90/09/25 18:21:40 paul Exp $ ]
d65 1
a65 1
	procsym ['.Server]
d126 1
a126 1
			procsym ['.Server]
d131 1
a131 1
		.main:	
@


1.3
log
@arm changes
@
text
@d14 1
d17 1
a17 1
rcsid[ $Id$ ]
a30 1
        align
d32 2
a33 21
        [module  undef]
        [module  -1]
.ModStart:
        word    T.Program
     	word    .ModEnd-.ModStart
	_test _defp 'helios.arm
	[
		.asciz "SStart"
		.space 32 - _strsize SStart - 1
	]
        [blkb    31,"SStart" byte 0]
	_test _defp 'helios.arm
		[.patch_word [modnum]]
	        [word    modnum]
	word	1001
	_test _defp 'helios.arm
		[.patch_word [datasymb .MaxData]]
		[word    .MaxData]
        init
	_if _defp 'SMT.arm
		[.patch_word [codesymb .MaxCodeP]]
d36 4
a39 2
	_test _defp 'helios.arm
	[
d43 8
a50 3
	[
		word	#2000			-- stacksize
		word 	#1000			-- heap size
a51 3
	_test _defp 'helios.arm
		[.patch_word [labelref .Server]]
		[word	.Server]
d55 1
d77 3
a79 3
	_test _defp 'SMT.arm
	[.patch_armdt [codesymb _main]]
	[.patch_armdt [datasymb _main]]
d82 57
a138 40
]
[
	procsym .Server
.Server:
--Mark
	ajw -2				-- space for display

	ldl 3
	stl 0				-- modtab to display

	ldl 4 				-- set static task pointer
	ldl 0
	ldnl 0
	ldnl @@_MyTask
	stnl _MyTask

	ldlp 0				-- current stack posn
	ldc .stacksize-2
	ldpi
	ldnl 0				-- get stack size
	sub				-- subtract from present pos
	ldnlp 10			-- allow for linkage + safety
	stl 1				-- set vector pointer


	ldlp 0				-- display address
--Regs
	call .main

	-- a return from main will terminate the process
	-- (see TaskInit)
	ajw 2
	ret

.main:	
	ldl 1				-- display
	ldnl 0				-- module table
	ldnl @@_main			-- module of main
	ldnl _main			-- get pointer to main
	gcall				-- enter
a144 1

@


1.2
log
@*** empty log message ***
@
text
@d51 3
d91 3
a93 1
	.patch_armdt [datasymb _main]
@


1.1
log
@Initial revision
@
text
@d16 1
a16 7
rcsid
[* $Id$
 *
 * $Log$
 *
 *]

@
