head	1.3;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.3
date	93.08.12.10.29.14;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.16.50.35;	author al;	state Exp;
branches;
next	1.1;

1.1
date	91.03.07.15.51.39;	author martyn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fixed compile time warnings
@
text
@/*
 * Copyright (c) 1981 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifdef lint
static char sccsid[] = "@@(#)mvwin.c	5.3 (Berkeley) 6/30/88";
#endif /* not lint */

# include	"curses.ext"

extern void _swflags_(register WINDOW * win );
extern void _set_subwin_( register WINDOW * orig, register WINDOW * win );  

  
/*
 * relocate the starting position of a window
 *
 */

int mvwin(
	  reg WINDOW	*win,
	  reg int	by,
	  reg int	bx )
{

	register WINDOW	*orig;
	register int	dy, dx;

	if (by + win->_maxy > LINES || bx + win->_maxx > COLS)
		return ERR;
	dy = by - win->_begy;
	dx = bx - win->_begx;
	orig = win->_orig;
	if (orig == NULL) {
		orig = win;
		do {
			win->_begy += dy;
			win->_begx += dx;
			_swflags_(win);
			win = win->_nextp;
		} while (win != orig);
	}
	else {
		if (by < orig->_begy || win->_maxy + dy > orig->_maxy)
			return ERR;
		if (bx < orig->_begx || win->_maxx + dx > orig->_maxx)
			return ERR;
		win->_begy = by;
		win->_begx = bx;
		_swflags_(win);
		_set_subwin_(orig, win);
	}
	touchwin(win);
	return OK;
}
@


1.2
log
@Made to conform to ANSI standard
@
text
@d18 1
a18 1
#ifndef lint
d24 4
d33 5
a37 3
int mvwin(win, by, bx)
reg WINDOW	*win;
reg int		by, bx; {
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
mvwin(win, by, bx)
@
