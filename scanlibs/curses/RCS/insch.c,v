head	1.4;
access;
symbols
	Helios_1_3_1:1.4
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.3
	Helios1_3:1.3
	C40_Field_Test_2:1.3
	C40_Field_Test_R1:1.3
	Helios13_beta:1.3
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.3
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.4
date	93.08.12.10.22.40;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	91.05.03.18.27.46;	author paul;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.16.50.35;	author al;	state Exp;
branches;
next	1.1;

1.1
date	91.03.07.15.51.36;	author martyn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@fixed compile time warnings
@
text
@/*
 * Copyright (c) 1981 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifdef lint
static char sccsid[] = "@@(#)insch.c	5.3 (Berkeley) 6/30/88";
#endif /* not lint */

# include	"curses.ext"

/*
 *	This routine performs an insert-char on the line, leaving
 * (_cury,_curx) unchanged.
 *
 */
int winsch(reg WINDOW	*win, char c)
{

	reg char	*temp1, *temp2;
	reg char	*end;

	end = &win->_y[win->_cury][win->_curx];
	temp1 = &win->_y[win->_cury][win->_maxx - 1];
	temp2 = temp1 - 1;
	while (temp1 > end)
		*temp1-- = *temp2--;
	*temp1 = c;
	touchline(win, win->_cury, win->_curx, win->_maxx - 1);
	if (win->_cury == LINES - 1 && win->_y[LINES-1][COLS-1] != ' ')
	  {
		if (win->_scroll) {
			wrefresh(win);
			scroll(win);
			win->_cury--;
		}
		else
			return ERR;
	      }	
	return OK;
}
@


1.3
log
@ansified!
@
text
@d18 1
a18 1
#ifndef lint
d43 1
d51 1
@


1.2
log
@Made to conform to ANSI standard
@
text
@d29 2
a30 3
int winsch(win, c)
reg WINDOW	*win;
char		c; {
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
winsch(win, c)
@
