head	1.3;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2;
locks; strict;
comment	@ * @;


1.3
date	93.08.12.10.46.10;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	91.03.08.15.03.27;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	91.03.07.15.51.55;	author martyn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fixed compile time warnings
@
text
@/*
 * Copyright (c) 1981 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifdef lint
static char sccsid[] = "@@(#)tstp.c	5.3 (Berkeley) 6/30/88";
#endif /* not lint */

# include	<signal.h>

# include	"curses.ext"
extern void mvcur( int, int, int, int );

/*
 * handle stop and start signals
 *
 * @@(#)tstp.c	5.3 (Berkeley) 6/30/88
 */
#ifdef __STDC__ /*___HELIOS*/
 void tstp(int dummy)
#else
 tstp()
#endif
{
# ifdef SIGTSTP

	SGTTY	tty;
	int	omask;
# ifdef DEBUG
	if (outf)
		fflush(outf);
# endif
	tty = _tty;
	mvcur(0, COLS - 1, LINES - 1, 0);
	endwin();
	fflush(stdout);
	/* reset signal handler so kill below stops us */
	signal(SIGTSTP, SIG_DFL);
#define	mask(s)	(1 << ((s)-1))
	omask = sigsetmask(sigblock(0) &~ mask(SIGTSTP));
	kill(0, SIGTSTP);
	sigblock(mask(SIGTSTP));
	signal(SIGTSTP, tstp);
	_tty = tty;
	stty(_tty_ch, &_tty);
	wrefresh(curscr);
# endif	/*SIGTSTP*/
}
@


1.2
log
@fixed to compile for ARM, access FILE structure sensibly and fix bad SetAttribute
@
text
@d18 1
a18 1
#ifndef lint
d25 1
@


1.1
log
@Initial revision
@
text
@d31 6
a36 2
tstp() {

d59 1
a59 1
# endif	SIGTSTP
@
