head	1.3;
access;
symbols
	Helios_1_3_1:1.3
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.1;
locks; strict;
comment	@ * @;


1.3
date	93.08.12.10.36.16;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	91.04.22.16.50.35;	author al;	state Exp;
branches;
next	1.1;

1.1
date	91.03.07.15.51.41;	author martyn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@fixed compile time warnings
@
text
@/*
 * Copyright (c) 1981 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the University of California, Berkeley.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifdef lint
static char sccsid[] = "@@(#)printw.c	5.4 (Berkeley) 6/30/88";
#endif /* not lint */

/*
 * printw and friends
 *
 */

# include	"curses.ext"
# ifdef __STDC__
# include	<stdarg.h>
# endif

/*
 *	This routine implements a printf on the standard screen.
 */
#ifdef __STDC__
int	printw(char *fmt, ...)
#else
int	printw(fmt, args)
char	*fmt;
int	args;
#endif
{

	char	buf[512];
# ifdef __STDC__
	va_list ap;

	va_start(ap,fmt);
	(void) vsprintf(buf, fmt, ap);
	va_end(ap);
# else
	(void) vsprintf(buf, fmt, &args);
# endif
	return waddstr(stdscr, buf);
}

/*
 *	This routine implements a printf on the given window.
 */
#ifdef __STDC__
int	wprintw(WINDOW *win, char *fmt, ...)
#else
int	wprintw(win, fmt, args)
WINDOW	*win;
char	*fmt;
int	args;
#endif
{

	char	buf[512];
# ifdef __STDC__
	va_list ap;

	va_start(ap,fmt);
	(void) vsprintf(buf, fmt, ap);
	va_end(ap);
# else
	(void) vsprintf(buf, fmt, &args);
# endif
	return waddstr(win, buf);
}
@


1.2
log
@Made to conform to ANSI standard
@
text
@d18 1
a18 1
#ifndef lint
@


1.1
log
@Initial revision
@
text
@d29 1
a29 1
# include	"stdarg.h"
d35 4
a38 1
printw(fmt, args)
d40 3
a42 1
int	args; {
d60 4
a63 1
wprintw(win, fmt, args)
d66 3
a68 1
int	args; {
@
