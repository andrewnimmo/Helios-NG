head	1.4;
access;
symbols
	Helios_1_3_1:1.4
	Helios_C40_1_3_Official_Release:1.3
	Alenia_release:1.2
	Helios1_3:1.2
	C40_Field_Test_2:1.2
	C40_Field_Test_R1:1.2
	Helios13_beta:1.2
	Helios1_2_2:1.2
	Helios1_2_2Beta:1.2
	Helios1_2_1:1.2
	Helios1_2:1.2
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.4
date	93.07.09.12.59.02;	author nickc;	state Exp;
branches;
next	1.3;

1.3
date	93.04.20.08.54.55;	author nickc;	state Exp;
branches;
next	1.2;

1.2
date	90.09.25.20.03.48;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.39.26;	author nick;	state Exp;
branches;
next	;


desc
@BSD signal routines
@


1.4
log
@fixed conflcits with C++
@
text
@/* $Id: signal.c,v 1.3 1993/04/20 08:54:55 nickc Exp nickc $ */
#include <sys/types.h>
#include <signal.h>
#include <errno.h>

typedef  void		(*VoidFnPtr)();
typedef  int		(*IntFnPtr)();

extern int errno;

extern int sigvec(int sig, struct sigvec *vec, struct sigvec *ovec)
{
	int e;
	struct sigaction New,old;
	
	if( vec )
	{
		New.sa_handler = (VoidFnPtr)(vec->sv_handler);
		New.sa_mask = vec->sv_mask;
		New.sa_flags = 0;
	}
	
	e = sigaction(sig,vec ? &New : NULL, ovec ? &old : NULL);
	
	if( e==0 && ovec )
	{
		ovec->sv_handler = (IntFnPtr)old.sa_handler;
		ovec->sv_mask = (int)old.sa_mask;
		ovec->sv_onstack = 0;
	}
	
	return e;
}

extern int sigblock(int mask)
{
	sigset_t set,oset;
	set = (sigset_t)mask;
	sigprocmask(SIG_BLOCK,&set,&oset);
	return (int)oset;
}

extern int sigsetmask(int mask)
{
	sigset_t set,oset;
	set = (sigset_t)mask;
	sigprocmask(SIG_SETMASK,&set,&oset);
	return (int)oset;
}

extern int sigpause(int mask)
{
	return sigsuspend((sigset_t *)&mask);
}

extern int sigstack(struct sigstack *ss,struct sigstack *oss)
{
	errno = EFAULT;
	return -1;
}
@


1.3
log
@fixed compile time warnings
@
text
@d1 1
a1 1
/* $Id: signal.c,v 1.2 1990/09/25 20:03:48 paul Exp nickc $ */
d14 1
a14 1
	struct sigaction new,old;
d18 3
a20 3
		new.sa_handler = (VoidFnPtr)(vec->sv_handler);
		new.sa_mask = vec->sv_mask;
		new.sa_flags = 0;
d23 1
a23 1
	e = sigaction(sig,vec?&new:NULL,ovec?&old:NULL);
@


1.2
log
@arm changes and new portable alloca routine.
@
text
@d1 1
a1 1
/* $Id: signal.c,v 1.1 90/09/05 13:39:26 nick Exp $ */
d28 1
a28 1
		ovec->sv_mask = old.sa_mask;
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $Id$ */
d6 3
d18 1
a18 1
		new.sa_handler = vec->sv_handler;
d27 1
a27 1
		ovec->sv_handler = old.sa_handler;
@
