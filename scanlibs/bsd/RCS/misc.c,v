head	1.8;
access;
symbols
	Helios_1_3_1:1.7
	Helios_C40_1_3_Official_Release:1.6
	Alenia_release:1.5
	Helios1_3:1.5
	C40_Field_Test_2:1.5
	C40_Field_Test_R1:1.5
	Helios13_beta:1.5
	Helios1_2_2:1.5
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.5
	Helios1_2:1.3
	V1_2Beta0:1.2;
locks; strict;
comment	@ * @;


1.8
date	94.03.14.14.35.15;	author nickc;	state Exp;
branches;
next	1.7;

1.7
date	93.07.09.12.58.45;	author nickc;	state Exp;
branches;
next	1.6;

1.6
date	93.04.20.09.06.06;	author nickc;	state Exp;
branches;
next	1.5;

1.5
date	91.02.13.18.07.52;	author paul;	state Exp;
branches;
next	1.4;

1.4
date	91.02.13.14.45.03;	author nick;	state Exp;
branches;
next	1.3;

1.3
date	90.10.02.12.05.35;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.12.16.56.49;	author nick;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.38.05;	author nick;	state Exp;
branches;
next	;


desc
@odds and sods
@


1.8
log
@fixed compile time warnings
@
text
@/* $Id: misc.c,v 1.7 1993/07/09 12:58:45 nickc Exp nickc $ */

#include <unistd.h>
#include <errno.h>
#include <limits.h>
#include <sys/dir.h>
#include <syslib.h>
#include <gsp.h>
#include <sys/time.h>
#include <sys/stat.h>
#include <utime.h>
#include <nonansi.h>
#include <strings.h>

extern int ffs(int i)
{
	int n = 0;
	if( !i ) return -1;
	i = i & -i;
	/* we could use bitcnt here on T800, but T414 does not have it */
	while( i ) n++,i>>=1;
	return n;
}

extern int initgroups(char *name, int basegid)
{
	/* does nowt for now */
	errno = EPERM;
	return -1;
}

extern int setgroups(int ngroups, int *gidset)
{
	errno = EPERM;
	return -1;
}

extern int seteuid(int euid) { return setuid(euid); }
extern int setruid(int ruid) { return setuid(ruid); }
extern int setegid(int egid) { return setgid(egid); }
extern int setrgid(int rgid) { return setgid(rgid); }

extern int setreuid(int ruid, int euid)
{
	if( ruid != -1 ) setuid(ruid);
	if( euid != -1 ) setuid(euid);
	return 0;
}

extern char *getwd(char *path)
{
	return getcwd(path,PATH_MAX);
}

extern long telldir(DIR *dir)
{
	return dir->dd_pos+dir->dd_loc;
}

extern void seekdir(DIR *dir, long pos)
{
	lseek(dir->dd_fd,pos*sizeof(struct dirent),SEEK_SET);
	dir->dd_pos = pos;
	dir->dd_loc = 0;
	dir->dd_size = 0;
}

extern int readlink(char *path, char *buf, int bufsiz)
{
	Link_Info *info = (Link_Info *)Malloc(sizeof(Link_Info)+IOCDataMax);
	word e;
	int cc = -1;
	
	if( info == NULL ) { errno = ENOMEM; return -1;}
	
	e = ObjectInfo(CurrentDir,path,(byte *)info);
	
	if( e < 0 ) { errno = ENOENT; goto done;}
	
	if( (info->DirEntry.Type & ~Type_Flags) != Type_Link )
	{ errno = EINVAL; goto done; }
	
	cc = 17 + strlen(info->Name) + 1;
	
	if( cc > bufsiz ) { cc=-1,errno=ENOENT; goto done; }
	
	DecodeCapability(buf,&info->Cap);
	strcat(buf,info->Name);
	
done:
	Free(info);
	oserr = (int)e;
	return cc;
}

extern int isascii(int c)
{
	return (0 <= c) && (c < 0200);
}

extern int utimes(char *file, struct timeval *tvp)
{
	struct utimbuf times;
	
	times.ctime = 0;
	if( tvp == NULL )
	{
		times.actime = time(0);
		times.modtime = times.actime;
	}
	else
	{
		times.actime  = (int)tvp[0].tv_sec;
		times.modtime = (int)tvp[1].tv_sec;
	}
	
	return utime(file,&times);
}

extern int fchmod(int fd, mode_t mode)
{
	Stream *s = fdstream(fd);
	
	if( s == NULL ) return -1;
	
	return chmod(s->Name,mode);
}
@


1.7
log
@fixed conflicts with C++
@
text
@d1 1
a1 1
/* $Id: misc.c,v 1.6 1993/04/20 09:06:06 nickc Exp nickc $ */
d62 1
a62 1
	lseek(dir->dd_fd,(int)pos*sizeof(struct dirent),SEEK_SET);
@


1.6
log
@fixed compile time warnings
@
text
@d1 1
a1 1
/* $Id: misc.c,v 1.5 1991/02/13 18:07:52 paul Exp nickc $ */
d70 1
a70 1
	Link_Info *info = Malloc(sizeof(Link_Info)+IOCDataMax);
@


1.5
log
@add #include for correct prototype to get past finickity ARM compiler
@
text
@d1 1
a1 1
/* $Id: misc.c,v 1.4 91/02/13 14:45:03 nick Exp $ */
d10 1
d13 1
d62 1
a62 1
	lseek(dir->dd_fd,pos*sizeof(struct dirent),SEEK_SET);
d71 1
a71 1
	int e;
d92 1
a92 1
	oserr = e;
d113 2
a114 2
		times.actime = tvp[0].tv_sec;
		times.modtime = tvp[1].tv_sec;
@


1.4
log
@setreuid, utimes and fchmod added
@
text
@d1 1
a1 1
/* $Id: misc.c,v 1.3 90/10/02 12:05:35 nick Exp $ */
d11 1
@


1.3
log
@isascii() added
@
text
@d1 2
a2 1
/* $Id$ */
d9 2
d40 6
d96 28
@


1.2
log
@set[er][ug]id now call posix set[ug]id as apropriate
@
text
@d1 1
a1 1
/* $Id: misc.c,v 1.1 90/09/05 13:38:05 nick Exp Locker: nick $ */
d82 5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $Id$ */
d32 4
a35 4
extern int seteuid(int euid) { return 0; }
extern int setruid(int ruid) { return 0; }
extern int setegid(int egid) { return 0; }
extern int setrgid(int rgid) { return 0; }
@
