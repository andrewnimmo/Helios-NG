head	1.14;
access;
symbols
	Helios_1_3_1:1.12
	Helios_C40_1_3_Official_Release:1.12
	Alenia_release:1.12
	Helios1_3:1.12
	C40_Field_Test_2:1.11
	C40_Field_Test_R1:1.9
	Helios13_beta:1.9
	Helios1_2_2:1.9
	Helios1_2_2Beta:1.9
	Helios1_2_1:1.9
	Helios1_2:1.6
	V1_2Beta0:1.1;
locks; strict;
comment	@# @;


1.14
date	94.05.12.11.34.01;	author nickc;	state Exp;
branches;
next	1.13;

1.13
date	94.05.10.15.56.15;	author nickc;	state Exp;
branches;
next	1.12;

1.12
date	92.10.25.15.29.02;	author nickc;	state Exp;
branches;
next	1.11;

1.11
date	92.08.17.10.33.20;	author paul;	state Exp;
branches;
next	1.10;

1.10
date	92.08.04.16.55.18;	author bart;	state Exp;
branches;
next	1.9;

1.9
date	91.03.25.12.55.24;	author nickc;	state Exp;
branches;
next	1.8;

1.8
date	91.02.28.17.54.02;	author martyn;	state Exp;
branches;
next	1.7;

1.7
date	91.02.13.14.48.19;	author nick;	state Exp;
branches;
next	1.6;

1.6
date	90.11.26.19.53.51;	author paul;	state Exp;
branches;
next	1.5;

1.5
date	90.11.16.15.53.21;	author nick;	state Exp;
branches;
next	1.4;

1.4
date	90.10.30.10.37.23;	author paul;	state Exp;
branches;
next	1.3;

1.3
date	90.10.02.13.40.59;	author nick;	state Exp;
branches;
next	1.2;

1.2
date	90.09.25.20.03.20;	author paul;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.40.44;	author nick;	state Exp;
branches;
next	;


desc
@@


1.14
log
@improved scanned library creation rule
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: bsd
#
# File: /HSRC/scanlibs/bsd/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# RcsId: $Id: makefile,v 1.13 1994/05/10 15:56:15 nickc Exp nickc $
#		(C) Copyright 1990 Perihelion Software
#	(C) Copyright 1994 Perihelion Distributed Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = scanlibs/bsd

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
HVPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
HVPATH := $(HSRC)/$(COMPONENT)/$(HPROC):$(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):/$(RSRC)/$(COMPONENT)
endif

vpath %.h $(HVPATH)
vpath %.a $(HVPATH)
vpath %.c $(HVPATH)

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = bsd.lib

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(LIB)
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install Xinstall *.ghof fred


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)
LOBJECTS = $(patsubst %,-l%,$(OBJECTS))
GOBJECTS = $(OBJECTS:.o=.o.ghof)

# C source files
SOURCES.c	= getopt.c inetaddr.c inetnet.c inetntoa.c popen.c \
		  string.c signal.c errlist.c syslog.c misc.c fileio.c \
		  que.c ioctl.c inet.c alloca.c	rwv.c rexec.c rcmd.c \
		  ruserpass.c putenv.c

# AMPP source files
SOURCES.a	= 

# C header files
HEADERS.c	=

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile spec needed mkerrlst.c


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1 -D_BSD

ifeq ($(HPROC),C40)
  NCFLAGS := $(NCFLAGS) -Zpl0		# prevent few_modules option, it stops the X library working
endif

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

bsd.lib: $(OBJECTS)
ifeq ($(HPROC),TRAN)
	$(LINK) $(LINKFLAGS) -p -o bsd.lib $(OBJECTS)
else
	@@ echo Creating scanned library $@@ ...
  ifeq ($(COMPILER_TYPE),ARMLtd)
	@@ $(LINK) $(LOBJECTS) -o fred
	@@ cat $(GOBJECTS) > $@@
  else
	@@ cat $^ > $@@
  endif
endif
ifeq ($(HHOST),HELIOSTRAN)
	$(RM) /helios/lib/bsd.lib
	$(CP) bsd.lib /helios/lib/bsd.lib
endif

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.13
log
@fixed library creation to cope with ARM Ltd library
@
text
@d13 1
a13 2
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.12 1992/10/25 15:29:02 nickc Exp nickc $
d15 1
d137 1
d139 2
a140 2
	$(LINK) $(LOBJECTS) -o fred
	cat $(GOBJECTS) > bsd.lib
d142 1
a142 1
	cat $(OBJECTS) > bsd.lib
@


1.12
log
@fixed to compile without the -Zpl1 option on a C40
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.11 1992/08/17 10:33:20 paul Exp nickc $
d82 1
a82 1
		core ../mkout install Xinstall
d95 2
d137 4
d142 1
@


1.11
log
@removed cppflags
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.10 1992/08/04 16:55:18 bart Exp $
d121 3
@


1.10
log
@Fixed for remote source
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.9 1991/03/25 12:55:24 nickc Exp $
d119 1
a119 1
NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1
a120 1
CPPFLAGS := $(CPPFLAGS) -D_BSD
@


1.9
log
@added putenv.c to list of sources
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.8 1991/02/28 17:54:02 martyn Exp nickc $
d58 1
a58 1
VPATH := $(HSRC)/$(COMPONENT)
d61 1
a61 1
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(VPATH):$(RSRC)/$(COMPONENT)
d63 4
@


1.8
log
@moved bsd from helios root to scanlibs directory
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.7 91/02/13 14:48:19 nick Exp Locker: martyn $
d96 1
a96 1
		  ruserpass.c
@


1.7
log
@ruserpass.c added
@
text
@d6 1
a6 1
# File: /HSRC/bsd/makefile
d14 1
a14 1
# RcsId: $Id: makefile,v 1.6 90/11/26 19:53:51 paul Exp Locker: nick $
d43 1
a43 1
COMPONENT = bsd
d132 2
a133 2
	$(RM) /lib/bsd.lib
	$(CP) bsd.lib /lib/bsd.lib
@


1.6
log
@got rid of installdef target that was causing spurious install copies.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.5 90/11/16 15:53:21 nick Exp Locker: paul $
d95 2
a96 1
		  que.c ioctl.c inet.c alloca.c	rwv.c rexec.c rcmd.c
@


1.5
log
@rexec and rcmd added
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 90/10/30 10:37:23 paul Exp Locker: nick $
a52 1
# "installdef" - If component is a library, make .def file and install in LIB
d72 1
a72 1
install	: installdef $(TARGETS) Xinstall
a75 4
installdef:	# If this is a library, enter all .def files here (to install)
#	$(CP) $^ $(LIB)
#	$(TOUCH) installdef

d78 1
a78 1
		core ../mkout install installdef Xinstall
@


1.4
log
@Updated sources.odd to include spec and mkerrlst.c
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 90/10/02 13:40:59 nick Exp Locker: paul $
d100 1
a100 1
		  que.c ioctl.c inet.c alloca.c	rwv.c
@


1.3
log
@now uses DFLT.mak for default settings and RSRC for remote sources
@
text
@d14 1
a14 1
# RcsId: $Id$
d112 1
a112 1
SOURCES.odd	= makefile
@


1.2
log
@arm changes and new portable alloca routine.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/09/05 13:40:44 nick Exp $
d23 6
a28 12
  # These variables should already be set by your make script or environment.
  ifndef HPROC
    HPROC = TRAN
  endif

  ifndef HHOST
    HHOST = ORION
  endif

  ifndef HSRC
    HSRC = /usr/perihelion/Helios
  endif
a29 4
  ifndef HPROD
    HPROD = $(HSRC)/slashhelios/$(HPROC)
  endif

d61 4
a96 4
# Transputer uses a custom written version of alloca.
# Other people use a portable version of alloca (distributed with gnu make)
# Transputer version is held in its subdirectory and also requires bsdasm.a

d103 1
a103 5
ifeq ($(HPROC),TRAN)
SOURCES.a	= bsdasm.a
else
SOURCES.a	=
endif
d119 1
a119 5
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS) -DSTACK_DIRECTION=-1
else
  NCFLAGS := $(NCFLAGS)
endif
d126 3
d135 4
d142 1
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
a100 3
#Full set of library object files
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
d103 4
d113 1
d115 3
d134 1
a134 1
  NCFLAGS := $(NCFLAGS)
a140 5
# Note any library def files to be linked with
LIBDEFS	:=

LINKFLAGS := $(LINKFLAGS)

a143 3
# uncomment if you have compiler or makedepend generated dependencies
#include depends

d145 5
a149 1
	$(LINK) -p -o bsd.lib $(OBJECTS)	
a152 1

@
