head	1.2;
access;
symbols
	Helios_1_3_1:1.2
	Helios_C40_1_3_Official_Release:1.2
	Alenia_release:1.1
	Helios1_3:1.1
	C40_Field_Test_2:1.1
	C40_Field_Test_R1:1.1
	Helios13_beta:1.1
	Helios1_2_2:1.1
	Helios1_2_2Beta:1.1
	Helios1_2_1:1.1
	Helios1_2:1.1
	V1_2Beta0:1.1;
locks; strict;
comment	@ * @;


1.2
date	93.04.20.09.27.41;	author nickc;	state Exp;
branches;
next	1.1;

1.1
date	90.09.05.13.36.42;	author nick;	state Exp;
branches;
next	;


desc
@miscellaneous internet address manipulation routines
@


1.2
log
@fixed compile time warnings
@
text
@/* $Id: inet.c,v 1.1 1990/09/05 13:36:42 nick Exp nickc $ */
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>

extern int inet_netof(struct in_addr in)
{
	int a = (int)ntohl(in.s_addr);
	if( IN_CLASSA(a) ) return (a&IN_CLASSA_NET)>>IN_CLASSA_NSHIFT;
	if( IN_CLASSB(a) ) return (a&IN_CLASSB_NET)>>IN_CLASSB_NSHIFT;
	if( IN_CLASSC(a) ) return (a&IN_CLASSC_NET)>>IN_CLASSC_NSHIFT;
	return -1;
}

extern int inet_lnaof(struct in_addr in)
{
	int a = (int)ntohl(in.s_addr);
	if( IN_CLASSA(a) ) return (a&IN_CLASSA_HOST);
	if( IN_CLASSB(a) ) return (a&IN_CLASSB_HOST);
	if( IN_CLASSC(a) ) return (a&IN_CLASSC_HOST);
	return -1;
}

extern struct in_addr inet_makeaddr(int net, int lna)
{
	long a;
	struct in_addr in;
	if( net <= 0x7f ) a = ((long)net<<IN_CLASSA_NSHIFT) | lna;
	else if( net <= 0x3fff ) a = 0x80000000 | ((long)net<<IN_CLASSB_NSHIFT) | lna;
	else a = 0xc0000000 | ((long)net<<IN_CLASSC_NSHIFT) | lna;
	in.s_addr = htonl(a);
	return in;
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* $Id$ */
d8 1
a8 1
	long a = ntohl(in.s_addr);
d12 1
d17 1
a17 1
	long a = ntohl(in.s_addr);
d21 1
d28 3
a30 3
	if( net <= 0x7f ) a = (net<<IN_CLASSA_NSHIFT) | lna;
	else if( net <= 0x3fff ) a = 0x80000000 | (net<<IN_CLASSB_NSHIFT) | lna;
	else a = 0xc0000000 | (net<<IN_CLASSC_NSHIFT) | lna;
@
