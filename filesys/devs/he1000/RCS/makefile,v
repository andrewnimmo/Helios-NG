head	1.4;
access;
symbols
	Helios1_3:1.4
	Helios13_beta:1.4
	Helios1_2_2:1.3
	Helios1_2_2Beta:1.3
	Helios1_2_1:1.3;
locks; strict;
comment	@# @;


1.4
date	92.06.26.11.16.17;	author bart;	state Exp;
branches;
next	1.3;

1.3
date	91.03.12.11.02.34;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.03.11.11.41.46;	author martyn;	state Exp;
branches;
next	1.1;

1.1
date	91.03.11.11.41.25;	author martyn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Fixed the clean option, OBJECTS was not being set at all
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: filesys/devs/he1000
#
# File: /HSRC/filesys/devs/he1000/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.3 1991/03/12 11:02:34 martyn Exp bart $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = filesys/devs/he1000

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
VPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = he1000.d

default : $(TARGETS) Xdefault

install	:  $(TARGETS) Xinstall
# add installsources to above line if Hunt ever want their sources
# distributed
	$(CP) $(TARGETS) $(HPROD)/lib
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall


#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

#Full set of library object files
OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
# Or if you are not a library:
#OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	= huntdev.c scsi.c huntcom.c

# AMPP source files
SOURCES.a	= hunts.a modend.a

# C header files
HEADERS.c	= scsi.h huntcom.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
else
  NCFLAGS := $(NCFLAGS) -ps1 -pf0
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/kernel.def $(LIB)/syslib.def $(LIB)/util.def

LINKFLAGS := $(LINKFLAGS) -v -f

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# uncomment if you have compiler or makedepend generated dependencies
#include depends

he1000.d : hunts.p huntdev.p scsi.p huntcom.p modend.p
	$(LINK) $(LINKFLAGS) -n he1000.d -o $@@ $^ $(LIBDEFS)

installsources : $(SOURCES.c) $(SOURCES.a) $(HEADERS.c)
	$(CP) $^ $(HPROD)/local/src/hfs/he1000
	$(CP) example.mkf $(HPROD)/local/src/hfs/he1000/makefile
	$(TOUCH) $@@

#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.3
log
@copy sources to HPROD/local/src, not locally
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/03/11 11:41:46 martyn Exp Locker: martyn $
d94 1
a94 1
#OBJECTS		= $(SOURCES.c:.c=.p) $(SOURCES.a:.a=.p)
@


1.2
log
@install in HPROD rather than locally.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 90/10/17 12:22:37 martyn Exp $
d139 2
a140 2
	$(CP) $^ ../../../$(HPROC)/hfs/devs/he1000
	$(CP) example.mkf ../../../$(HPROC)/hfs/devs/he1000/makefile
@


1.1
log
@Initial revision
@
text
@d76 1
a76 1
	$(CP) $(TARGETS) ../../../$(HPROC)/hfs/lib
@
