head	1.6;
access;
symbols
	Helios1_3:1.6
	Helios13_beta:1.6
	Helios1_2_2:1.6
	Helios1_2_2Beta:1.5
	Helios1_2_1:1.3;
locks; strict;
comment	@# @;


1.6
date	91.10.01.09.42.54;	author martyn;	state Exp;
branches;
next	1.5;

1.5
date	91.05.08.14.11.02;	author al;	state Exp;
branches;
next	1.4;

1.4
date	91.05.08.14.07.13;	author al;	state Exp;
branches;
next	1.3;

1.3
date	91.03.11.11.38.57;	author martyn;	state Exp;
branches;
next	1.2;

1.2
date	91.03.08.11.41.03;	author martyn;	state Exp;
branches;
next	1.1;

1.1
date	90.10.05.16.28.56;	author nick;	state Exp;
branches;
next	;


desc
@@


1.6
log
@added fstring.c (at last !)
@
text
@#-----------------------------------------------------------------------------
# Helios generic make system - GENERIC COMPONENT MAKEFILE -
#-----------------------------------------------------------------------------
# Helios generic component make rules for: filesys/fs
#
# File: /HSRC/filesys/fs/makefile
#
# These are the host/processor independent rules and variables for this
# component of Helios. It is included by the processor specific makefile
# That may add to some of its functionality. You should only alter this
# makefile by using "ifneq ($(HPROC),YYY)" clauses for a specific processor.
#
# SccsId: %W% %G%
# RcsId: $Id: makefile,v 1.5 1991/05/08 14:11:02 al Exp martyn $
#		(C) Copyright 1990 Perihelion Software
#
# WARNING: assumes you are using GNUmake.
#-----------------------------------------------------------------------------

ifndef InProcMake
# This part of the makefile is run in the components generic source directory

# The variables HPROC, HHOST, HSRC, and HPROD should already be set by 
# your make script or environment, if not then get local defaults from
# $(HSRC)/makeinc/DFLT.mak. Note that the following pathname cannot use $(HSRC).
ifndef HPROC
include ../../makeinc/DFLT.mak
endif

.PHONY: notarget
notarget:
	@@$(MAKE) -C $(HPROC)

.DEFAULT:
	@@$(MAKE) -C $(HPROC) $@@

else
#-----------------------------------------------------------------------------
# This part of the makefile is always run in a processor specific subdirectory.

# Manditory variables for a component:
# name of this dir relative to $(HSRC)
COMPONENT = filesys/fs

# Manditory includes
include $(HSRC)/makeinc/$(HHOST).mak	# Default host system variables
include $(HSRC)/makeinc/$(HPROC).mak	# Default processor rules and vars.

# Manditory phoney targets
.PHONY: default clean Xdefault Xclean
# "default"    - should make this component in its proc subdir
# "install"    - copy the new component to $(HPROD) production directory
# "installdef" - If component is a library, make .def file and install in LIB
# "clean"      - remove all intermediate and executable files from proc subdir
# Phoney targets prefixed by X are for adding processor specific targets.
#
# Processor specific sources are held in the processor specific subdir.,
# generic ones in the directory above it.
VPATH := $(HSRC)/$(COMPONENT)

ifdef RSRC
VPATH := $(RSRC)/$(COMPONENT)/$(HPROC):$(HSRC)/$(COMPONENT):$(RSRC)/$(COMPONENT)
endif

#-----------------------------------------------------------------------------
# Generic component make rules and variables added below here

# Note all final generic targets here
TARGETS = fs

default : $(TARGETS) Xdefault

install	: $(TARGETS) Xinstall
	$(CP) $(TARGETS) $(HPROD)/lib
	$(TOUCH) install

clean	: Xclean
	-$(RM)	$(OBJECTS) $(TARGETS) $(XOBJECTS) $(XTARGETS) mkout \
		core ../mkout install installdef Xinstall

#-----------------------------------------------------------------------------
# for archive, backup and cleaning purposes,
# note all generic SOURCE and OBJECT files:

# Note all sources
SOURCES		= $(SOURCES.c) $(SOURCES.a) \
		  $(HEADERS.c) $(HEADERS.m) \
		  $(SOURCES.odd)

OBJECTS	= $(SOURCES.c:.c=.o) $(SOURCES.a:.a=.o)

# C source files
SOURCES.c	= bio.c alloc.c inode.c fsyscall.c deal_fs.c fserver.c \
                  fservlib.c dev.c tserver.c checker.c dircheck.c \
		  xtdcheck.c concheck.c condups.c tidyup.c misc_chk.c \
		  fstring.c

# AMPP source files
SOURCES.a	=

# C header files
HEADERS.c	= nfs.h check.h fservlib.h buf.h fs.h inode.h fstring.h

# AMPP macro files
HEADERS.m	=

# Any other source files
SOURCES.odd	= makefile rdevinfo.c


#-----------------------------------------------------------------------------
# Other generic component variables:

# Set any flags required
ifeq ($(HPROC),ARM)
  NCFLAGS := $(NCFLAGS)
else
  NCFLAGS := $(NCFLAGS) -ps1 -DBUFCSUM
endif

# Note any library def files to be linked with
LIBDEFS	:= $(LIB)/kernel.def $(LIB)/syslib.def $(LIB)/util.def

LINKFLAGS := $(LINKFLAGS) -s20000 -v -f 

#-----------------------------------------------------------------------------
# Generic targets and their dependencies:

# header dependencies

bio.o 		: nfs.h
inode.o 	: nfs.h
tserver.o 	: nfs.h
dev.o 		: nfs.h
fsyscall.o 	: nfs.h
deal_fs.o 	: nfs.h rdevinfo.c
fserver.o 	: nfs.h
alloc.o 	: nfs.h
fservlib.o 	: nfs.h

fstring.o	: fstring.h

checker.o 	: check.h 
dircheck.o 	: check.h
xtdcheck.o 	: check.h
concheck.o 	: check.h
condups.o 	: check.h 
tidyup.o 	: check.h 
misc_chk.o 	: check.h

nfs.h		: fservlib.h buf.h fs.h inode.h
check.h		: nfs.h


# The File Server itself

fs : $(OBJECTS)
	$(LINK) $(LINKFLAGS) $(LIB)/s0.o $(LIBDEFS) $(OBJECTS) -o fs


#-----------------------------------------------------------------------------
endif #InProcMake	# This line must be at EOF

@


1.5
log
@*** empty log message ***
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.4 1991/05/08 14:07:13 al Exp al $
a91 2
POBJECTS = fstring.o

d95 2
a96 1
		  xtdcheck.c concheck.c condups.c tidyup.c misc_chk.c
d102 1
a102 1
HEADERS.c	= nfs.h check.h fservlib.h buf.h fs.h inode.h
d108 1
a108 1
SOURCES.odd	= makefile rdevinfo.c $(POBJECTS)
d141 2
d158 1
a158 1
	$(LINK) $(LINKFLAGS) $(LIB)/s0.o $(LIBDEFS) $(OBJECTS) $(POBJECTS) -o fs
@


1.4
log
@Added  fstring.o with POBJECTS since parsytec gave us the object code but
not the source.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.3 1991/03/11 11:38:57 martyn Exp al $
d109 1
a109 1
SOURCES.odd	= makefile rdevinfo.c
@


1.3
log
@install in HPROD rather than locally.
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.2 91/03/08 11:41:03 martyn Exp Locker: martyn $
a80 1

d92 2
d157 1
a157 1
	$(LINK) $(LINKFLAGS) $(LIB)/s0.o $(LIBDEFS) $(OBJECTS) -o fs
@


1.2
log
@added rdevinfo.c to odd sources
@
text
@d14 1
a14 1
# RcsId: $Id: makefile,v 1.1 90/10/05 16:28:56 nick Exp $
d74 1
a74 1
	$(CP) $(TARGETS) ../../$(HPROC)/hfs/lib
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
# RcsId: $Id$
d108 1
a108 1
SOURCES.odd	= makefile
@
